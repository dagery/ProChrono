
HronoV.1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000008c  00800100  0000230e  000023a2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000230e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000004c6  0080018c  0080018c  0000242e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000242e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000248c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000360  00000000  00000000  000024cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00003af9  00000000  00000000  0000282c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000011ac  00000000  00000000  00006325  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001ac4  00000000  00000000  000074d1  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000b4c  00000000  00000000  00008f98  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000c61  00000000  00000000  00009ae4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00003341  00000000  00000000  0000a745  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000003a8  00000000  00000000  0000da86  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 1d 02 	jmp	0x43a	; 0x43a <__ctors_end>
       4:	0c 94 1e 06 	jmp	0xc3c	; 0xc3c <__vector_1>
       8:	0c 94 ea 05 	jmp	0xbd4	; 0xbd4 <__vector_2>
       c:	0c 94 3a 02 	jmp	0x474	; 0x474 <__bad_interrupt>
      10:	0c 94 3a 02 	jmp	0x474	; 0x474 <__bad_interrupt>
      14:	0c 94 3a 02 	jmp	0x474	; 0x474 <__bad_interrupt>
      18:	0c 94 3a 02 	jmp	0x474	; 0x474 <__bad_interrupt>
      1c:	0c 94 3a 02 	jmp	0x474	; 0x474 <__bad_interrupt>
      20:	0c 94 3a 02 	jmp	0x474	; 0x474 <__bad_interrupt>
      24:	0c 94 3a 02 	jmp	0x474	; 0x474 <__bad_interrupt>
      28:	0c 94 3a 02 	jmp	0x474	; 0x474 <__bad_interrupt>
      2c:	0c 94 3a 02 	jmp	0x474	; 0x474 <__bad_interrupt>
      30:	0c 94 3a 02 	jmp	0x474	; 0x474 <__bad_interrupt>
      34:	0c 94 3a 02 	jmp	0x474	; 0x474 <__bad_interrupt>
      38:	0c 94 3a 02 	jmp	0x474	; 0x474 <__bad_interrupt>
      3c:	0c 94 3a 02 	jmp	0x474	; 0x474 <__bad_interrupt>
      40:	0c 94 64 06 	jmp	0xcc8	; 0xcc8 <__vector_16>
      44:	0c 94 3a 02 	jmp	0x474	; 0x474 <__bad_interrupt>
      48:	0c 94 e2 09 	jmp	0x13c4	; 0x13c4 <__vector_18>
      4c:	0c 94 c4 09 	jmp	0x1388	; 0x1388 <__vector_19>
      50:	0c 94 3a 02 	jmp	0x474	; 0x474 <__bad_interrupt>
      54:	0c 94 3a 02 	jmp	0x474	; 0x474 <__bad_interrupt>
      58:	0c 94 3a 02 	jmp	0x474	; 0x474 <__bad_interrupt>
      5c:	0c 94 3a 02 	jmp	0x474	; 0x474 <__bad_interrupt>
      60:	0c 94 3a 02 	jmp	0x474	; 0x474 <__bad_interrupt>
      64:	0c 94 3a 02 	jmp	0x474	; 0x474 <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	6e 61       	ori	r22, 0x1E	; 30
      6a:	6e 00       	.word	0x006e	; ????

0000006c <__c.2332>:
      6c:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      7c:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      8c:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      9c:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      ac:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      bc:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      cc:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      dc:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      ec:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
      fc:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     10c:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     11c:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     12c:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     13c:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     14c:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     15c:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000016a <menuText_Exit>:
     16a:	45 78 69 74 00                                      Exit.

0000016f <menuText_BulletMass>:
     16f:	42 75 6c 6c 65 74 20 6d 61 73 73 3a 20 25 2e 31     Bullet mass: %.1
     17f:	66 20 67 00                                         f g.

00000183 <menuText_Language>:
     183:	4c 61 6e 67 75 61 67 65 20 3a 20 25 73 00           Language : %s.

00000191 <menuText_Mode>:
     191:	4d 6f 64 65 20 3a 20 25 73 00                       Mode : %s.

0000019b <special_char>:
     19b:	bc 5f 9c 60 a4 61 84 62 b6 63 96 64 b0 65 9f 66     ._.`.a.b.c.d.e.f
     1ab:	b5 67 ff ff                                         .g..

000001af <ssd1306oled_font>:
	...
     1b7:	00 2f 00 00 00 00 07 00 07 00 00 14 7f 14 7f 14     ./..............
     1c7:	00 24 2a 7f 2a 12 00 62 64 08 13 23 00 36 49 55     .$*.*..bd..#.6IU
     1d7:	22 50 00 00 05 03 00 00 00 00 1c 22 41 00 00 00     "P........."A...
     1e7:	41 22 1c 00 00 14 08 3e 08 14 00 08 08 3e 08 08     A".....>.....>..
     1f7:	00 00 00 a0 60 00 00 08 08 08 08 08 00 00 60 60     ....`.........``
     207:	00 00 00 20 10 08 04 02 00 3e 51 49 45 3e 00 00     ... .....>QIE>..
     217:	42 7f 40 00 00 42 61 51 49 46 00 21 41 45 4b 31     B.@..BaQIF.!AEK1
     227:	00 18 14 12 7f 10 00 27 45 45 45 39 00 3c 4a 49     .......'EEE9.<JI
     237:	49 30 00 01 71 09 05 03 00 36 49 49 49 36 00 06     I0..q....6III6..
     247:	49 49 29 1e 00 00 36 36 00 00 00 00 56 36 00 00     II)...66....V6..
     257:	00 08 14 22 41 00 00 14 14 14 14 14 00 00 41 22     ..."A.........A"
     267:	14 08 00 02 01 51 09 06 00 32 49 59 51 3e 00 7c     .....Q...2IYQ>.|
     277:	12 11 12 7c 00 7f 49 49 49 36 00 3e 41 41 41 22     ...|..III6.>AAA"
     287:	00 7f 41 41 22 1c 00 7f 49 49 49 41 00 7f 09 09     ..AA"...IIIA....
     297:	09 01 00 3e 41 49 49 7a 00 7f 08 08 08 7f 00 00     ...>AIIz........
     2a7:	41 7f 41 00 00 20 40 41 3f 01 00 7f 08 14 22 41     A.A.. @A?....."A
     2b7:	00 7f 40 40 40 40 00 7f 02 0c 02 7f 00 7f 04 08     ..@@@@..........
     2c7:	10 7f 00 3e 41 41 41 3e 00 7f 09 09 09 06 00 3e     ...>AAA>.......>
     2d7:	41 51 21 5e 00 7f 09 19 29 46 00 46 49 49 49 31     AQ!^....)F.FIII1
     2e7:	00 01 01 7f 01 01 00 3f 40 40 40 3f 00 1f 20 40     .......?@@@?.. @
     2f7:	20 1f 00 3f 40 38 40 3f 00 63 14 08 14 63 00 07      ..?@8@?.c...c..
     307:	08 70 08 07 00 61 51 49 45 43 00 00 7f 41 41 00     .p...aQIEC...AA.
     317:	00 55 2a 55 2a 55 00 00 41 41 7f 00 00 04 02 01     .U*U*U..AA......
     327:	02 04 00 40 40 40 40 40 00 00 01 02 04 00 00 20     ...@@@@@....... 
     337:	54 54 54 78 00 7f 48 44 44 38 00 38 44 44 44 20     TTTx..HDD8.8DDD 
     347:	00 38 44 44 48 7f 00 38 54 54 54 18 00 08 7e 09     .8DDH..8TTT...~.
     357:	01 02 00 18 a4 a4 a4 7c 00 7f 08 04 04 78 00 00     .......|.....x..
     367:	44 7d 40 00 00 40 80 84 7d 00 00 7f 10 28 44 00     D}@..@..}....(D.
     377:	00 00 41 7f 40 00 00 7c 04 18 04 78 00 7c 08 04     ..A.@..|...x.|..
     387:	04 78 00 38 44 44 44 38 00 fc 24 24 24 18 00 18     .x.8DDD8..$$$...
     397:	24 24 18 fc 00 7c 08 04 04 08 00 48 54 54 54 20     $$...|.....HTTT 
     3a7:	00 04 3f 44 40 20 00 3c 40 40 20 7c 00 1c 20 40     ..?D@ .<@@ |.. @
     3b7:	20 1c 00 3c 40 30 40 3c 00 44 28 10 28 44 00 1c      ..<@0@<.D(.(D..
     3c7:	a0 a0 a0 7c 00 44 64 54 4c 44 00 00 08 77 41 00     ...|.DdTLD...wA.
     3d7:	00 00 00 63 00 00 00 00 41 77 08 00 00 08 04 08     ...c....Aw......
     3e7:	08 04 00 3a 40 40 20 7a 00 3d 40 40 40 3d 00 21     ...:@@ z.=@@@=.!
     3f7:	54 54 54 79 00 7d 12 11 12 7d 00 39 44 44 44 39     TTTy.}...}.9DDD9
     407:	00 3d 42 42 42 3d 00 02 05 02 00 00 00 7e 01 49     .=BBB=.......~.I
     417:	55 73 00 7c 10 10 08 1c                             Us.|....

0000041f <init_sequence>:
     41f:	ae 20 00 b0 c8 00 10 40 81 3f a1 a6 a8 3f a4 d3     . .....@.?...?..
     42f:	00 d5 f0 d9 22 da 12 db 20 8d 14                    ...."... ..

0000043a <__ctors_end>:
     43a:	11 24       	eor	r1, r1
     43c:	1f be       	out	0x3f, r1	; 63
     43e:	cf ef       	ldi	r28, 0xFF	; 255
     440:	d8 e0       	ldi	r29, 0x08	; 8
     442:	de bf       	out	0x3e, r29	; 62
     444:	cd bf       	out	0x3d, r28	; 61

00000446 <__do_copy_data>:
     446:	11 e0       	ldi	r17, 0x01	; 1
     448:	a0 e0       	ldi	r26, 0x00	; 0
     44a:	b1 e0       	ldi	r27, 0x01	; 1
     44c:	ee e0       	ldi	r30, 0x0E	; 14
     44e:	f3 e2       	ldi	r31, 0x23	; 35
     450:	02 c0       	rjmp	.+4      	; 0x456 <__do_copy_data+0x10>
     452:	05 90       	lpm	r0, Z+
     454:	0d 92       	st	X+, r0
     456:	ac 38       	cpi	r26, 0x8C	; 140
     458:	b1 07       	cpc	r27, r17
     45a:	d9 f7       	brne	.-10     	; 0x452 <__do_copy_data+0xc>

0000045c <__do_clear_bss>:
     45c:	26 e0       	ldi	r18, 0x06	; 6
     45e:	ac e8       	ldi	r26, 0x8C	; 140
     460:	b1 e0       	ldi	r27, 0x01	; 1
     462:	01 c0       	rjmp	.+2      	; 0x466 <.do_clear_bss_start>

00000464 <.do_clear_bss_loop>:
     464:	1d 92       	st	X+, r1

00000466 <.do_clear_bss_start>:
     466:	a2 35       	cpi	r26, 0x52	; 82
     468:	b2 07       	cpc	r27, r18
     46a:	e1 f7       	brne	.-8      	; 0x464 <.do_clear_bss_loop>
     46c:	0e 94 14 05 	call	0xa28	; 0xa28 <main>
     470:	0c 94 85 11 	jmp	0x230a	; 0x230a <_exit>

00000474 <__bad_interrupt>:
     474:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000478 <button_down>:
	if(buttons_up & (1 << bCode)){
		return 1;
	}else{
		return 0;
	}
}
     478:	20 91 8e 01 	lds	r18, 0x018E	; 0x80018e <buttons_down>
     47c:	30 e0       	ldi	r19, 0x00	; 0
     47e:	a9 01       	movw	r20, r18
     480:	02 c0       	rjmp	.+4      	; 0x486 <button_down+0xe>
     482:	55 95       	asr	r21
     484:	47 95       	ror	r20
     486:	8a 95       	dec	r24
     488:	e2 f7       	brpl	.-8      	; 0x482 <button_down+0xa>
     48a:	ca 01       	movw	r24, r20
     48c:	81 70       	andi	r24, 0x01	; 1
     48e:	08 95       	ret

00000490 <buttons_update>:

void buttons_update(){
     490:	e0 e0       	ldi	r30, 0x00	; 0
     492:	f1 e0       	ldi	r31, 0x01	; 1
     494:	43 e0       	ldi	r20, 0x03	; 3
     496:	51 e0       	ldi	r21, 0x01	; 1
				buttons_pressed &= ~(1 << buttons_scanArray[i]);
				buttons_up |= (1 << buttons_scanArray[i]);
			} 
			else
			{
				buttons_up &= ~(1 << buttons_scanArray[i]);
     498:	61 e0       	ldi	r22, 0x01	; 1
     49a:	70 e0       	ldi	r23, 0x00	; 0
}

void buttons_update(){
	int i;
	for(i = 0; i < sizeof(buttons_scanArray); i++){
		if(BUTTONS_PIN & (1 << buttons_scanArray[i])){
     49c:	86 b1       	in	r24, 0x06	; 6
     49e:	21 91       	ld	r18, Z+
     4a0:	90 e0       	ldi	r25, 0x00	; 0
     4a2:	02 2e       	mov	r0, r18
     4a4:	02 c0       	rjmp	.+4      	; 0x4aa <buttons_update+0x1a>
     4a6:	95 95       	asr	r25
     4a8:	87 95       	ror	r24
     4aa:	0a 94       	dec	r0
     4ac:	e2 f7       	brpl	.-8      	; 0x4a6 <buttons_update+0x16>
     4ae:	80 ff       	sbrs	r24, 0
     4b0:	33 c0       	rjmp	.+102    	; 0x518 <buttons_update+0x88>
			if(buttons_down & (1 << buttons_scanArray[i]) ){
     4b2:	30 91 8e 01 	lds	r19, 0x018E	; 0x80018e <buttons_down>
     4b6:	83 2f       	mov	r24, r19
     4b8:	90 e0       	ldi	r25, 0x00	; 0
     4ba:	02 2e       	mov	r0, r18
     4bc:	02 c0       	rjmp	.+4      	; 0x4c2 <buttons_update+0x32>
     4be:	95 95       	asr	r25
     4c0:	87 95       	ror	r24
     4c2:	0a 94       	dec	r0
     4c4:	e2 f7       	brpl	.-8      	; 0x4be <buttons_update+0x2e>
     4c6:	80 ff       	sbrs	r24, 0
     4c8:	12 c0       	rjmp	.+36     	; 0x4ee <buttons_update+0x5e>
				buttons_down &= ~(1 << buttons_scanArray[i]);
     4ca:	41 e0       	ldi	r20, 0x01	; 1
     4cc:	50 e0       	ldi	r21, 0x00	; 0
     4ce:	02 c0       	rjmp	.+4      	; 0x4d4 <buttons_update+0x44>
     4d0:	44 0f       	add	r20, r20
     4d2:	55 1f       	adc	r21, r21
     4d4:	2a 95       	dec	r18
     4d6:	e2 f7       	brpl	.-8      	; 0x4d0 <buttons_update+0x40>
     4d8:	84 2f       	mov	r24, r20
     4da:	80 95       	com	r24
     4dc:	83 23       	and	r24, r19
     4de:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <buttons_down>
				buttons_pressed |= (1 << buttons_scanArray[i]);
     4e2:	80 91 8d 01 	lds	r24, 0x018D	; 0x80018d <buttons_pressed>
     4e6:	48 2b       	or	r20, r24
     4e8:	40 93 8d 01 	sts	0x018D, r20	; 0x80018d <buttons_pressed>
				return;
     4ec:	08 95       	ret
			}else if(buttons_pressed & (1 << buttons_scanArray[i])){
     4ee:	80 91 8d 01 	lds	r24, 0x018D	; 0x80018d <buttons_pressed>
     4f2:	90 e0       	ldi	r25, 0x00	; 0
     4f4:	02 2e       	mov	r0, r18
     4f6:	02 c0       	rjmp	.+4      	; 0x4fc <buttons_update+0x6c>
     4f8:	95 95       	asr	r25
     4fa:	87 95       	ror	r24
     4fc:	0a 94       	dec	r0
     4fe:	e2 f7       	brpl	.-8      	; 0x4f8 <buttons_update+0x68>
     500:	80 fd       	sbrc	r24, 0
     502:	37 c0       	rjmp	.+110    	; 0x572 <buttons_update+0xe2>
				return;
			}else{
				buttons_down |= (1 << buttons_scanArray[i]);
     504:	cb 01       	movw	r24, r22
     506:	02 c0       	rjmp	.+4      	; 0x50c <buttons_update+0x7c>
     508:	88 0f       	add	r24, r24
     50a:	99 1f       	adc	r25, r25
     50c:	2a 95       	dec	r18
     50e:	e2 f7       	brpl	.-8      	; 0x508 <buttons_update+0x78>
     510:	83 2b       	or	r24, r19
     512:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <buttons_down>
     516:	29 c0       	rjmp	.+82     	; 0x56a <buttons_update+0xda>
			}
		}else{
			if (buttons_pressed & (1 << buttons_scanArray[i]))
     518:	30 91 8d 01 	lds	r19, 0x018D	; 0x80018d <buttons_pressed>
     51c:	83 2f       	mov	r24, r19
     51e:	90 e0       	ldi	r25, 0x00	; 0
     520:	02 2e       	mov	r0, r18
     522:	02 c0       	rjmp	.+4      	; 0x528 <buttons_update+0x98>
     524:	95 95       	asr	r25
     526:	87 95       	ror	r24
     528:	0a 94       	dec	r0
     52a:	e2 f7       	brpl	.-8      	; 0x524 <buttons_update+0x94>
     52c:	80 ff       	sbrs	r24, 0
     52e:	11 c0       	rjmp	.+34     	; 0x552 <buttons_update+0xc2>
			{
				buttons_pressed &= ~(1 << buttons_scanArray[i]);
     530:	cb 01       	movw	r24, r22
     532:	02 c0       	rjmp	.+4      	; 0x538 <buttons_update+0xa8>
     534:	88 0f       	add	r24, r24
     536:	99 1f       	adc	r25, r25
     538:	2a 95       	dec	r18
     53a:	e2 f7       	brpl	.-8      	; 0x534 <buttons_update+0xa4>
     53c:	98 2f       	mov	r25, r24
     53e:	90 95       	com	r25
     540:	39 23       	and	r19, r25
     542:	30 93 8d 01 	sts	0x018D, r19	; 0x80018d <buttons_pressed>
				buttons_up |= (1 << buttons_scanArray[i]);
     546:	90 91 8c 01 	lds	r25, 0x018C	; 0x80018c <__data_end>
     54a:	89 2b       	or	r24, r25
     54c:	80 93 8c 01 	sts	0x018C, r24	; 0x80018c <__data_end>
     550:	0c c0       	rjmp	.+24     	; 0x56a <buttons_update+0xda>
			} 
			else
			{
				buttons_up &= ~(1 << buttons_scanArray[i]);
     552:	cb 01       	movw	r24, r22
     554:	02 c0       	rjmp	.+4      	; 0x55a <buttons_update+0xca>
     556:	88 0f       	add	r24, r24
     558:	99 1f       	adc	r25, r25
     55a:	2a 95       	dec	r18
     55c:	e2 f7       	brpl	.-8      	; 0x556 <buttons_update+0xc6>
     55e:	80 95       	com	r24
     560:	90 91 8c 01 	lds	r25, 0x018C	; 0x80018c <__data_end>
     564:	89 23       	and	r24, r25
     566:	80 93 8c 01 	sts	0x018C, r24	; 0x80018c <__data_end>
	}
}

void buttons_update(){
	int i;
	for(i = 0; i < sizeof(buttons_scanArray); i++){
     56a:	e4 17       	cp	r30, r20
     56c:	f5 07       	cpc	r31, r21
     56e:	09 f0       	breq	.+2      	; 0x572 <buttons_update+0xe2>
     570:	95 cf       	rjmp	.-214    	; 0x49c <buttons_update+0xc>
     572:	08 95       	ret

00000574 <Init>:
	{
	#ifdef USART0_RS485_MODE
		RS485_CONTROL0_DDR |= (1<<RS485_CONTROL0_IONUM); // default pin state is low
	#endif
		
		UBRR0L_REGISTER = (uint8_t) ubrr_value;
     574:	88 e0       	ldi	r24, 0x08	; 8
     576:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
		
	#ifdef USART_SKIP_UBRRH_IF_ZERO
		if(__builtin_constant_p(ubrr_value))
			if(((ubrr_value>>8) != 0)) // requires -Os flag - do not use in non-inline functions
	#endif
			UBRR0H_REGISTER = (ubrr_value>>8);
     57a:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
		#endif
	#elif defined(USART0_MPCM_MODE)
		UCSR0A_REGISTER |= (1<<MPCM0_BIT);
	#endif
		
		UCSR0B_REGISTER = USART0_CONFIG_B;
     57e:	88 e9       	ldi	r24, 0x98	; 152
     580:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
void Init(){
	
	uart0_init(BAUD_CALC(115200));
	
	// Initialize ports for buttons
	DDRC	= (0 << PORTC0)|(0 <<PORTC1)|(0 << PORTC2); // Set buttons ports to inputs
     584:	17 b8       	out	0x07, r1	; 7
	PORTC	= (1 << PORTC0)|(1 <<PORTC1)|(1 << PORTC2); // Enable pull-up resistors
     586:	87 e0       	ldi	r24, 0x07	; 7
     588:	88 b9       	out	0x08, r24	; 8
	DDRD = (0 << PORTD3)|(0 << PORTD2);
     58a:	1a b8       	out	0x0a, r1	; 10
	//Initialize Timer0 for time measurements
	TCCR0A=(0<<COM0A1) | (0<<COM0A0) | (0<<COM0B1) | (0<<COM0B0) | (0<<WGM01) | (0<<WGM00);
     58c:	14 bc       	out	0x24, r1	; 36
	TCCR0B=(0<<WGM02) | (0<<CS02) | (0<<CS01) | (0<<CS00); //Timer Off
     58e:	15 bc       	out	0x25, r1	; 37
	TCNT0=0x00;
     590:	16 bc       	out	0x26, r1	; 38
	OCR0A=0x00;
     592:	17 bc       	out	0x27, r1	; 39
	OCR0B=0x00;
     594:	18 bc       	out	0x28, r1	; 40

	//Initialize interrupts
	// Timer/Counter 0 Interrupt(s) initialization
	TIMSK0=(0<<OCIE0B) | (0<<OCIE0A) | (1<<TOIE0); 
     596:	81 e0       	ldi	r24, 0x01	; 1
     598:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7e006e>
	// INT1: On
	// INT1 Mode: Rising Edge
	// Interrupt on any change on pins PCINT0-7: Off
	// Interrupt on any change on pins PCINT8-14: Off
	// Interrupt on any change on pins PCINT16-23: Off
	EICRA=(1<<ISC11) | (1<<ISC10) | (1<<ISC01) | (1<<ISC00);
     59c:	8f e0       	ldi	r24, 0x0F	; 15
     59e:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <__TEXT_REGION_LENGTH__+0x7e0069>
	EIMSK=(1<<INT1) | (1<<INT0);
     5a2:	83 e0       	ldi	r24, 0x03	; 3
     5a4:	8d bb       	out	0x1d, r24	; 29
	EIFR=(1<<INTF1) | (1<<INTF0);
     5a6:	8c bb       	out	0x1c, r24	; 28
	PCICR=(0<<PCIE2) | (0<<PCIE1) | (0<<PCIE0);
     5a8:	10 92 68 00 	sts	0x0068, r1	; 0x800068 <__TEXT_REGION_LENGTH__+0x7e0068>
	
	//Initialize OLED Display
	lcd_init(LCD_DISP_ON); 
     5ac:	8f ea       	ldi	r24, 0xAF	; 175
     5ae:	0e 94 e7 07 	call	0xfce	; 0xfce <lcd_init>
		lcd_drawBitmap(64 , 20 , buletImg , 21,9 , WHITE);
		lcd_display();
		_delay_ms(3000);
	#endif
	
	stateSet(STATE_MAIN_SCREEN_UPDATE);
     5b2:	83 e0       	ldi	r24, 0x03	; 3
     5b4:	0e 94 c0 09 	call	0x1380	; 0x1380 <stateSet>
     5b8:	08 95       	ret

000005ba <Calculate>:
		
		buttons_update();
    }
}

void Calculate(){
     5ba:	8f 92       	push	r8
     5bc:	9f 92       	push	r9
     5be:	af 92       	push	r10
     5c0:	bf 92       	push	r11
     5c2:	cf 92       	push	r12
     5c4:	df 92       	push	r13
     5c6:	ef 92       	push	r14
     5c8:	ff 92       	push	r15
     5ca:	0f 93       	push	r16
     5cc:	1f 93       	push	r17
     5ce:	cf 93       	push	r28
     5d0:	df 93       	push	r29
	float time = data.timeCounter; //time in ms
     5d2:	c0 90 93 05 	lds	r12, 0x0593	; 0x800593 <data>
     5d6:	d0 90 94 05 	lds	r13, 0x0594	; 0x800594 <data+0x1>
     5da:	e0 90 95 05 	lds	r14, 0x0595	; 0x800595 <data+0x2>
     5de:	f0 90 96 05 	lds	r15, 0x0596	; 0x800596 <data+0x3>
	if(!(time <= 0)){
     5e2:	20 e0       	ldi	r18, 0x00	; 0
     5e4:	30 e0       	ldi	r19, 0x00	; 0
     5e6:	a9 01       	movw	r20, r18
     5e8:	c7 01       	movw	r24, r14
     5ea:	b6 01       	movw	r22, r12
     5ec:	0e 94 1e 0e 	call	0x1c3c	; 0x1c3c <__cmpsf2>
     5f0:	18 16       	cp	r1, r24
     5f2:	0c f0       	brlt	.+2      	; 0x5f6 <Calculate+0x3c>
     5f4:	94 c0       	rjmp	.+296    	; 0x71e <Calculate+0x164>
		data.speed = ((double)DISTANCE/1000.0)/(time/1000.0);
     5f6:	20 e0       	ldi	r18, 0x00	; 0
     5f8:	30 e0       	ldi	r19, 0x00	; 0
     5fa:	4a e7       	ldi	r20, 0x7A	; 122
     5fc:	54 e4       	ldi	r21, 0x44	; 68
     5fe:	c7 01       	movw	r24, r14
     600:	b6 01       	movw	r22, r12
     602:	0e 94 23 0e 	call	0x1c46	; 0x1c46 <__divsf3>
     606:	9b 01       	movw	r18, r22
     608:	ac 01       	movw	r20, r24
     60a:	6d ec       	ldi	r22, 0xCD	; 205
     60c:	7c ec       	ldi	r23, 0xCC	; 204
     60e:	8c ec       	ldi	r24, 0xCC	; 204
     610:	9d e3       	ldi	r25, 0x3D	; 61
     612:	0e 94 23 0e 	call	0x1c46	; 0x1c46 <__divsf3>
     616:	6b 01       	movw	r12, r22
     618:	7c 01       	movw	r14, r24
     61a:	c3 e9       	ldi	r28, 0x93	; 147
     61c:	d5 e0       	ldi	r29, 0x05	; 5
     61e:	6c 83       	std	Y+4, r22	; 0x04
     620:	7d 83       	std	Y+5, r23	; 0x05
     622:	8e 83       	std	Y+6, r24	; 0x06
     624:	9f 83       	std	Y+7, r25	; 0x07

		data.energy = ((settings.bullet_mass/1000.0) * (data.speed * data.speed))/2.0;
     626:	20 e0       	ldi	r18, 0x00	; 0
     628:	30 e0       	ldi	r19, 0x00	; 0
     62a:	4a e7       	ldi	r20, 0x7A	; 122
     62c:	54 e4       	ldi	r21, 0x44	; 68
     62e:	60 91 41 01 	lds	r22, 0x0141	; 0x800141 <settings+0x3>
     632:	70 91 42 01 	lds	r23, 0x0142	; 0x800142 <settings+0x4>
     636:	80 91 43 01 	lds	r24, 0x0143	; 0x800143 <settings+0x5>
     63a:	90 91 44 01 	lds	r25, 0x0144	; 0x800144 <settings+0x6>
     63e:	0e 94 23 0e 	call	0x1c46	; 0x1c46 <__divsf3>
     642:	4b 01       	movw	r8, r22
     644:	5c 01       	movw	r10, r24
     646:	a7 01       	movw	r20, r14
     648:	96 01       	movw	r18, r12
     64a:	c7 01       	movw	r24, r14
     64c:	b6 01       	movw	r22, r12
     64e:	0e 94 4c 0f 	call	0x1e98	; 0x1e98 <__mulsf3>
     652:	9b 01       	movw	r18, r22
     654:	ac 01       	movw	r20, r24
     656:	c5 01       	movw	r24, r10
     658:	b4 01       	movw	r22, r8
     65a:	0e 94 4c 0f 	call	0x1e98	; 0x1e98 <__mulsf3>
     65e:	20 e0       	ldi	r18, 0x00	; 0
     660:	30 e0       	ldi	r19, 0x00	; 0
     662:	40 e0       	ldi	r20, 0x00	; 0
     664:	5f e3       	ldi	r21, 0x3F	; 63
     666:	0e 94 4c 0f 	call	0x1e98	; 0x1e98 <__mulsf3>
     66a:	68 87       	std	Y+8, r22	; 0x08
     66c:	79 87       	std	Y+9, r23	; 0x09
     66e:	8a 87       	std	Y+10, r24	; 0x0a
     670:	9b 87       	std	Y+11, r25	; 0x0b
	
		if(data._buff_counter++ > 25) data._buff_counter = 0;
     672:	8c 85       	ldd	r24, Y+12	; 0x0c
     674:	9d 85       	ldd	r25, Y+13	; 0x0d
     676:	8a 31       	cpi	r24, 0x1A	; 26
     678:	91 05       	cpc	r25, r1
     67a:	34 f4       	brge	.+12     	; 0x688 <Calculate+0xce>
     67c:	01 96       	adiw	r24, 0x01	; 1
     67e:	90 93 a0 05 	sts	0x05A0, r25	; 0x8005a0 <data+0xd>
     682:	80 93 9f 05 	sts	0x059F, r24	; 0x80059f <data+0xc>
     686:	04 c0       	rjmp	.+8      	; 0x690 <Calculate+0xd6>
     688:	10 92 a0 05 	sts	0x05A0, r1	; 0x8005a0 <data+0xd>
     68c:	10 92 9f 05 	sts	0x059F, r1	; 0x80059f <data+0xc>
	
		data.lastShoots[data._buff_counter] = data.speed;
     690:	e3 e9       	ldi	r30, 0x93	; 147
     692:	f5 e0       	ldi	r31, 0x05	; 5
     694:	a4 85       	ldd	r26, Z+12	; 0x0c
     696:	b5 85       	ldd	r27, Z+13	; 0x0d
     698:	aa 0f       	add	r26, r26
     69a:	bb 1f       	adc	r27, r27
     69c:	aa 0f       	add	r26, r26
     69e:	bb 1f       	adc	r27, r27
     6a0:	ad 56       	subi	r26, 0x6D	; 109
     6a2:	ba 4f       	sbci	r27, 0xFA	; 250
     6a4:	1e 96       	adiw	r26, 0x0e	; 14
     6a6:	cd 92       	st	X+, r12
     6a8:	dd 92       	st	X+, r13
     6aa:	ed 92       	st	X+, r14
     6ac:	fc 92       	st	X, r15
     6ae:	51 97       	sbiw	r26, 0x11	; 17
	
		data.maxSpeed = data.lastShoots[0];
     6b0:	86 84       	ldd	r8, Z+14	; 0x0e
     6b2:	97 84       	ldd	r9, Z+15	; 0x0f
     6b4:	a0 88       	ldd	r10, Z+16	; 0x10
     6b6:	b1 88       	ldd	r11, Z+17	; 0x11
     6b8:	88 2d       	mov	r24, r8
     6ba:	99 2d       	mov	r25, r9
     6bc:	aa 2d       	mov	r26, r10
     6be:	bb 2d       	mov	r27, r11
     6c0:	80 93 05 06 	sts	0x0605, r24	; 0x800605 <data+0x72>
     6c4:	90 93 06 06 	sts	0x0606, r25	; 0x800606 <data+0x73>
     6c8:	a0 93 07 06 	sts	0x0607, r26	; 0x800607 <data+0x74>
     6cc:	b0 93 08 06 	sts	0x0608, r27	; 0x800608 <data+0x75>
     6d0:	c5 ea       	ldi	r28, 0xA5	; 165
     6d2:	d5 e0       	ldi	r29, 0x05	; 5
     6d4:	05 e0       	ldi	r16, 0x05	; 5
     6d6:	16 e0       	ldi	r17, 0x06	; 6
     6d8:	12 c0       	rjmp	.+36     	; 0x6fe <Calculate+0x144>
		int i;
		for (i = 0; i < 25; i++)
		{
			if(data.maxSpeed < data.lastShoots[i])
     6da:	c9 90       	ld	r12, Y+
     6dc:	d9 90       	ld	r13, Y+
     6de:	e9 90       	ld	r14, Y+
     6e0:	f9 90       	ld	r15, Y+
     6e2:	28 2d       	mov	r18, r8
     6e4:	39 2d       	mov	r19, r9
     6e6:	4a 2d       	mov	r20, r10
     6e8:	5b 2d       	mov	r21, r11
     6ea:	c7 01       	movw	r24, r14
     6ec:	b6 01       	movw	r22, r12
     6ee:	0e 94 47 0f 	call	0x1e8e	; 0x1e8e <__gesf2>
     6f2:	18 16       	cp	r1, r24
     6f4:	24 f4       	brge	.+8      	; 0x6fe <Calculate+0x144>
			data.maxSpeed = data.lastShoots[i];
     6f6:	8c 2c       	mov	r8, r12
     6f8:	9d 2c       	mov	r9, r13
     6fa:	ae 2c       	mov	r10, r14
     6fc:	bf 2c       	mov	r11, r15
	
		data.lastShoots[data._buff_counter] = data.speed;
	
		data.maxSpeed = data.lastShoots[0];
		int i;
		for (i = 0; i < 25; i++)
     6fe:	c0 17       	cp	r28, r16
     700:	d1 07       	cpc	r29, r17
     702:	59 f7       	brne	.-42     	; 0x6da <Calculate+0x120>
     704:	88 2d       	mov	r24, r8
     706:	99 2d       	mov	r25, r9
     708:	aa 2d       	mov	r26, r10
     70a:	bb 2d       	mov	r27, r11
     70c:	80 93 05 06 	sts	0x0605, r24	; 0x800605 <data+0x72>
     710:	90 93 06 06 	sts	0x0606, r25	; 0x800606 <data+0x73>
     714:	a0 93 07 06 	sts	0x0607, r26	; 0x800607 <data+0x74>
     718:	b0 93 08 06 	sts	0x0608, r27	; 0x800608 <data+0x75>
     71c:	12 c0       	rjmp	.+36     	; 0x742 <Calculate+0x188>
		{
			if(data.maxSpeed < data.lastShoots[i])
			data.maxSpeed = data.lastShoots[i];
		} 
	}else{
		data.speed = 0;
     71e:	e3 e9       	ldi	r30, 0x93	; 147
     720:	f5 e0       	ldi	r31, 0x05	; 5
     722:	14 82       	std	Z+4, r1	; 0x04
     724:	15 82       	std	Z+5, r1	; 0x05
     726:	16 82       	std	Z+6, r1	; 0x06
     728:	17 82       	std	Z+7, r1	; 0x07
		data.energy = 0;
     72a:	10 86       	std	Z+8, r1	; 0x08
     72c:	11 86       	std	Z+9, r1	; 0x09
     72e:	12 86       	std	Z+10, r1	; 0x0a
     730:	13 86       	std	Z+11, r1	; 0x0b
		data.maxSpeed = 0;
     732:	10 92 05 06 	sts	0x0605, r1	; 0x800605 <data+0x72>
     736:	10 92 06 06 	sts	0x0606, r1	; 0x800606 <data+0x73>
     73a:	10 92 07 06 	sts	0x0607, r1	; 0x800607 <data+0x74>
     73e:	10 92 08 06 	sts	0x0608, r1	; 0x800608 <data+0x75>
	}
}
     742:	df 91       	pop	r29
     744:	cf 91       	pop	r28
     746:	1f 91       	pop	r17
     748:	0f 91       	pop	r16
     74a:	ff 90       	pop	r15
     74c:	ef 90       	pop	r14
     74e:	df 90       	pop	r13
     750:	cf 90       	pop	r12
     752:	bf 90       	pop	r11
     754:	af 90       	pop	r10
     756:	9f 90       	pop	r9
     758:	8f 90       	pop	r8
     75a:	08 95       	ret

0000075c <DisplayMenu>:



void DisplayMenu(){
     75c:	bf 92       	push	r11
     75e:	cf 92       	push	r12
     760:	df 92       	push	r13
     762:	ef 92       	push	r14
     764:	ff 92       	push	r15
     766:	0f 93       	push	r16
     768:	1f 93       	push	r17
     76a:	cf 93       	push	r28
     76c:	df 93       	push	r29
     76e:	cd b7       	in	r28, 0x3d	; 61
     770:	de b7       	in	r29, 0x3e	; 62
     772:	a0 97       	sbiw	r28, 0x20	; 32
     774:	0f b6       	in	r0, 0x3f	; 63
     776:	f8 94       	cli
     778:	de bf       	out	0x3e, r29	; 62
     77a:	0f be       	out	0x3f, r0	; 63
     77c:	cd bf       	out	0x3d, r28	; 61
	
	char buffer[32] = {};
     77e:	fe 01       	movw	r30, r28
     780:	31 96       	adiw	r30, 0x01	; 1
     782:	80 e2       	ldi	r24, 0x20	; 32
     784:	df 01       	movw	r26, r30
     786:	1d 92       	st	X+, r1
     788:	8a 95       	dec	r24
     78a:	e9 f7       	brne	.-6      	; 0x786 <DisplayMenu+0x2a>
	lcd_clrscr();
     78c:	0e 94 c5 07 	call	0xf8a	; 0xf8a <lcd_clrscr>
	lcd_gotoxy(9 , 0);
     790:	60 e0       	ldi	r22, 0x00	; 0
     792:	89 e0       	ldi	r24, 0x09	; 9
     794:	0e 94 b9 07 	call	0xf72	; 0xf72 <lcd_gotoxy>
	lcd_puts("Menu");
     798:	85 e4       	ldi	r24, 0x45	; 69
     79a:	91 e0       	ldi	r25, 0x01	; 1
     79c:	0e 94 96 09 	call	0x132c	; 0x132c <lcd_puts>
     7a0:	0f 2e       	mov	r0, r31
     7a2:	f3 e0       	ldi	r31, 0x03	; 3
     7a4:	ef 2e       	mov	r14, r31
     7a6:	f1 e0       	ldi	r31, 0x01	; 1
     7a8:	ff 2e       	mov	r15, r31
     7aa:	f0 2d       	mov	r31, r0
     7ac:	bb 24       	eor	r11, r11
     7ae:	b3 94       	inc	r11
				sprintf_P(buffer , menu[i].str ,(*menu[i].vars)[(*menu[i].var_selected)]);
			}else{
				sprintf_P(buffer , menu[i].str ,(*menu[i].var_inputFloat));
			}
		}else{
			sprintf_P(buffer , menu[i].str);
     7b0:	fe 01       	movw	r30, r28
     7b2:	31 96       	adiw	r30, 0x01	; 1
     7b4:	6f 01       	movw	r12, r30
	lcd_puts("Menu");

	int i;
	for (i = 0 ; i < 4; i++)
	{
		lcd_gotoxy(0 , 1 + i);
     7b6:	6b 2d       	mov	r22, r11
     7b8:	80 e0       	ldi	r24, 0x00	; 0
     7ba:	0e 94 b9 07 	call	0xf72	; 0xf72 <lcd_gotoxy>
     7be:	87 01       	movw	r16, r14
		
		if(menu[i].selected)
     7c0:	d7 01       	movw	r26, r14
     7c2:	8c 91       	ld	r24, X
     7c4:	88 23       	and	r24, r24
     7c6:	29 f0       	breq	.+10     	; 0x7d2 <DisplayMenu+0x76>
			lcd_puts(">");
     7c8:	8a e4       	ldi	r24, 0x4A	; 74
     7ca:	91 e0       	ldi	r25, 0x01	; 1
     7cc:	0e 94 96 09 	call	0x132c	; 0x132c <lcd_puts>
     7d0:	04 c0       	rjmp	.+8      	; 0x7da <DisplayMenu+0x7e>
		else
			lcd_puts(" ");
     7d2:	8c e4       	ldi	r24, 0x4C	; 76
     7d4:	91 e0       	ldi	r25, 0x01	; 1
     7d6:	0e 94 96 09 	call	0x132c	; 0x132c <lcd_puts>
		
		if(menu[i].vars_count > 0){
     7da:	f8 01       	movw	r30, r16
     7dc:	81 85       	ldd	r24, Z+9	; 0x09
     7de:	88 23       	and	r24, r24
     7e0:	09 f4       	brne	.+2      	; 0x7e4 <DisplayMenu+0x88>
     7e2:	42 c0       	rjmp	.+132    	; 0x868 <DisplayMenu+0x10c>
			if(menu[i].vars_count > 1){
     7e4:	82 30       	cpi	r24, 0x02	; 2
     7e6:	18 f1       	brcs	.+70     	; 0x82e <DisplayMenu+0xd2>
				sprintf_P(buffer , menu[i].str ,(*menu[i].vars)[(*menu[i].var_selected)]);
     7e8:	23 81       	ldd	r18, Z+3	; 0x03
     7ea:	34 81       	ldd	r19, Z+4	; 0x04
     7ec:	07 80       	ldd	r0, Z+7	; 0x07
     7ee:	f0 85       	ldd	r31, Z+8	; 0x08
     7f0:	e0 2d       	mov	r30, r0
     7f2:	80 81       	ld	r24, Z
     7f4:	e8 2f       	mov	r30, r24
     7f6:	f0 e0       	ldi	r31, 0x00	; 0
     7f8:	ee 0f       	add	r30, r30
     7fa:	ff 1f       	adc	r31, r31
     7fc:	e2 0f       	add	r30, r18
     7fe:	f3 1f       	adc	r31, r19
     800:	81 81       	ldd	r24, Z+1	; 0x01
     802:	8f 93       	push	r24
     804:	80 81       	ld	r24, Z
     806:	8f 93       	push	r24
     808:	d8 01       	movw	r26, r16
     80a:	12 96       	adiw	r26, 0x02	; 2
     80c:	8c 91       	ld	r24, X
     80e:	12 97       	sbiw	r26, 0x02	; 2
     810:	8f 93       	push	r24
     812:	11 96       	adiw	r26, 0x01	; 1
     814:	8c 91       	ld	r24, X
     816:	8f 93       	push	r24
     818:	df 92       	push	r13
     81a:	cf 92       	push	r12
     81c:	0e 94 05 11 	call	0x220a	; 0x220a <sprintf_P>
     820:	0f 90       	pop	r0
     822:	0f 90       	pop	r0
     824:	0f 90       	pop	r0
     826:	0f 90       	pop	r0
     828:	0f 90       	pop	r0
     82a:	0f 90       	pop	r0
     82c:	29 c0       	rjmp	.+82     	; 0x880 <DisplayMenu+0x124>
			}else{
				sprintf_P(buffer , menu[i].str ,(*menu[i].var_inputFloat));
     82e:	d8 01       	movw	r26, r16
     830:	05 80       	ldd	r0, Z+5	; 0x05
     832:	f6 81       	ldd	r31, Z+6	; 0x06
     834:	e0 2d       	mov	r30, r0
     836:	83 81       	ldd	r24, Z+3	; 0x03
     838:	8f 93       	push	r24
     83a:	82 81       	ldd	r24, Z+2	; 0x02
     83c:	8f 93       	push	r24
     83e:	81 81       	ldd	r24, Z+1	; 0x01
     840:	8f 93       	push	r24
     842:	80 81       	ld	r24, Z
     844:	8f 93       	push	r24
     846:	12 96       	adiw	r26, 0x02	; 2
     848:	8c 91       	ld	r24, X
     84a:	12 97       	sbiw	r26, 0x02	; 2
     84c:	8f 93       	push	r24
     84e:	11 96       	adiw	r26, 0x01	; 1
     850:	8c 91       	ld	r24, X
     852:	8f 93       	push	r24
     854:	df 92       	push	r13
     856:	cf 92       	push	r12
     858:	0e 94 05 11 	call	0x220a	; 0x220a <sprintf_P>
     85c:	0f b6       	in	r0, 0x3f	; 63
     85e:	f8 94       	cli
     860:	de bf       	out	0x3e, r29	; 62
     862:	0f be       	out	0x3f, r0	; 63
     864:	cd bf       	out	0x3d, r28	; 61
     866:	0c c0       	rjmp	.+24     	; 0x880 <DisplayMenu+0x124>
			}
		}else{
			sprintf_P(buffer , menu[i].str);
     868:	82 81       	ldd	r24, Z+2	; 0x02
     86a:	8f 93       	push	r24
     86c:	81 81       	ldd	r24, Z+1	; 0x01
     86e:	8f 93       	push	r24
     870:	df 92       	push	r13
     872:	cf 92       	push	r12
     874:	0e 94 05 11 	call	0x220a	; 0x220a <sprintf_P>
     878:	0f 90       	pop	r0
     87a:	0f 90       	pop	r0
     87c:	0f 90       	pop	r0
     87e:	0f 90       	pop	r0
		}
		lcd_puts(buffer);
     880:	c6 01       	movw	r24, r12
     882:	0e 94 96 09 	call	0x132c	; 0x132c <lcd_puts>
		lcd_display();
     886:	0e 94 a5 09 	call	0x134a	; 0x134a <lcd_display>
     88a:	b3 94       	inc	r11
     88c:	bc e0       	ldi	r27, 0x0C	; 12
     88e:	eb 0e       	add	r14, r27
     890:	f1 1c       	adc	r15, r1
	lcd_clrscr();
	lcd_gotoxy(9 , 0);
	lcd_puts("Menu");

	int i;
	for (i = 0 ; i < 4; i++)
     892:	e5 e0       	ldi	r30, 0x05	; 5
     894:	be 12       	cpse	r11, r30
     896:	8f cf       	rjmp	.-226    	; 0x7b6 <DisplayMenu+0x5a>
		lcd_display();
	}
	
	
	
}
     898:	a0 96       	adiw	r28, 0x20	; 32
     89a:	0f b6       	in	r0, 0x3f	; 63
     89c:	f8 94       	cli
     89e:	de bf       	out	0x3e, r29	; 62
     8a0:	0f be       	out	0x3f, r0	; 63
     8a2:	cd bf       	out	0x3d, r28	; 61
     8a4:	df 91       	pop	r29
     8a6:	cf 91       	pop	r28
     8a8:	1f 91       	pop	r17
     8aa:	0f 91       	pop	r16
     8ac:	ff 90       	pop	r15
     8ae:	ef 90       	pop	r14
     8b0:	df 90       	pop	r13
     8b2:	cf 90       	pop	r12
     8b4:	bf 90       	pop	r11
     8b6:	08 95       	ret

000008b8 <DisplayUpdate>:

void DisplayUpdate(){
     8b8:	df 92       	push	r13
     8ba:	ef 92       	push	r14
     8bc:	ff 92       	push	r15
     8be:	0f 93       	push	r16
     8c0:	1f 93       	push	r17
     8c2:	cf 93       	push	r28
     8c4:	df 93       	push	r29
     8c6:	cd b7       	in	r28, 0x3d	; 61
     8c8:	de b7       	in	r29, 0x3e	; 62
     8ca:	a0 97       	sbiw	r28, 0x20	; 32
     8cc:	0f b6       	in	r0, 0x3f	; 63
     8ce:	f8 94       	cli
     8d0:	de bf       	out	0x3e, r29	; 62
     8d2:	0f be       	out	0x3f, r0	; 63
     8d4:	cd bf       	out	0x3d, r28	; 61
	
	char buffer[32] = {};
     8d6:	ce 01       	movw	r24, r28
     8d8:	01 96       	adiw	r24, 0x01	; 1
     8da:	7c 01       	movw	r14, r24
     8dc:	80 e2       	ldi	r24, 0x20	; 32
     8de:	f7 01       	movw	r30, r14
     8e0:	11 92       	st	Z+, r1
     8e2:	8a 95       	dec	r24
     8e4:	e9 f7       	brne	.-6      	; 0x8e0 <DisplayUpdate+0x28>
	lcd_clrscr();
     8e6:	0e 94 c5 07 	call	0xf8a	; 0xf8a <lcd_clrscr>
	lcd_charMode(DOUBLESIZE);
     8ea:	82 e0       	ldi	r24, 0x02	; 2
     8ec:	0e 94 93 09 	call	0x1326	; 0x1326 <lcd_charMode>
	lcd_gotoxy(0,0);
     8f0:	60 e0       	ldi	r22, 0x00	; 0
     8f2:	80 e0       	ldi	r24, 0x00	; 0
     8f4:	0e 94 b9 07 	call	0xf72	; 0xf72 <lcd_gotoxy>
	sprintf(buffer , "%05.1lf m/s" , data.speed);
     8f8:	03 e9       	ldi	r16, 0x93	; 147
     8fa:	15 e0       	ldi	r17, 0x05	; 5
     8fc:	f8 01       	movw	r30, r16
     8fe:	87 81       	ldd	r24, Z+7	; 0x07
     900:	8f 93       	push	r24
     902:	86 81       	ldd	r24, Z+6	; 0x06
     904:	8f 93       	push	r24
     906:	85 81       	ldd	r24, Z+5	; 0x05
     908:	8f 93       	push	r24
     90a:	84 81       	ldd	r24, Z+4	; 0x04
     90c:	8f 93       	push	r24
     90e:	86 e6       	ldi	r24, 0x66	; 102
     910:	91 e0       	ldi	r25, 0x01	; 1
     912:	9f 93       	push	r25
     914:	8f 93       	push	r24
     916:	ff 92       	push	r15
     918:	ef 92       	push	r14
     91a:	0e 94 e3 10 	call	0x21c6	; 0x21c6 <sprintf>
	lcd_puts(buffer);
     91e:	c7 01       	movw	r24, r14
     920:	0e 94 96 09 	call	0x132c	; 0x132c <lcd_puts>
	lcd_gotoxy(0,2);
     924:	62 e0       	ldi	r22, 0x02	; 2
     926:	80 e0       	ldi	r24, 0x00	; 0
     928:	0e 94 b9 07 	call	0xf72	; 0xf72 <lcd_gotoxy>
	if(data.energy < 1){
     92c:	f8 01       	movw	r30, r16
     92e:	f0 84       	ldd	r15, Z+8	; 0x08
     930:	e1 84       	ldd	r14, Z+9	; 0x09
     932:	d2 84       	ldd	r13, Z+10	; 0x0a
     934:	13 85       	ldd	r17, Z+11	; 0x0b
     936:	0f b6       	in	r0, 0x3f	; 63
     938:	f8 94       	cli
     93a:	de bf       	out	0x3e, r29	; 62
     93c:	0f be       	out	0x3f, r0	; 63
     93e:	cd bf       	out	0x3d, r28	; 61
     940:	20 e0       	ldi	r18, 0x00	; 0
     942:	30 e0       	ldi	r19, 0x00	; 0
     944:	40 e8       	ldi	r20, 0x80	; 128
     946:	5f e3       	ldi	r21, 0x3F	; 63
     948:	6f 2d       	mov	r22, r15
     94a:	7e 2d       	mov	r23, r14
     94c:	8d 2d       	mov	r24, r13
     94e:	91 2f       	mov	r25, r17
     950:	0e 94 1e 0e 	call	0x1c3c	; 0x1c3c <__cmpsf2>
     954:	88 23       	and	r24, r24
     956:	f4 f4       	brge	.+60     	; 0x994 <__stack+0x95>
		sprintf(buffer , "%05.2f mJ" , data.energy*1000.0);
     958:	20 e0       	ldi	r18, 0x00	; 0
     95a:	30 e0       	ldi	r19, 0x00	; 0
     95c:	4a e7       	ldi	r20, 0x7A	; 122
     95e:	54 e4       	ldi	r21, 0x44	; 68
     960:	6f 2d       	mov	r22, r15
     962:	7e 2d       	mov	r23, r14
     964:	8d 2d       	mov	r24, r13
     966:	91 2f       	mov	r25, r17
     968:	0e 94 4c 0f 	call	0x1e98	; 0x1e98 <__mulsf3>
     96c:	9f 93       	push	r25
     96e:	8f 93       	push	r24
     970:	7f 93       	push	r23
     972:	6f 93       	push	r22
     974:	8e e4       	ldi	r24, 0x4E	; 78
     976:	91 e0       	ldi	r25, 0x01	; 1
     978:	9f 93       	push	r25
     97a:	8f 93       	push	r24
     97c:	ce 01       	movw	r24, r28
     97e:	01 96       	adiw	r24, 0x01	; 1
     980:	9f 93       	push	r25
     982:	8f 93       	push	r24
     984:	0e 94 e3 10 	call	0x21c6	; 0x21c6 <sprintf>
     988:	0f b6       	in	r0, 0x3f	; 63
     98a:	f8 94       	cli
     98c:	de bf       	out	0x3e, r29	; 62
     98e:	0f be       	out	0x3f, r0	; 63
     990:	cd bf       	out	0x3d, r28	; 61
     992:	13 c0       	rjmp	.+38     	; 0x9ba <__stack+0xbb>
	}else{
		sprintf(buffer , "%05.1f  J" , data.energy);
     994:	1f 93       	push	r17
     996:	df 92       	push	r13
     998:	ef 92       	push	r14
     99a:	ff 92       	push	r15
     99c:	88 e5       	ldi	r24, 0x58	; 88
     99e:	91 e0       	ldi	r25, 0x01	; 1
     9a0:	9f 93       	push	r25
     9a2:	8f 93       	push	r24
     9a4:	ce 01       	movw	r24, r28
     9a6:	01 96       	adiw	r24, 0x01	; 1
     9a8:	9f 93       	push	r25
     9aa:	8f 93       	push	r24
     9ac:	0e 94 e3 10 	call	0x21c6	; 0x21c6 <sprintf>
     9b0:	0f b6       	in	r0, 0x3f	; 63
     9b2:	f8 94       	cli
     9b4:	de bf       	out	0x3e, r29	; 62
     9b6:	0f be       	out	0x3f, r0	; 63
     9b8:	cd bf       	out	0x3d, r28	; 61
	}
	lcd_puts(buffer);
     9ba:	8e 01       	movw	r16, r28
     9bc:	0f 5f       	subi	r16, 0xFF	; 255
     9be:	1f 4f       	sbci	r17, 0xFF	; 255
     9c0:	c8 01       	movw	r24, r16
     9c2:	0e 94 96 09 	call	0x132c	; 0x132c <lcd_puts>
	
	lcd_charMode(NORMALSIZE);
     9c6:	81 e0       	ldi	r24, 0x01	; 1
     9c8:	0e 94 93 09 	call	0x1326	; 0x1326 <lcd_charMode>
	lcd_gotoxy(0,5);
     9cc:	65 e0       	ldi	r22, 0x05	; 5
     9ce:	80 e0       	ldi	r24, 0x00	; 0
     9d0:	0e 94 b9 07 	call	0xf72	; 0xf72 <lcd_gotoxy>
	sprintf(buffer , "max:%05.1lf m/s" , data.maxSpeed);
     9d4:	e5 e0       	ldi	r30, 0x05	; 5
     9d6:	f6 e0       	ldi	r31, 0x06	; 6
     9d8:	83 81       	ldd	r24, Z+3	; 0x03
     9da:	8f 93       	push	r24
     9dc:	82 81       	ldd	r24, Z+2	; 0x02
     9de:	8f 93       	push	r24
     9e0:	81 81       	ldd	r24, Z+1	; 0x01
     9e2:	8f 93       	push	r24
     9e4:	80 81       	ld	r24, Z
     9e6:	8f 93       	push	r24
     9e8:	82 e6       	ldi	r24, 0x62	; 98
     9ea:	91 e0       	ldi	r25, 0x01	; 1
     9ec:	9f 93       	push	r25
     9ee:	8f 93       	push	r24
     9f0:	1f 93       	push	r17
     9f2:	0f 93       	push	r16
     9f4:	0e 94 e3 10 	call	0x21c6	; 0x21c6 <sprintf>
	lcd_puts(buffer);
     9f8:	c8 01       	movw	r24, r16
     9fa:	0e 94 96 09 	call	0x132c	; 0x132c <lcd_puts>
	lcd_display();
     9fe:	0e 94 a5 09 	call	0x134a	; 0x134a <lcd_display>
}
     a02:	0f b6       	in	r0, 0x3f	; 63
     a04:	f8 94       	cli
     a06:	de bf       	out	0x3e, r29	; 62
     a08:	0f be       	out	0x3f, r0	; 63
     a0a:	cd bf       	out	0x3d, r28	; 61
     a0c:	a0 96       	adiw	r28, 0x20	; 32
     a0e:	0f b6       	in	r0, 0x3f	; 63
     a10:	f8 94       	cli
     a12:	de bf       	out	0x3e, r29	; 62
     a14:	0f be       	out	0x3f, r0	; 63
     a16:	cd bf       	out	0x3d, r28	; 61
     a18:	df 91       	pop	r29
     a1a:	cf 91       	pop	r28
     a1c:	1f 91       	pop	r17
     a1e:	0f 91       	pop	r16
     a20:	ff 90       	pop	r15
     a22:	ef 90       	pop	r14
     a24:	df 90       	pop	r13
     a26:	08 95       	ret

00000a28 <main>:
	stateSet(STATE_MAIN_SCREEN_UPDATE);
}

int main(void)
{
	Init();
     a28:	0e 94 ba 02 	call	0x574	; 0x574 <Init>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     a2c:	2f ef       	ldi	r18, 0xFF	; 255
     a2e:	81 ee       	ldi	r24, 0xE1	; 225
     a30:	94 e0       	ldi	r25, 0x04	; 4
     a32:	21 50       	subi	r18, 0x01	; 1
     a34:	80 40       	sbci	r24, 0x00	; 0
     a36:	90 40       	sbci	r25, 0x00	; 0
     a38:	e1 f7       	brne	.-8      	; 0xa32 <main+0xa>
     a3a:	00 c0       	rjmp	.+0      	; 0xa3c <main+0x14>
     a3c:	00 00       	nop
	_delay_ms(100);
	sei();
     a3e:	78 94       	sei
		
	
		if(stateGet() == STATE_MENU_IDLE){
			uint8_t curr_selecteed = 0;
			for(curr_selecteed = 0; curr_selecteed < 4; curr_selecteed++){
				if(menu[curr_selecteed].selected)
     a40:	c3 e0       	ldi	r28, 0x03	; 3
     a42:	d1 e0       	ldi	r29, 0x01	; 1
		}
		
	
		if(stateGet() == STATE_MENU_IDLE){
			uint8_t curr_selecteed = 0;
			for(curr_selecteed = 0; curr_selecteed < 4; curr_selecteed++){
     a44:	14 e0       	ldi	r17, 0x04	; 4
     a46:	0f 2e       	mov	r0, r31
     a48:	f3 e0       	ldi	r31, 0x03	; 3
     a4a:	ff 2e       	mov	r15, r31
     a4c:	f0 2d       	mov	r31, r0
	Init();
	_delay_ms(100);
	sei();
    while (1) 
	{
		switch(stateGet()){
     a4e:	0e 94 bd 09 	call	0x137a	; 0x137a <stateGet>
     a52:	83 30       	cpi	r24, 0x03	; 3
     a54:	19 f0       	breq	.+6      	; 0xa5c <main+0x34>
     a56:	85 30       	cpi	r24, 0x05	; 5
     a58:	49 f0       	breq	.+18     	; 0xa6c <main+0x44>
     a5a:	0e c0       	rjmp	.+28     	; 0xa78 <main+0x50>
			case STATE_MAIN_SCREEN_UPDATE:
				Calculate();
     a5c:	0e 94 dd 02 	call	0x5ba	; 0x5ba <Calculate>
				DisplayUpdate();
     a60:	0e 94 5c 04 	call	0x8b8	; 0x8b8 <DisplayUpdate>
				stateSet(STATE_IDLE);
     a64:	80 e0       	ldi	r24, 0x00	; 0
     a66:	0e 94 c0 09 	call	0x1380	; 0x1380 <stateSet>
			break;
     a6a:	9b c0       	rjmp	.+310    	; 0xba2 <main+0x17a>
			case STATE_MENU_SCREEN_UPDATE:
				DisplayMenu();
     a6c:	0e 94 ae 03 	call	0x75c	; 0x75c <DisplayMenu>
				stateSet(STATE_MENU_IDLE);
     a70:	86 e0       	ldi	r24, 0x06	; 6
     a72:	0e 94 c0 09 	call	0x1380	; 0x1380 <stateSet>
			break; 
     a76:	95 c0       	rjmp	.+298    	; 0xba2 <main+0x17a>
		}
		
	
		if(stateGet() == STATE_MENU_IDLE){
     a78:	0e 94 bd 09 	call	0x137a	; 0x137a <stateGet>
     a7c:	86 30       	cpi	r24, 0x06	; 6
     a7e:	09 f0       	breq	.+2      	; 0xa82 <main+0x5a>
     a80:	85 c0       	rjmp	.+266    	; 0xb8c <main+0x164>
			uint8_t curr_selecteed = 0;
			for(curr_selecteed = 0; curr_selecteed < 4; curr_selecteed++){
				if(menu[curr_selecteed].selected)
     a82:	88 81       	ld	r24, Y
     a84:	81 11       	cpse	r24, r1
     a86:	92 c0       	rjmp	.+292    	; 0xbac <main+0x184>
     a88:	8c 85       	ldd	r24, Y+12	; 0x0c
     a8a:	81 11       	cpse	r24, r1
     a8c:	09 c0       	rjmp	.+18     	; 0xaa0 <main+0x78>
     a8e:	88 8d       	ldd	r24, Y+24	; 0x18
     a90:	81 11       	cpse	r24, r1
     a92:	08 c0       	rjmp	.+16     	; 0xaa4 <main+0x7c>
     a94:	8c a1       	ldd	r24, Y+36	; 0x24
     a96:	88 23       	and	r24, r24
     a98:	09 f4       	brne	.+2      	; 0xa9c <main+0x74>
     a9a:	8e c0       	rjmp	.+284    	; 0xbb8 <main+0x190>
		}
		
	
		if(stateGet() == STATE_MENU_IDLE){
			uint8_t curr_selecteed = 0;
			for(curr_selecteed = 0; curr_selecteed < 4; curr_selecteed++){
     a9c:	0f 2d       	mov	r16, r15
     a9e:	03 c0       	rjmp	.+6      	; 0xaa6 <main+0x7e>
     aa0:	01 e0       	ldi	r16, 0x01	; 1
     aa2:	01 c0       	rjmp	.+2      	; 0xaa6 <main+0x7e>
     aa4:	02 e0       	ldi	r16, 0x02	; 2
				if(menu[curr_selecteed].selected)
					break;
			}
			
			if(button_down(BUTTON_UP)){
     aa6:	80 e0       	ldi	r24, 0x00	; 0
     aa8:	0e 94 3c 02 	call	0x478	; 0x478 <button_down>
     aac:	88 23       	and	r24, r24
     aae:	39 f1       	breq	.+78     	; 0xafe <main+0xd6>
				if(curr_selecteed > 0){
     ab0:	00 23       	and	r16, r16
     ab2:	09 f4       	brne	.+2      	; 0xab6 <main+0x8e>
     ab4:	73 c0       	rjmp	.+230    	; 0xb9c <main+0x174>
     ab6:	01 c0       	rjmp	.+2      	; 0xaba <main+0x92>
		}
		
	
		if(stateGet() == STATE_MENU_IDLE){
			uint8_t curr_selecteed = 0;
			for(curr_selecteed = 0; curr_selecteed < 4; curr_selecteed++){
     ab8:	01 2f       	mov	r16, r17
					break;
			}
			
			if(button_down(BUTTON_UP)){
				if(curr_selecteed > 0){
					menu[curr_selecteed].selected = 0; 
     aba:	20 2f       	mov	r18, r16
     abc:	30 e0       	ldi	r19, 0x00	; 0
     abe:	f9 01       	movw	r30, r18
     ac0:	ee 0f       	add	r30, r30
     ac2:	ff 1f       	adc	r31, r31
     ac4:	e2 0f       	add	r30, r18
     ac6:	f3 1f       	adc	r31, r19
     ac8:	ee 0f       	add	r30, r30
     aca:	ff 1f       	adc	r31, r31
     acc:	ee 0f       	add	r30, r30
     ace:	ff 1f       	adc	r31, r31
     ad0:	ed 5f       	subi	r30, 0xFD	; 253
     ad2:	fe 4f       	sbci	r31, 0xFE	; 254
     ad4:	10 82       	st	Z, r1
					curr_selecteed--;
					menu[curr_selecteed].selected = 1; 
     ad6:	8f ef       	ldi	r24, 0xFF	; 255
     ad8:	80 0f       	add	r24, r16
     ada:	90 e0       	ldi	r25, 0x00	; 0
     adc:	fc 01       	movw	r30, r24
     ade:	ee 0f       	add	r30, r30
     ae0:	ff 1f       	adc	r31, r31
     ae2:	e8 0f       	add	r30, r24
     ae4:	f9 1f       	adc	r31, r25
     ae6:	ee 0f       	add	r30, r30
     ae8:	ff 1f       	adc	r31, r31
     aea:	ee 0f       	add	r30, r30
     aec:	ff 1f       	adc	r31, r31
     aee:	ed 5f       	subi	r30, 0xFD	; 253
     af0:	fe 4f       	sbci	r31, 0xFE	; 254
     af2:	81 e0       	ldi	r24, 0x01	; 1
     af4:	80 83       	st	Z, r24
					stateSet(STATE_MENU_SCREEN_UPDATE);
     af6:	85 e0       	ldi	r24, 0x05	; 5
     af8:	0e 94 c0 09 	call	0x1380	; 0x1380 <stateSet>
     afc:	4f c0       	rjmp	.+158    	; 0xb9c <main+0x174>
				}
			}else if (button_down(BUTTON_DOWN)){
     afe:	81 e0       	ldi	r24, 0x01	; 1
     b00:	0e 94 3c 02 	call	0x478	; 0x478 <button_down>
     b04:	88 23       	and	r24, r24
     b06:	39 f1       	breq	.+78     	; 0xb56 <main+0x12e>
				if(curr_selecteed < 3){
     b08:	03 30       	cpi	r16, 0x03	; 3
     b0a:	08 f0       	brcs	.+2      	; 0xb0e <main+0xe6>
     b0c:	47 c0       	rjmp	.+142    	; 0xb9c <main+0x174>
     b0e:	01 c0       	rjmp	.+2      	; 0xb12 <main+0xea>
					menu[curr_selecteed].selected = 0; 
					curr_selecteed--;
					menu[curr_selecteed].selected = 1; 
					stateSet(STATE_MENU_SCREEN_UPDATE);
				}
			}else if (button_down(BUTTON_DOWN)){
     b10:	00 e0       	ldi	r16, 0x00	; 0
				if(curr_selecteed < 3){
					menu[curr_selecteed].selected = 0;
     b12:	80 2f       	mov	r24, r16
     b14:	90 e0       	ldi	r25, 0x00	; 0
     b16:	fc 01       	movw	r30, r24
     b18:	ee 0f       	add	r30, r30
     b1a:	ff 1f       	adc	r31, r31
     b1c:	e8 0f       	add	r30, r24
     b1e:	f9 1f       	adc	r31, r25
     b20:	ee 0f       	add	r30, r30
     b22:	ff 1f       	adc	r31, r31
     b24:	ee 0f       	add	r30, r30
     b26:	ff 1f       	adc	r31, r31
     b28:	ed 5f       	subi	r30, 0xFD	; 253
     b2a:	fe 4f       	sbci	r31, 0xFE	; 254
     b2c:	10 82       	st	Z, r1
					curr_selecteed++;
					menu[curr_selecteed].selected = 1;
     b2e:	81 e0       	ldi	r24, 0x01	; 1
     b30:	80 0f       	add	r24, r16
     b32:	90 e0       	ldi	r25, 0x00	; 0
     b34:	fc 01       	movw	r30, r24
     b36:	ee 0f       	add	r30, r30
     b38:	ff 1f       	adc	r31, r31
     b3a:	e8 0f       	add	r30, r24
     b3c:	f9 1f       	adc	r31, r25
     b3e:	ee 0f       	add	r30, r30
     b40:	ff 1f       	adc	r31, r31
     b42:	ee 0f       	add	r30, r30
     b44:	ff 1f       	adc	r31, r31
     b46:	ed 5f       	subi	r30, 0xFD	; 253
     b48:	fe 4f       	sbci	r31, 0xFE	; 254
     b4a:	81 e0       	ldi	r24, 0x01	; 1
     b4c:	80 83       	st	Z, r24
					stateSet(STATE_MENU_SCREEN_UPDATE);
     b4e:	85 e0       	ldi	r24, 0x05	; 5
     b50:	0e 94 c0 09 	call	0x1380	; 0x1380 <stateSet>
     b54:	23 c0       	rjmp	.+70     	; 0xb9c <main+0x174>
				}
			}else if (button_down(BUTTON_ENTER)){
     b56:	82 e0       	ldi	r24, 0x02	; 2
     b58:	0e 94 3c 02 	call	0x478	; 0x478 <button_down>
     b5c:	88 23       	and	r24, r24
     b5e:	f1 f0       	breq	.+60     	; 0xb9c <main+0x174>
				menu[curr_selecteed].onSelected(&menu[curr_selecteed]);
     b60:	20 2f       	mov	r18, r16
     b62:	30 e0       	ldi	r19, 0x00	; 0
     b64:	f9 01       	movw	r30, r18
     b66:	ee 0f       	add	r30, r30
     b68:	ff 1f       	adc	r31, r31
     b6a:	cf 01       	movw	r24, r30
     b6c:	82 0f       	add	r24, r18
     b6e:	93 1f       	adc	r25, r19
     b70:	88 0f       	add	r24, r24
     b72:	99 1f       	adc	r25, r25
     b74:	88 0f       	add	r24, r24
     b76:	99 1f       	adc	r25, r25
     b78:	fc 01       	movw	r30, r24
     b7a:	ed 5f       	subi	r30, 0xFD	; 253
     b7c:	fe 4f       	sbci	r31, 0xFE	; 254
     b7e:	02 84       	ldd	r0, Z+10	; 0x0a
     b80:	f3 85       	ldd	r31, Z+11	; 0x0b
     b82:	e0 2d       	mov	r30, r0
     b84:	8d 5f       	subi	r24, 0xFD	; 253
     b86:	9e 4f       	sbci	r25, 0xFE	; 254
     b88:	09 95       	icall
     b8a:	08 c0       	rjmp	.+16     	; 0xb9c <main+0x174>
			}
				
		}else{
			if (button_down(BUTTON_ENTER))
     b8c:	82 e0       	ldi	r24, 0x02	; 2
     b8e:	0e 94 3c 02 	call	0x478	; 0x478 <button_down>
     b92:	88 23       	and	r24, r24
     b94:	19 f0       	breq	.+6      	; 0xb9c <main+0x174>
			{
				stateSet(STATE_MENU_SCREEN_UPDATE);
     b96:	85 e0       	ldi	r24, 0x05	; 5
     b98:	0e 94 c0 09 	call	0x1380	; 0x1380 <stateSet>
			}
		}
		
		buttons_update();
     b9c:	0e 94 48 02 	call	0x490	; 0x490 <buttons_update>
    }
     ba0:	56 cf       	rjmp	.-340    	; 0xa4e <main+0x26>
				stateSet(STATE_MENU_IDLE);
			break; 
		}
		
	
		if(stateGet() == STATE_MENU_IDLE){
     ba2:	0e 94 bd 09 	call	0x137a	; 0x137a <stateGet>
     ba6:	86 30       	cpi	r24, 0x06	; 6
     ba8:	89 f7       	brne	.-30     	; 0xb8c <main+0x164>
     baa:	6b cf       	rjmp	.-298    	; 0xa82 <main+0x5a>
			for(curr_selecteed = 0; curr_selecteed < 4; curr_selecteed++){
				if(menu[curr_selecteed].selected)
					break;
			}
			
			if(button_down(BUTTON_UP)){
     bac:	80 e0       	ldi	r24, 0x00	; 0
     bae:	0e 94 3c 02 	call	0x478	; 0x478 <button_down>
     bb2:	81 11       	cpse	r24, r1
     bb4:	f3 cf       	rjmp	.-26     	; 0xb9c <main+0x174>
     bb6:	07 c0       	rjmp	.+14     	; 0xbc6 <main+0x19e>
     bb8:	80 e0       	ldi	r24, 0x00	; 0
     bba:	0e 94 3c 02 	call	0x478	; 0x478 <button_down>
     bbe:	81 11       	cpse	r24, r1
     bc0:	7b cf       	rjmp	.-266    	; 0xab8 <main+0x90>
		}
		
	
		if(stateGet() == STATE_MENU_IDLE){
			uint8_t curr_selecteed = 0;
			for(curr_selecteed = 0; curr_selecteed < 4; curr_selecteed++){
     bc2:	01 2f       	mov	r16, r17
     bc4:	9c cf       	rjmp	.-200    	; 0xafe <main+0xd6>
					menu[curr_selecteed].selected = 0; 
					curr_selecteed--;
					menu[curr_selecteed].selected = 1; 
					stateSet(STATE_MENU_SCREEN_UPDATE);
				}
			}else if (button_down(BUTTON_DOWN)){
     bc6:	81 e0       	ldi	r24, 0x01	; 1
     bc8:	0e 94 3c 02 	call	0x478	; 0x478 <button_down>
     bcc:	81 11       	cpse	r24, r1
     bce:	a0 cf       	rjmp	.-192    	; 0xb10 <main+0xe8>
     bd0:	00 e0       	ldi	r16, 0x00	; 0
     bd2:	c1 cf       	rjmp	.-126    	; 0xb56 <main+0x12e>

00000bd4 <__vector_2>:
	sprintf(buffer , "max:%05.1lf m/s" , data.maxSpeed);
	lcd_puts(buffer);
	lcd_display();
}

ISR(INT1_vect){
     bd4:	1f 92       	push	r1
     bd6:	0f 92       	push	r0
     bd8:	0f b6       	in	r0, 0x3f	; 63
     bda:	0f 92       	push	r0
     bdc:	11 24       	eor	r1, r1
     bde:	2f 93       	push	r18
     be0:	3f 93       	push	r19
     be2:	4f 93       	push	r20
     be4:	5f 93       	push	r21
     be6:	6f 93       	push	r22
     be8:	7f 93       	push	r23
     bea:	8f 93       	push	r24
     bec:	9f 93       	push	r25
     bee:	af 93       	push	r26
     bf0:	bf 93       	push	r27
     bf2:	ef 93       	push	r30
     bf4:	ff 93       	push	r31
	if(stateGet() == STATE_IDLE){
     bf6:	0e 94 bd 09 	call	0x137a	; 0x137a <stateGet>
     bfa:	81 11       	cpse	r24, r1
     bfc:	0e c0       	rjmp	.+28     	; 0xc1a <__vector_2+0x46>
		TCNT0=0x00;
     bfe:	16 bc       	out	0x26, r1	; 38
		TCCR0B=(1<<CS00);
     c00:	81 e0       	ldi	r24, 0x01	; 1
     c02:	85 bd       	out	0x25, r24	; 37
		data.timeCounter = 0;
     c04:	10 92 93 05 	sts	0x0593, r1	; 0x800593 <data>
     c08:	10 92 94 05 	sts	0x0594, r1	; 0x800594 <data+0x1>
     c0c:	10 92 95 05 	sts	0x0595, r1	; 0x800595 <data+0x2>
     c10:	10 92 96 05 	sts	0x0596, r1	; 0x800596 <data+0x3>
		stateSet(STATE_PROCESSING);
     c14:	82 e0       	ldi	r24, 0x02	; 2
     c16:	0e 94 c0 09 	call	0x1380	; 0x1380 <stateSet>
	}
}
     c1a:	ff 91       	pop	r31
     c1c:	ef 91       	pop	r30
     c1e:	bf 91       	pop	r27
     c20:	af 91       	pop	r26
     c22:	9f 91       	pop	r25
     c24:	8f 91       	pop	r24
     c26:	7f 91       	pop	r23
     c28:	6f 91       	pop	r22
     c2a:	5f 91       	pop	r21
     c2c:	4f 91       	pop	r20
     c2e:	3f 91       	pop	r19
     c30:	2f 91       	pop	r18
     c32:	0f 90       	pop	r0
     c34:	0f be       	out	0x3f, r0	; 63
     c36:	0f 90       	pop	r0
     c38:	1f 90       	pop	r1
     c3a:	18 95       	reti

00000c3c <__vector_1>:

ISR(INT0_vect){
     c3c:	1f 92       	push	r1
     c3e:	0f 92       	push	r0
     c40:	0f b6       	in	r0, 0x3f	; 63
     c42:	0f 92       	push	r0
     c44:	11 24       	eor	r1, r1
     c46:	2f 93       	push	r18
     c48:	3f 93       	push	r19
     c4a:	4f 93       	push	r20
     c4c:	5f 93       	push	r21
     c4e:	6f 93       	push	r22
     c50:	7f 93       	push	r23
     c52:	8f 93       	push	r24
     c54:	9f 93       	push	r25
     c56:	af 93       	push	r26
     c58:	bf 93       	push	r27
     c5a:	cf 93       	push	r28
     c5c:	df 93       	push	r29
     c5e:	ef 93       	push	r30
     c60:	ff 93       	push	r31
	TCCR0B=(0<<CS00);
     c62:	15 bc       	out	0x25, r1	; 37
	data.timeCounter += TCNT0 * (double)TIMER_PERIOD;
     c64:	66 b5       	in	r22, 0x26	; 38
     c66:	c3 e9       	ldi	r28, 0x93	; 147
     c68:	d5 e0       	ldi	r29, 0x05	; 5
     c6a:	70 e0       	ldi	r23, 0x00	; 0
     c6c:	80 e0       	ldi	r24, 0x00	; 0
     c6e:	90 e0       	ldi	r25, 0x00	; 0
     c70:	0e 94 97 0e 	call	0x1d2e	; 0x1d2e <__floatsisf>
     c74:	2f e6       	ldi	r18, 0x6F	; 111
     c76:	32 e1       	ldi	r19, 0x12	; 18
     c78:	43 e8       	ldi	r20, 0x83	; 131
     c7a:	5c e3       	ldi	r21, 0x3C	; 60
     c7c:	0e 94 4c 0f 	call	0x1e98	; 0x1e98 <__mulsf3>
     c80:	28 81       	ld	r18, Y
     c82:	39 81       	ldd	r19, Y+1	; 0x01
     c84:	4a 81       	ldd	r20, Y+2	; 0x02
     c86:	5b 81       	ldd	r21, Y+3	; 0x03
     c88:	0e 94 b2 0d 	call	0x1b64	; 0x1b64 <__addsf3>
     c8c:	68 83       	st	Y, r22
     c8e:	79 83       	std	Y+1, r23	; 0x01
     c90:	8a 83       	std	Y+2, r24	; 0x02
     c92:	9b 83       	std	Y+3, r25	; 0x03
	if(stateGet() == STATE_PROCESSING){
     c94:	0e 94 bd 09 	call	0x137a	; 0x137a <stateGet>
     c98:	82 30       	cpi	r24, 0x02	; 2
     c9a:	19 f4       	brne	.+6      	; 0xca2 <__vector_1+0x66>
		stateSet(STATE_MAIN_SCREEN_UPDATE);
     c9c:	83 e0       	ldi	r24, 0x03	; 3
     c9e:	0e 94 c0 09 	call	0x1380	; 0x1380 <stateSet>
	}
}
     ca2:	ff 91       	pop	r31
     ca4:	ef 91       	pop	r30
     ca6:	df 91       	pop	r29
     ca8:	cf 91       	pop	r28
     caa:	bf 91       	pop	r27
     cac:	af 91       	pop	r26
     cae:	9f 91       	pop	r25
     cb0:	8f 91       	pop	r24
     cb2:	7f 91       	pop	r23
     cb4:	6f 91       	pop	r22
     cb6:	5f 91       	pop	r21
     cb8:	4f 91       	pop	r20
     cba:	3f 91       	pop	r19
     cbc:	2f 91       	pop	r18
     cbe:	0f 90       	pop	r0
     cc0:	0f be       	out	0x3f, r0	; 63
     cc2:	0f 90       	pop	r0
     cc4:	1f 90       	pop	r1
     cc6:	18 95       	reti

00000cc8 <__vector_16>:

ISR(TIMER0_OVF_vect){
     cc8:	1f 92       	push	r1
     cca:	0f 92       	push	r0
     ccc:	0f b6       	in	r0, 0x3f	; 63
     cce:	0f 92       	push	r0
     cd0:	11 24       	eor	r1, r1
     cd2:	2f 93       	push	r18
     cd4:	3f 93       	push	r19
     cd6:	4f 93       	push	r20
     cd8:	5f 93       	push	r21
     cda:	6f 93       	push	r22
     cdc:	7f 93       	push	r23
     cde:	8f 93       	push	r24
     ce0:	9f 93       	push	r25
     ce2:	af 93       	push	r26
     ce4:	bf 93       	push	r27
     ce6:	cf 93       	push	r28
     ce8:	df 93       	push	r29
     cea:	ef 93       	push	r30
     cec:	ff 93       	push	r31
	data.timeCounter += (double)TIMER_PERIOD;
     cee:	c3 e9       	ldi	r28, 0x93	; 147
     cf0:	d5 e0       	ldi	r29, 0x05	; 5
     cf2:	2f e6       	ldi	r18, 0x6F	; 111
     cf4:	32 e1       	ldi	r19, 0x12	; 18
     cf6:	43 e8       	ldi	r20, 0x83	; 131
     cf8:	5c e3       	ldi	r21, 0x3C	; 60
     cfa:	68 81       	ld	r22, Y
     cfc:	79 81       	ldd	r23, Y+1	; 0x01
     cfe:	8a 81       	ldd	r24, Y+2	; 0x02
     d00:	9b 81       	ldd	r25, Y+3	; 0x03
     d02:	0e 94 b2 0d 	call	0x1b64	; 0x1b64 <__addsf3>
     d06:	68 83       	st	Y, r22
     d08:	79 83       	std	Y+1, r23	; 0x01
     d0a:	8a 83       	std	Y+2, r24	; 0x02
     d0c:	9b 83       	std	Y+3, r25	; 0x03
	if(data.timeCounter > 80){
     d0e:	20 e0       	ldi	r18, 0x00	; 0
     d10:	30 e0       	ldi	r19, 0x00	; 0
     d12:	40 ea       	ldi	r20, 0xA0	; 160
     d14:	52 e4       	ldi	r21, 0x42	; 66
     d16:	0e 94 47 0f 	call	0x1e8e	; 0x1e8e <__gesf2>
     d1a:	18 16       	cp	r1, r24
     d1c:	6c f4       	brge	.+26     	; 0xd38 <__vector_16+0x70>
		TCCR0B = (0<<CS00);
     d1e:	15 bc       	out	0x25, r1	; 37
		TCNT0=0x00;
     d20:	16 bc       	out	0x26, r1	; 38
		data.timeCounter = 0;
     d22:	10 92 93 05 	sts	0x0593, r1	; 0x800593 <data>
     d26:	10 92 94 05 	sts	0x0594, r1	; 0x800594 <data+0x1>
     d2a:	10 92 95 05 	sts	0x0595, r1	; 0x800595 <data+0x2>
     d2e:	10 92 96 05 	sts	0x0596, r1	; 0x800596 <data+0x3>
		stateSet(STATE_IDLE);
     d32:	80 e0       	ldi	r24, 0x00	; 0
     d34:	0e 94 c0 09 	call	0x1380	; 0x1380 <stateSet>
	}
     d38:	ff 91       	pop	r31
     d3a:	ef 91       	pop	r30
     d3c:	df 91       	pop	r29
     d3e:	cf 91       	pop	r28
     d40:	bf 91       	pop	r27
     d42:	af 91       	pop	r26
     d44:	9f 91       	pop	r25
     d46:	8f 91       	pop	r24
     d48:	7f 91       	pop	r23
     d4a:	6f 91       	pop	r22
     d4c:	5f 91       	pop	r21
     d4e:	4f 91       	pop	r20
     d50:	3f 91       	pop	r19
     d52:	2f 91       	pop	r18
     d54:	0f 90       	pop	r0
     d56:	0f be       	out	0x3f, r0	; 63
     d58:	0f 90       	pop	r0
     d5a:	1f 90       	pop	r1
     d5c:	18 95       	reti

00000d5e <empty>:
		.str = menuText_Exit,
		.onSelected = &onExit
	}
};
struct MenuElement *currentMenuRoot;
void empty(){}
     d5e:	08 95       	ret

00000d60 <onExit>:

void onExit(struct MenuElement *mElement){
	uint8_t curr_selecteed = 0;
	for(curr_selecteed = 0; curr_selecteed < 4; curr_selecteed++){
		if(menu[curr_selecteed].selected)
     d60:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <menu>
     d64:	81 11       	cpse	r24, r1
     d66:	12 c0       	rjmp	.+36     	; 0xd8c <onExit+0x2c>
     d68:	80 91 0f 01 	lds	r24, 0x010F	; 0x80010f <menu+0xc>
     d6c:	81 11       	cpse	r24, r1
     d6e:	0a c0       	rjmp	.+20     	; 0xd84 <onExit+0x24>
     d70:	80 91 1b 01 	lds	r24, 0x011B	; 0x80011b <menu+0x18>
     d74:	81 11       	cpse	r24, r1
     d76:	08 c0       	rjmp	.+16     	; 0xd88 <onExit+0x28>
     d78:	80 91 27 01 	lds	r24, 0x0127	; 0x800127 <menu+0x24>
     d7c:	88 23       	and	r24, r24
     d7e:	41 f0       	breq	.+16     	; 0xd90 <onExit+0x30>
struct MenuElement *currentMenuRoot;
void empty(){}

void onExit(struct MenuElement *mElement){
	uint8_t curr_selecteed = 0;
	for(curr_selecteed = 0; curr_selecteed < 4; curr_selecteed++){
     d80:	83 e0       	ldi	r24, 0x03	; 3
     d82:	07 c0       	rjmp	.+14     	; 0xd92 <onExit+0x32>
     d84:	81 e0       	ldi	r24, 0x01	; 1
     d86:	05 c0       	rjmp	.+10     	; 0xd92 <onExit+0x32>
     d88:	82 e0       	ldi	r24, 0x02	; 2
     d8a:	03 c0       	rjmp	.+6      	; 0xd92 <onExit+0x32>
     d8c:	80 e0       	ldi	r24, 0x00	; 0
     d8e:	01 c0       	rjmp	.+2      	; 0xd92 <onExit+0x32>
     d90:	84 e0       	ldi	r24, 0x04	; 4
		if(menu[curr_selecteed].selected)
		break;
	}
	menu[curr_selecteed].selected = false;
     d92:	90 e0       	ldi	r25, 0x00	; 0
     d94:	fc 01       	movw	r30, r24
     d96:	ee 0f       	add	r30, r30
     d98:	ff 1f       	adc	r31, r31
     d9a:	e8 0f       	add	r30, r24
     d9c:	f9 1f       	adc	r31, r25
     d9e:	ee 0f       	add	r30, r30
     da0:	ff 1f       	adc	r31, r31
     da2:	ee 0f       	add	r30, r30
     da4:	ff 1f       	adc	r31, r31
     da6:	ed 5f       	subi	r30, 0xFD	; 253
     da8:	fe 4f       	sbci	r31, 0xFE	; 254
     daa:	10 82       	st	Z, r1
	menu[0].selected = true;
     dac:	81 e0       	ldi	r24, 0x01	; 1
     dae:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <menu>
	stateSet(STATE_MAIN_SCREEN_UPDATE);
     db2:	83 e0       	ldi	r24, 0x03	; 3
     db4:	0e 94 c0 09 	call	0x1380	; 0x1380 <stateSet>
     db8:	08 95       	ret

00000dba <scrollValue>:
}
/*
	Function for scrolling menu element parameters every
	time selection button pressed.  
*/
void scrollValue(struct MenuElement *mElement){
     dba:	fc 01       	movw	r30, r24
	*(mElement)->var_selected += 1;
     dbc:	a7 81       	ldd	r26, Z+7	; 0x07
     dbe:	b0 85       	ldd	r27, Z+8	; 0x08
     dc0:	8c 91       	ld	r24, X
     dc2:	8f 5f       	subi	r24, 0xFF	; 255
     dc4:	8c 93       	st	X, r24
	if (*mElement->var_selected >= mElement->vars_count) {*mElement->var_selected = 0;};
     dc6:	a7 81       	ldd	r26, Z+7	; 0x07
     dc8:	b0 85       	ldd	r27, Z+8	; 0x08
     dca:	9c 91       	ld	r25, X
     dcc:	81 85       	ldd	r24, Z+9	; 0x09
     dce:	98 17       	cp	r25, r24
     dd0:	08 f0       	brcs	.+2      	; 0xdd4 <scrollValue+0x1a>
     dd2:	1c 92       	st	X, r1
	stateSet(STATE_MENU_SCREEN_UPDATE);
     dd4:	85 e0       	ldi	r24, 0x05	; 5
     dd6:	0e 94 c0 09 	call	0x1380	; 0x1380 <stateSet>
     dda:	08 95       	ret

00000ddc <i2c_init>:
            break;
        case 64:
            TWSR = 0x3;
            break;
        default:
            TWSR = 0x00;
     ddc:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
            break;
    }
    TWBR = (uint8_t)SET_TWBR;
     de0:	8c e0       	ldi	r24, 0x0C	; 12
     de2:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7e00b8>
    // enable
    TWCR = (1 << TWEN);
     de6:	84 e0       	ldi	r24, 0x04	; 4
     de8:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     dec:	08 95       	ret

00000dee <i2c_start>:
 
 Return Value: none
 **********************************************/
void i2c_start(uint8_t i2c_addr){
    // i2c start
    TWCR = (1 << TWINT)|(1 << TWSTA)|(1 << TWEN);
     dee:	94 ea       	ldi	r25, 0xA4	; 164
     df0:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	uint16_t timeout = F_CPU/F_I2C*2.0;
    while((TWCR & (1 << TWINT)) == 0 &&
     df4:	20 e5       	ldi	r18, 0x50	; 80
     df6:	30 e0       	ldi	r19, 0x00	; 0
     df8:	ec eb       	ldi	r30, 0xBC	; 188
     dfa:	f0 e0       	ldi	r31, 0x00	; 0
     dfc:	09 c0       	rjmp	.+18     	; 0xe10 <i2c_start+0x22>
     dfe:	21 50       	subi	r18, 0x01	; 1
     e00:	31 09       	sbc	r19, r1
		timeout !=0){
		timeout--;
		if(timeout == 0){
     e02:	31 f4       	brne	.+12     	; 0xe10 <i2c_start+0x22>
			I2C_ErrorCode |= (1 << I2C_START);
     e04:	80 91 0d 06 	lds	r24, 0x060D	; 0x80060d <I2C_ErrorCode>
     e08:	81 60       	ori	r24, 0x01	; 1
     e0a:	80 93 0d 06 	sts	0x060D, r24	; 0x80060d <I2C_ErrorCode>
			return;
     e0e:	08 95       	ret
 **********************************************/
void i2c_start(uint8_t i2c_addr){
    // i2c start
    TWCR = (1 << TWINT)|(1 << TWSTA)|(1 << TWEN);
	uint16_t timeout = F_CPU/F_I2C*2.0;
    while((TWCR & (1 << TWINT)) == 0 &&
     e10:	90 81       	ld	r25, Z
     e12:	99 23       	and	r25, r25
     e14:	a4 f7       	brge	.-24     	; 0xdfe <i2c_start+0x10>
			I2C_ErrorCode |= (1 << I2C_START);
			return;
		}
	};
    // send adress
    TWDR = i2c_addr;
     e16:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    TWCR = (1 << TWINT)|( 1 << TWEN);
     e1a:	84 e8       	ldi	r24, 0x84	; 132
     e1c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    timeout = F_CPU/F_I2C*2.0;
    while((TWCR & (1 << TWINT)) == 0 &&
     e20:	80 e5       	ldi	r24, 0x50	; 80
     e22:	90 e0       	ldi	r25, 0x00	; 0
     e24:	ec eb       	ldi	r30, 0xBC	; 188
     e26:	f0 e0       	ldi	r31, 0x00	; 0
     e28:	08 c0       	rjmp	.+16     	; 0xe3a <i2c_start+0x4c>
     e2a:	01 97       	sbiw	r24, 0x01	; 1
		  timeout !=0){
		timeout--;
		if(timeout == 0){
     e2c:	31 f4       	brne	.+12     	; 0xe3a <i2c_start+0x4c>
			I2C_ErrorCode |= (1 << I2C_SENDADRESS);
     e2e:	80 91 0d 06 	lds	r24, 0x060D	; 0x80060d <I2C_ErrorCode>
     e32:	82 60       	ori	r24, 0x02	; 2
     e34:	80 93 0d 06 	sts	0x060D, r24	; 0x80060d <I2C_ErrorCode>
			return;
     e38:	08 95       	ret
	};
    // send adress
    TWDR = i2c_addr;
    TWCR = (1 << TWINT)|( 1 << TWEN);
    timeout = F_CPU/F_I2C*2.0;
    while((TWCR & (1 << TWINT)) == 0 &&
     e3a:	20 81       	ld	r18, Z
     e3c:	22 23       	and	r18, r18
     e3e:	ac f7       	brge	.-22     	; 0xe2a <i2c_start+0x3c>
     e40:	08 95       	ret

00000e42 <i2c_stop>:
 
 Return Value: none
 **********************************************/
void i2c_stop(void){
    // i2c stop
    TWCR = (1 << TWINT)|(1 << TWSTO)|(1 << TWEN);
     e42:	84 e9       	ldi	r24, 0x94	; 148
     e44:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     e48:	08 95       	ret

00000e4a <i2c_byte>:
 - uint8_t byte: Byte to send to reciever
 
 Return Value: none
 **********************************************/
void i2c_byte(uint8_t byte){
    TWDR = byte;
     e4a:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    TWCR = (1 << TWINT)|( 1 << TWEN);
     e4e:	84 e8       	ldi	r24, 0x84	; 132
     e50:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    uint16_t timeout = F_CPU/F_I2C*2.0;
    while((TWCR & (1 << TWINT)) == 0 &&
     e54:	80 e5       	ldi	r24, 0x50	; 80
     e56:	90 e0       	ldi	r25, 0x00	; 0
     e58:	ec eb       	ldi	r30, 0xBC	; 188
     e5a:	f0 e0       	ldi	r31, 0x00	; 0
     e5c:	08 c0       	rjmp	.+16     	; 0xe6e <i2c_byte+0x24>
     e5e:	01 97       	sbiw	r24, 0x01	; 1
		  timeout !=0){
		timeout--;
		if(timeout == 0){
     e60:	31 f4       	brne	.+12     	; 0xe6e <i2c_byte+0x24>
			I2C_ErrorCode |= (1 << I2C_BYTE);
     e62:	80 91 0d 06 	lds	r24, 0x060D	; 0x80060d <I2C_ErrorCode>
     e66:	84 60       	ori	r24, 0x04	; 4
     e68:	80 93 0d 06 	sts	0x060D, r24	; 0x80060d <I2C_ErrorCode>
			return;
     e6c:	08 95       	ret
 **********************************************/
void i2c_byte(uint8_t byte){
    TWDR = byte;
    TWCR = (1 << TWINT)|( 1 << TWEN);
    uint16_t timeout = F_CPU/F_I2C*2.0;
    while((TWCR & (1 << TWINT)) == 0 &&
     e6e:	20 81       	ld	r18, Z
     e70:	22 23       	and	r18, r18
     e72:	ac f7       	brge	.-22     	; 0xe5e <i2c_byte+0x14>
     e74:	08 95       	ret

00000e76 <lcd_command>:
            } else {
                lcd_drawPixel(x+i, y+j, !color);
            }
        }
    }
}
     e76:	ef 92       	push	r14
     e78:	ff 92       	push	r15
     e7a:	0f 93       	push	r16
     e7c:	1f 93       	push	r17
     e7e:	cf 93       	push	r28
     e80:	df 93       	push	r29
     e82:	7c 01       	movw	r14, r24
     e84:	16 2f       	mov	r17, r22
     e86:	88 e7       	ldi	r24, 0x78	; 120
     e88:	0e 94 f7 06 	call	0xdee	; 0xdee <i2c_start>
     e8c:	80 e0       	ldi	r24, 0x00	; 0
     e8e:	0e 94 25 07 	call	0xe4a	; 0xe4a <i2c_byte>
     e92:	11 23       	and	r17, r17
     e94:	71 f0       	breq	.+28     	; 0xeb2 <lcd_command+0x3c>
     e96:	e7 01       	movw	r28, r14
     e98:	11 50       	subi	r17, 0x01	; 1
     e9a:	01 2f       	mov	r16, r17
     e9c:	10 e0       	ldi	r17, 0x00	; 0
     e9e:	0f 5f       	subi	r16, 0xFF	; 255
     ea0:	1f 4f       	sbci	r17, 0xFF	; 255
     ea2:	0e 0d       	add	r16, r14
     ea4:	1f 1d       	adc	r17, r15
     ea6:	89 91       	ld	r24, Y+
     ea8:	0e 94 25 07 	call	0xe4a	; 0xe4a <i2c_byte>
     eac:	c0 17       	cp	r28, r16
     eae:	d1 07       	cpc	r29, r17
     eb0:	d1 f7       	brne	.-12     	; 0xea6 <lcd_command+0x30>
     eb2:	0e 94 21 07 	call	0xe42	; 0xe42 <i2c_stop>
     eb6:	df 91       	pop	r29
     eb8:	cf 91       	pop	r28
     eba:	1f 91       	pop	r17
     ebc:	0f 91       	pop	r16
     ebe:	ff 90       	pop	r15
     ec0:	ef 90       	pop	r14
     ec2:	08 95       	ret

00000ec4 <lcd_data>:
     ec4:	ef 92       	push	r14
     ec6:	ff 92       	push	r15
     ec8:	0f 93       	push	r16
     eca:	1f 93       	push	r17
     ecc:	cf 93       	push	r28
     ece:	df 93       	push	r29
     ed0:	7c 01       	movw	r14, r24
     ed2:	8b 01       	movw	r16, r22
     ed4:	88 e7       	ldi	r24, 0x78	; 120
     ed6:	0e 94 f7 06 	call	0xdee	; 0xdee <i2c_start>
     eda:	80 e4       	ldi	r24, 0x40	; 64
     edc:	0e 94 25 07 	call	0xe4a	; 0xe4a <i2c_byte>
     ee0:	01 15       	cp	r16, r1
     ee2:	11 05       	cpc	r17, r1
     ee4:	49 f0       	breq	.+18     	; 0xef8 <lcd_data+0x34>
     ee6:	e7 01       	movw	r28, r14
     ee8:	0e 0d       	add	r16, r14
     eea:	1f 1d       	adc	r17, r15
     eec:	89 91       	ld	r24, Y+
     eee:	0e 94 25 07 	call	0xe4a	; 0xe4a <i2c_byte>
     ef2:	c0 17       	cp	r28, r16
     ef4:	d1 07       	cpc	r29, r17
     ef6:	d1 f7       	brne	.-12     	; 0xeec <lcd_data+0x28>
     ef8:	0e 94 21 07 	call	0xe42	; 0xe42 <i2c_stop>
     efc:	df 91       	pop	r29
     efe:	cf 91       	pop	r28
     f00:	1f 91       	pop	r17
     f02:	0f 91       	pop	r16
     f04:	ff 90       	pop	r15
     f06:	ef 90       	pop	r14
     f08:	08 95       	ret

00000f0a <lcd_goto_xpix_y>:
     f0a:	cf 93       	push	r28
     f0c:	df 93       	push	r29
     f0e:	00 d0       	rcall	.+0      	; 0xf10 <lcd_goto_xpix_y+0x6>
     f10:	00 d0       	rcall	.+0      	; 0xf12 <lcd_goto_xpix_y+0x8>
     f12:	1f 92       	push	r1
     f14:	cd b7       	in	r28, 0x3d	; 61
     f16:	de b7       	in	r29, 0x3e	; 62
     f18:	81 38       	cpi	r24, 0x81	; 129
     f1a:	18 f5       	brcc	.+70     	; 0xf62 <lcd_goto_xpix_y+0x58>
     f1c:	68 30       	cpi	r22, 0x08	; 8
     f1e:	08 f5       	brcc	.+66     	; 0xf62 <lcd_goto_xpix_y+0x58>
     f20:	ef e8       	ldi	r30, 0x8F	; 143
     f22:	f5 e0       	ldi	r31, 0x05	; 5
     f24:	80 83       	st	Z, r24
     f26:	61 83       	std	Z+1, r22	; 0x01
     f28:	60 55       	subi	r22, 0x50	; 80
     f2a:	69 83       	std	Y+1, r22	; 0x01
     f2c:	91 e2       	ldi	r25, 0x21	; 33
     f2e:	9a 83       	std	Y+2, r25	; 0x02
     f30:	92 e0       	ldi	r25, 0x02	; 2
     f32:	98 0f       	add	r25, r24
     f34:	9f 70       	andi	r25, 0x0F	; 15
     f36:	9b 83       	std	Y+3, r25	; 0x03
     f38:	90 e0       	ldi	r25, 0x00	; 0
     f3a:	02 96       	adiw	r24, 0x02	; 2
     f3c:	80 7f       	andi	r24, 0xF0	; 240
     f3e:	99 27       	eor	r25, r25
     f40:	95 95       	asr	r25
     f42:	87 95       	ror	r24
     f44:	95 95       	asr	r25
     f46:	87 95       	ror	r24
     f48:	95 95       	asr	r25
     f4a:	87 95       	ror	r24
     f4c:	95 95       	asr	r25
     f4e:	87 95       	ror	r24
     f50:	80 5f       	subi	r24, 0xF0	; 240
     f52:	8c 83       	std	Y+4, r24	; 0x04
     f54:	8f e7       	ldi	r24, 0x7F	; 127
     f56:	8d 83       	std	Y+5, r24	; 0x05
     f58:	65 e0       	ldi	r22, 0x05	; 5
     f5a:	ce 01       	movw	r24, r28
     f5c:	01 96       	adiw	r24, 0x01	; 1
     f5e:	0e 94 3b 07 	call	0xe76	; 0xe76 <lcd_command>
     f62:	0f 90       	pop	r0
     f64:	0f 90       	pop	r0
     f66:	0f 90       	pop	r0
     f68:	0f 90       	pop	r0
     f6a:	0f 90       	pop	r0
     f6c:	df 91       	pop	r29
     f6e:	cf 91       	pop	r28
     f70:	08 95       	ret

00000f72 <lcd_gotoxy>:
     f72:	98 2f       	mov	r25, r24
     f74:	99 0f       	add	r25, r25
     f76:	89 0f       	add	r24, r25
     f78:	88 0f       	add	r24, r24
     f7a:	0e 94 85 07 	call	0xf0a	; 0xf0a <lcd_goto_xpix_y>
     f7e:	08 95       	ret

00000f80 <lcd_home>:
     f80:	60 e0       	ldi	r22, 0x00	; 0
     f82:	80 e0       	ldi	r24, 0x00	; 0
     f84:	0e 94 b9 07 	call	0xf72	; 0xf72 <lcd_gotoxy>
     f88:	08 95       	ret

00000f8a <lcd_clrscr>:
     f8a:	0f 93       	push	r16
     f8c:	1f 93       	push	r17
     f8e:	cf 93       	push	r28
     f90:	df 93       	push	r29
     f92:	0f e8       	ldi	r16, 0x8F	; 143
     f94:	11 e0       	ldi	r17, 0x01	; 1
     f96:	c0 e0       	ldi	r28, 0x00	; 0
     f98:	d0 e8       	ldi	r29, 0x80	; 128
     f9a:	f8 01       	movw	r30, r16
     f9c:	8d 2f       	mov	r24, r29
     f9e:	11 92       	st	Z+, r1
     fa0:	8a 95       	dec	r24
     fa2:	e9 f7       	brne	.-6      	; 0xf9e <lcd_clrscr+0x14>
     fa4:	6c 2f       	mov	r22, r28
     fa6:	80 e0       	ldi	r24, 0x00	; 0
     fa8:	0e 94 b9 07 	call	0xf72	; 0xf72 <lcd_gotoxy>
     fac:	60 e8       	ldi	r22, 0x80	; 128
     fae:	70 e0       	ldi	r23, 0x00	; 0
     fb0:	c8 01       	movw	r24, r16
     fb2:	0e 94 62 07 	call	0xec4	; 0xec4 <lcd_data>
     fb6:	cf 5f       	subi	r28, 0xFF	; 255
     fb8:	00 58       	subi	r16, 0x80	; 128
     fba:	1f 4f       	sbci	r17, 0xFF	; 255
     fbc:	c8 30       	cpi	r28, 0x08	; 8
     fbe:	69 f7       	brne	.-38     	; 0xf9a <lcd_clrscr+0x10>
     fc0:	0e 94 c0 07 	call	0xf80	; 0xf80 <lcd_home>
     fc4:	df 91       	pop	r29
     fc6:	cf 91       	pop	r28
     fc8:	1f 91       	pop	r17
     fca:	0f 91       	pop	r16
     fcc:	08 95       	ret

00000fce <lcd_init>:
     fce:	1f 93       	push	r17
     fd0:	cf 93       	push	r28
     fd2:	df 93       	push	r29
     fd4:	cd b7       	in	r28, 0x3d	; 61
     fd6:	de b7       	in	r29, 0x3e	; 62
     fd8:	6c 97       	sbiw	r28, 0x1c	; 28
     fda:	0f b6       	in	r0, 0x3f	; 63
     fdc:	f8 94       	cli
     fde:	de bf       	out	0x3e, r29	; 62
     fe0:	0f be       	out	0x3f, r0	; 63
     fe2:	cd bf       	out	0x3d, r28	; 61
     fe4:	18 2f       	mov	r17, r24
     fe6:	0e 94 ee 06 	call	0xddc	; 0xddc <i2c_init>
     fea:	ef e1       	ldi	r30, 0x1F	; 31
     fec:	f4 e0       	ldi	r31, 0x04	; 4
     fee:	de 01       	movw	r26, r28
     ff0:	11 96       	adiw	r26, 0x01	; 1
     ff2:	9e 01       	movw	r18, r28
     ff4:	24 5e       	subi	r18, 0xE4	; 228
     ff6:	3f 4f       	sbci	r19, 0xFF	; 255
     ff8:	84 91       	lpm	r24, Z
     ffa:	8d 93       	st	X+, r24
     ffc:	31 96       	adiw	r30, 0x01	; 1
     ffe:	a2 17       	cp	r26, r18
    1000:	b3 07       	cpc	r27, r19
    1002:	d1 f7       	brne	.-12     	; 0xff8 <lcd_init+0x2a>
    1004:	1c 8f       	std	Y+28, r17	; 0x1c
    1006:	6c e1       	ldi	r22, 0x1C	; 28
    1008:	ce 01       	movw	r24, r28
    100a:	01 96       	adiw	r24, 0x01	; 1
    100c:	0e 94 3b 07 	call	0xe76	; 0xe76 <lcd_command>
    1010:	0e 94 c5 07 	call	0xf8a	; 0xf8a <lcd_clrscr>
    1014:	6c 96       	adiw	r28, 0x1c	; 28
    1016:	0f b6       	in	r0, 0x3f	; 63
    1018:	f8 94       	cli
    101a:	de bf       	out	0x3e, r29	; 62
    101c:	0f be       	out	0x3f, r0	; 63
    101e:	cd bf       	out	0x3d, r28	; 61
    1020:	df 91       	pop	r29
    1022:	cf 91       	pop	r28
    1024:	1f 91       	pop	r17
    1026:	08 95       	ret

00001028 <lcd_putc>:
    1028:	2f 92       	push	r2
    102a:	3f 92       	push	r3
    102c:	4f 92       	push	r4
    102e:	5f 92       	push	r5
    1030:	6f 92       	push	r6
    1032:	7f 92       	push	r7
    1034:	8f 92       	push	r8
    1036:	9f 92       	push	r9
    1038:	bf 92       	push	r11
    103a:	cf 92       	push	r12
    103c:	df 92       	push	r13
    103e:	ef 92       	push	r14
    1040:	ff 92       	push	r15
    1042:	0f 93       	push	r16
    1044:	1f 93       	push	r17
    1046:	cf 93       	push	r28
    1048:	df 93       	push	r29
    104a:	cd b7       	in	r28, 0x3d	; 61
    104c:	de b7       	in	r29, 0x3e	; 62
    104e:	2c 97       	sbiw	r28, 0x0c	; 12
    1050:	0f b6       	in	r0, 0x3f	; 63
    1052:	f8 94       	cli
    1054:	de bf       	out	0x3e, r29	; 62
    1056:	0f be       	out	0x3f, r0	; 63
    1058:	cd bf       	out	0x3d, r28	; 61
    105a:	89 30       	cpi	r24, 0x09	; 9
    105c:	01 f1       	breq	.+64     	; 0x109e <lcd_putc+0x76>
    105e:	18 f4       	brcc	.+6      	; 0x1066 <lcd_putc+0x3e>
    1060:	88 30       	cpi	r24, 0x08	; 8
    1062:	39 f0       	breq	.+14     	; 0x1072 <lcd_putc+0x4a>
    1064:	52 c0       	rjmp	.+164    	; 0x110a <lcd_putc+0xe2>
    1066:	8a 30       	cpi	r24, 0x0A	; 10
    1068:	e9 f1       	breq	.+122    	; 0x10e4 <lcd_putc+0xbc>
    106a:	8d 30       	cpi	r24, 0x0D	; 13
    106c:	09 f4       	brne	.+2      	; 0x1070 <lcd_putc+0x48>
    106e:	47 c0       	rjmp	.+142    	; 0x10fe <lcd_putc+0xd6>
    1070:	4c c0       	rjmp	.+152    	; 0x110a <lcd_putc+0xe2>
    1072:	0f e8       	ldi	r16, 0x8F	; 143
    1074:	15 e0       	ldi	r17, 0x05	; 5
    1076:	f8 01       	movw	r30, r16
    1078:	80 81       	ld	r24, Z
    107a:	90 91 3d 01 	lds	r25, 0x013D	; 0x80013d <charMode>
    107e:	61 81       	ldd	r22, Z+1	; 0x01
    1080:	89 1b       	sub	r24, r25
    1082:	0e 94 b9 07 	call	0xf72	; 0xf72 <lcd_gotoxy>
    1086:	80 e2       	ldi	r24, 0x20	; 32
    1088:	0e 94 14 08 	call	0x1028	; 0x1028 <lcd_putc>
    108c:	f8 01       	movw	r30, r16
    108e:	80 81       	ld	r24, Z
    1090:	90 91 3d 01 	lds	r25, 0x013D	; 0x80013d <charMode>
    1094:	61 81       	ldd	r22, Z+1	; 0x01
    1096:	89 1b       	sub	r24, r25
    1098:	0e 94 b9 07 	call	0xf72	; 0xf72 <lcd_gotoxy>
    109c:	2c c1       	rjmp	.+600    	; 0x12f6 <lcd_putc+0x2ce>
    109e:	80 91 8f 05 	lds	r24, 0x058F	; 0x80058f <cursorPosition>
    10a2:	90 91 3d 01 	lds	r25, 0x013D	; 0x80013d <charMode>
    10a6:	29 2f       	mov	r18, r25
    10a8:	30 e0       	ldi	r19, 0x00	; 0
    10aa:	22 0f       	add	r18, r18
    10ac:	33 1f       	adc	r19, r19
    10ae:	22 0f       	add	r18, r18
    10b0:	33 1f       	adc	r19, r19
    10b2:	b9 01       	movw	r22, r18
    10b4:	68 0f       	add	r22, r24
    10b6:	71 1d       	adc	r23, r1
    10b8:	45 e1       	ldi	r20, 0x15	; 21
    10ba:	50 e0       	ldi	r21, 0x00	; 0
    10bc:	1a 01       	movw	r2, r20
    10be:	22 1a       	sub	r2, r18
    10c0:	33 0a       	sbc	r3, r19
    10c2:	62 15       	cp	r22, r2
    10c4:	73 05       	cpc	r23, r3
    10c6:	40 f4       	brcc	.+16     	; 0x10d8 <lcd_putc+0xb0>
    10c8:	99 0f       	add	r25, r25
    10ca:	99 0f       	add	r25, r25
    10cc:	60 91 90 05 	lds	r22, 0x0590	; 0x800590 <cursorPosition+0x1>
    10d0:	89 0f       	add	r24, r25
    10d2:	0e 94 b9 07 	call	0xf72	; 0xf72 <lcd_gotoxy>
    10d6:	0f c1       	rjmp	.+542    	; 0x12f6 <lcd_putc+0x2ce>
    10d8:	60 91 90 05 	lds	r22, 0x0590	; 0x800590 <cursorPosition+0x1>
    10dc:	85 e1       	ldi	r24, 0x15	; 21
    10de:	0e 94 b9 07 	call	0xf72	; 0xf72 <lcd_gotoxy>
    10e2:	09 c1       	rjmp	.+530    	; 0x12f6 <lcd_putc+0x2ce>
    10e4:	80 91 90 05 	lds	r24, 0x0590	; 0x800590 <cursorPosition+0x1>
    10e8:	87 30       	cpi	r24, 0x07	; 7
    10ea:	08 f0       	brcs	.+2      	; 0x10ee <lcd_putc+0xc6>
    10ec:	04 c1       	rjmp	.+520    	; 0x12f6 <lcd_putc+0x2ce>
    10ee:	60 91 3d 01 	lds	r22, 0x013D	; 0x80013d <charMode>
    10f2:	68 0f       	add	r22, r24
    10f4:	80 91 8f 05 	lds	r24, 0x058F	; 0x80058f <cursorPosition>
    10f8:	0e 94 b9 07 	call	0xf72	; 0xf72 <lcd_gotoxy>
    10fc:	fc c0       	rjmp	.+504    	; 0x12f6 <lcd_putc+0x2ce>
    10fe:	60 91 90 05 	lds	r22, 0x0590	; 0x800590 <cursorPosition+0x1>
    1102:	80 e0       	ldi	r24, 0x00	; 0
    1104:	0e 94 b9 07 	call	0xf72	; 0xf72 <lcd_gotoxy>
    1108:	f6 c0       	rjmp	.+492    	; 0x12f6 <lcd_putc+0x2ce>
    110a:	b0 90 8f 05 	lds	r11, 0x058F	; 0x80058f <cursorPosition>
    110e:	0f 2e       	mov	r0, r31
    1110:	f9 e7       	ldi	r31, 0x79	; 121
    1112:	3f 2e       	mov	r3, r31
    1114:	f0 2d       	mov	r31, r0
    1116:	3b 14       	cp	r3, r11
    1118:	08 f4       	brcc	.+2      	; 0x111c <lcd_putc+0xf4>
    111a:	ed c0       	rjmp	.+474    	; 0x12f6 <lcd_putc+0x2ce>
    111c:	80 32       	cpi	r24, 0x20	; 32
    111e:	08 f4       	brcc	.+2      	; 0x1122 <lcd_putc+0xfa>
    1120:	ea c0       	rjmp	.+468    	; 0x12f6 <lcd_putc+0x2ce>
    1122:	80 52       	subi	r24, 0x20	; 32
    1124:	4c e9       	ldi	r20, 0x9C	; 156
    1126:	51 e0       	ldi	r21, 0x01	; 1
    1128:	fa 01       	movw	r30, r20
    112a:	94 91       	lpm	r25, Z
    112c:	89 17       	cp	r24, r25
    112e:	68 f1       	brcs	.+90     	; 0x118a <lcd_putc+0x162>
    1130:	94 91       	lpm	r25, Z
    1132:	9f 3f       	cpi	r25, 0xFF	; 255
    1134:	09 f4       	brne	.+2      	; 0x1138 <lcd_putc+0x110>
    1136:	df c0       	rjmp	.+446    	; 0x12f6 <lcd_putc+0x2ce>
    1138:	eb e9       	ldi	r30, 0x9B	; 155
    113a:	f1 e0       	ldi	r31, 0x01	; 1
    113c:	24 91       	lpm	r18, Z
    113e:	90 e0       	ldi	r25, 0x00	; 0
    1140:	30 e0       	ldi	r19, 0x00	; 0
    1142:	20 52       	subi	r18, 0x20	; 32
    1144:	31 09       	sbc	r19, r1
    1146:	28 17       	cp	r18, r24
    1148:	39 07       	cpc	r19, r25
    114a:	69 f0       	breq	.+26     	; 0x1166 <lcd_putc+0x13e>
    114c:	60 e0       	ldi	r22, 0x00	; 0
    114e:	10 c0       	rjmp	.+32     	; 0x1170 <lcd_putc+0x148>
    1150:	f9 01       	movw	r30, r18
    1152:	ee 0f       	add	r30, r30
    1154:	ff 1f       	adc	r31, r31
    1156:	e5 56       	subi	r30, 0x65	; 101
    1158:	fe 4f       	sbci	r31, 0xFE	; 254
    115a:	e4 91       	lpm	r30, Z
    115c:	f0 e0       	ldi	r31, 0x00	; 0
    115e:	b0 97       	sbiw	r30, 0x20	; 32
    1160:	e8 17       	cp	r30, r24
    1162:	f9 07       	cpc	r31, r25
    1164:	29 f4       	brne	.+10     	; 0x1170 <lcd_putc+0x148>
    1166:	fa 01       	movw	r30, r20
    1168:	84 91       	lpm	r24, Z
    116a:	8f 3f       	cpi	r24, 0xFF	; 255
    116c:	71 f4       	brne	.+28     	; 0x118a <lcd_putc+0x162>
    116e:	c3 c0       	rjmp	.+390    	; 0x12f6 <lcd_putc+0x2ce>
    1170:	6f 5f       	subi	r22, 0xFF	; 255
    1172:	26 2f       	mov	r18, r22
    1174:	30 e0       	ldi	r19, 0x00	; 0
    1176:	a9 01       	movw	r20, r18
    1178:	44 0f       	add	r20, r20
    117a:	55 1f       	adc	r21, r21
    117c:	44 56       	subi	r20, 0x64	; 100
    117e:	5e 4f       	sbci	r21, 0xFE	; 254
    1180:	fa 01       	movw	r30, r20
    1182:	74 91       	lpm	r23, Z
    1184:	7f 3f       	cpi	r23, 0xFF	; 255
    1186:	21 f7       	brne	.-56     	; 0x1150 <lcd_putc+0x128>
    1188:	b6 c0       	rjmp	.+364    	; 0x12f6 <lcd_putc+0x2ce>
    118a:	90 91 3d 01 	lds	r25, 0x013D	; 0x80013d <charMode>
    118e:	92 30       	cpi	r25, 0x02	; 2
    1190:	09 f0       	breq	.+2      	; 0x1194 <lcd_putc+0x16c>
    1192:	8b c0       	rjmp	.+278    	; 0x12aa <lcd_putc+0x282>
    1194:	4b 2c       	mov	r4, r11
    1196:	51 2c       	mov	r5, r1
    1198:	92 01       	movw	r18, r4
    119a:	24 5f       	subi	r18, 0xF4	; 244
    119c:	3f 4f       	sbci	r19, 0xFF	; 255
    119e:	21 38       	cpi	r18, 0x81	; 129
    11a0:	31 05       	cpc	r19, r1
    11a2:	08 f0       	brcs	.+2      	; 0x11a6 <lcd_putc+0x17e>
    11a4:	a8 c0       	rjmp	.+336    	; 0x12f6 <lcd_putc+0x2ce>
    11a6:	9e 01       	movw	r18, r28
    11a8:	2f 5f       	subi	r18, 0xFF	; 255
    11aa:	3f 4f       	sbci	r19, 0xFF	; 255
    11ac:	79 01       	movw	r14, r18
    11ae:	90 e0       	ldi	r25, 0x00	; 0
    11b0:	4c 01       	movw	r8, r24
    11b2:	88 0c       	add	r8, r8
    11b4:	99 1c       	adc	r9, r9
    11b6:	88 0d       	add	r24, r8
    11b8:	99 1d       	adc	r25, r9
    11ba:	88 0f       	add	r24, r24
    11bc:	99 1f       	adc	r25, r25
    11be:	fc 01       	movw	r30, r24
    11c0:	e1 55       	subi	r30, 0x51	; 81
    11c2:	fe 4f       	sbci	r31, 0xFE	; 254
    11c4:	4f 01       	movw	r8, r30
    11c6:	3e 01       	movw	r6, r28
    11c8:	fd e0       	ldi	r31, 0x0D	; 13
    11ca:	6f 0e       	add	r6, r31
    11cc:	71 1c       	adc	r7, r1
    11ce:	69 01       	movw	r12, r18
    11d0:	01 e0       	ldi	r16, 0x01	; 1
    11d2:	10 e0       	ldi	r17, 0x00	; 0
    11d4:	d6 01       	movw	r26, r12
    11d6:	11 96       	adiw	r26, 0x01	; 1
    11d8:	1c 92       	st	X, r1
    11da:	1e 92       	st	-X, r1
    11dc:	f4 01       	movw	r30, r8
    11de:	44 91       	lpm	r20, Z
    11e0:	21 e0       	ldi	r18, 0x01	; 1
    11e2:	30 e0       	ldi	r19, 0x00	; 0
    11e4:	80 e0       	ldi	r24, 0x00	; 0
    11e6:	90 e0       	ldi	r25, 0x00	; 0
    11e8:	e4 2f       	mov	r30, r20
    11ea:	f0 e0       	ldi	r31, 0x00	; 0
    11ec:	af 01       	movw	r20, r30
    11ee:	08 2e       	mov	r0, r24
    11f0:	02 c0       	rjmp	.+4      	; 0x11f6 <lcd_putc+0x1ce>
    11f2:	55 95       	asr	r21
    11f4:	47 95       	ror	r20
    11f6:	0a 94       	dec	r0
    11f8:	e2 f7       	brpl	.-8      	; 0x11f2 <lcd_putc+0x1ca>
    11fa:	40 ff       	sbrs	r20, 0
    11fc:	1b c0       	rjmp	.+54     	; 0x1234 <lcd_putc+0x20c>
    11fe:	6d 91       	ld	r22, X+
    1200:	7c 91       	ld	r23, X
    1202:	11 97       	sbiw	r26, 0x01	; 1
    1204:	a8 01       	movw	r20, r16
    1206:	02 2e       	mov	r0, r18
    1208:	02 c0       	rjmp	.+4      	; 0x120e <lcd_putc+0x1e6>
    120a:	44 0f       	add	r20, r20
    120c:	55 1f       	adc	r21, r21
    120e:	0a 94       	dec	r0
    1210:	e2 f7       	brpl	.-8      	; 0x120a <lcd_putc+0x1e2>
    1212:	64 2b       	or	r22, r20
    1214:	75 2b       	or	r23, r21
    1216:	ac 01       	movw	r20, r24
    1218:	44 0f       	add	r20, r20
    121a:	55 1f       	adc	r21, r21
    121c:	18 01       	movw	r2, r16
    121e:	02 c0       	rjmp	.+4      	; 0x1224 <lcd_putc+0x1fc>
    1220:	22 0c       	add	r2, r2
    1222:	33 1c       	adc	r3, r3
    1224:	4a 95       	dec	r20
    1226:	e2 f7       	brpl	.-8      	; 0x1220 <lcd_putc+0x1f8>
    1228:	a1 01       	movw	r20, r2
    122a:	46 2b       	or	r20, r22
    122c:	57 2b       	or	r21, r23
    122e:	11 96       	adiw	r26, 0x01	; 1
    1230:	5c 93       	st	X, r21
    1232:	4e 93       	st	-X, r20
    1234:	01 96       	adiw	r24, 0x01	; 1
    1236:	2e 5f       	subi	r18, 0xFE	; 254
    1238:	3f 4f       	sbci	r19, 0xFF	; 255
    123a:	88 30       	cpi	r24, 0x08	; 8
    123c:	91 05       	cpc	r25, r1
    123e:	b1 f6       	brne	.-84     	; 0x11ec <lcd_putc+0x1c4>
    1240:	22 e0       	ldi	r18, 0x02	; 2
    1242:	c2 0e       	add	r12, r18
    1244:	d1 1c       	adc	r13, r1
    1246:	3f ef       	ldi	r19, 0xFF	; 255
    1248:	83 1a       	sub	r8, r19
    124a:	93 0a       	sbc	r9, r19
    124c:	c6 14       	cp	r12, r6
    124e:	d7 04       	cpc	r13, r7
    1250:	09 f0       	breq	.+2      	; 0x1254 <lcd_putc+0x22c>
    1252:	c0 cf       	rjmp	.-128    	; 0x11d4 <lcd_putc+0x1ac>
    1254:	e0 91 90 05 	lds	r30, 0x0590	; 0x800590 <cursorPosition+0x1>
    1258:	f0 e0       	ldi	r31, 0x00	; 0
    125a:	31 96       	adiw	r30, 0x01	; 1
    125c:	f6 95       	lsr	r31
    125e:	fe 2f       	mov	r31, r30
    1260:	ee 27       	eor	r30, r30
    1262:	f7 95       	ror	r31
    1264:	e7 95       	ror	r30
    1266:	df 01       	movw	r26, r30
    1268:	a4 0d       	add	r26, r4
    126a:	b5 1d       	adc	r27, r5
    126c:	a1 57       	subi	r26, 0x71	; 113
    126e:	be 4f       	sbci	r27, 0xFE	; 254
    1270:	e4 0d       	add	r30, r4
    1272:	f5 1d       	adc	r31, r5
    1274:	af 01       	movw	r20, r30
    1276:	41 5f       	subi	r20, 0xF1	; 241
    1278:	5e 4f       	sbci	r21, 0xFE	; 254
    127a:	f7 01       	movw	r30, r14
    127c:	80 81       	ld	r24, Z
    127e:	91 81       	ldd	r25, Z+1	; 0x01
    1280:	f2 e0       	ldi	r31, 0x02	; 2
    1282:	ef 0e       	add	r14, r31
    1284:	f1 1c       	adc	r15, r1
    1286:	9c 93       	st	X, r25
    1288:	11 96       	adiw	r26, 0x01	; 1
    128a:	9c 93       	st	X, r25
    128c:	11 97       	sbiw	r26, 0x01	; 1
    128e:	fa 01       	movw	r30, r20
    1290:	80 83       	st	Z, r24
    1292:	81 83       	std	Z+1, r24	; 0x01
    1294:	12 96       	adiw	r26, 0x02	; 2
    1296:	4e 5f       	subi	r20, 0xFE	; 254
    1298:	5f 4f       	sbci	r21, 0xFF	; 255
    129a:	e6 14       	cp	r14, r6
    129c:	f7 04       	cpc	r15, r7
    129e:	69 f7       	brne	.-38     	; 0x127a <lcd_putc+0x252>
    12a0:	8c e0       	ldi	r24, 0x0C	; 12
    12a2:	8b 0d       	add	r24, r11
    12a4:	80 93 8f 05 	sts	0x058F, r24	; 0x80058f <cursorPosition>
    12a8:	26 c0       	rjmp	.+76     	; 0x12f6 <lcd_putc+0x2ce>
    12aa:	ab 2d       	mov	r26, r11
    12ac:	b0 e0       	ldi	r27, 0x00	; 0
    12ae:	9d 01       	movw	r18, r26
    12b0:	2a 5f       	subi	r18, 0xFA	; 250
    12b2:	3f 4f       	sbci	r19, 0xFF	; 255
    12b4:	21 38       	cpi	r18, 0x81	; 129
    12b6:	31 05       	cpc	r19, r1
    12b8:	f0 f4       	brcc	.+60     	; 0x12f6 <lcd_putc+0x2ce>
    12ba:	20 91 90 05 	lds	r18, 0x0590	; 0x800590 <cursorPosition+0x1>
    12be:	90 e0       	ldi	r25, 0x00	; 0
    12c0:	fc 01       	movw	r30, r24
    12c2:	ee 0f       	add	r30, r30
    12c4:	ff 1f       	adc	r31, r31
    12c6:	e8 0f       	add	r30, r24
    12c8:	f9 1f       	adc	r31, r25
    12ca:	ee 0f       	add	r30, r30
    12cc:	ff 1f       	adc	r31, r31
    12ce:	e1 55       	subi	r30, 0x51	; 81
    12d0:	fe 4f       	sbci	r31, 0xFE	; 254
    12d2:	30 e8       	ldi	r19, 0x80	; 128
    12d4:	23 9f       	mul	r18, r19
    12d6:	a0 0d       	add	r26, r0
    12d8:	b1 1d       	adc	r27, r1
    12da:	11 24       	eor	r1, r1
    12dc:	a1 57       	subi	r26, 0x71	; 113
    12de:	be 4f       	sbci	r27, 0xFE	; 254
    12e0:	86 e0       	ldi	r24, 0x06	; 6
    12e2:	94 91       	lpm	r25, Z
    12e4:	9d 93       	st	X+, r25
    12e6:	81 50       	subi	r24, 0x01	; 1
    12e8:	31 96       	adiw	r30, 0x01	; 1
    12ea:	81 11       	cpse	r24, r1
    12ec:	fa cf       	rjmp	.-12     	; 0x12e2 <lcd_putc+0x2ba>
    12ee:	86 e0       	ldi	r24, 0x06	; 6
    12f0:	8b 0d       	add	r24, r11
    12f2:	80 93 8f 05 	sts	0x058F, r24	; 0x80058f <cursorPosition>
    12f6:	2c 96       	adiw	r28, 0x0c	; 12
    12f8:	0f b6       	in	r0, 0x3f	; 63
    12fa:	f8 94       	cli
    12fc:	de bf       	out	0x3e, r29	; 62
    12fe:	0f be       	out	0x3f, r0	; 63
    1300:	cd bf       	out	0x3d, r28	; 61
    1302:	df 91       	pop	r29
    1304:	cf 91       	pop	r28
    1306:	1f 91       	pop	r17
    1308:	0f 91       	pop	r16
    130a:	ff 90       	pop	r15
    130c:	ef 90       	pop	r14
    130e:	df 90       	pop	r13
    1310:	cf 90       	pop	r12
    1312:	bf 90       	pop	r11
    1314:	9f 90       	pop	r9
    1316:	8f 90       	pop	r8
    1318:	7f 90       	pop	r7
    131a:	6f 90       	pop	r6
    131c:	5f 90       	pop	r5
    131e:	4f 90       	pop	r4
    1320:	3f 90       	pop	r3
    1322:	2f 90       	pop	r2
    1324:	08 95       	ret

00001326 <lcd_charMode>:
    1326:	80 93 3d 01 	sts	0x013D, r24	; 0x80013d <charMode>
    132a:	08 95       	ret

0000132c <lcd_puts>:
    132c:	cf 93       	push	r28
    132e:	df 93       	push	r29
    1330:	ec 01       	movw	r28, r24
    1332:	88 81       	ld	r24, Y
    1334:	88 23       	and	r24, r24
    1336:	31 f0       	breq	.+12     	; 0x1344 <lcd_puts+0x18>
    1338:	21 96       	adiw	r28, 0x01	; 1
    133a:	0e 94 14 08 	call	0x1028	; 0x1028 <lcd_putc>
    133e:	89 91       	ld	r24, Y+
    1340:	81 11       	cpse	r24, r1
    1342:	fb cf       	rjmp	.-10     	; 0x133a <lcd_puts+0xe>
    1344:	df 91       	pop	r29
    1346:	cf 91       	pop	r28
    1348:	08 95       	ret

0000134a <lcd_display>:
void lcd_display() {
    134a:	0f 93       	push	r16
    134c:	1f 93       	push	r17
    134e:	cf 93       	push	r28
    1350:	0f e8       	ldi	r16, 0x8F	; 143
    1352:	11 e0       	ldi	r17, 0x01	; 1
#if defined (SSD1306) || defined (SSD1309)
    lcd_gotoxy(0,0);
    lcd_data(&displayBuffer[0][0], DISPLAY_WIDTH*DISPLAY_HEIGHT/8);
#elif defined SH1106
    for (uint8_t i = 0; i < DISPLAY_HEIGHT/8; i++){
    1354:	c0 e0       	ldi	r28, 0x00	; 0
        lcd_gotoxy(0,i);
    1356:	6c 2f       	mov	r22, r28
    1358:	80 e0       	ldi	r24, 0x00	; 0
    135a:	0e 94 b9 07 	call	0xf72	; 0xf72 <lcd_gotoxy>
        lcd_data(displayBuffer[i], sizeof(displayBuffer[i]));
    135e:	60 e8       	ldi	r22, 0x80	; 128
    1360:	70 e0       	ldi	r23, 0x00	; 0
    1362:	c8 01       	movw	r24, r16
    1364:	0e 94 62 07 	call	0xec4	; 0xec4 <lcd_data>
void lcd_display() {
#if defined (SSD1306) || defined (SSD1309)
    lcd_gotoxy(0,0);
    lcd_data(&displayBuffer[0][0], DISPLAY_WIDTH*DISPLAY_HEIGHT/8);
#elif defined SH1106
    for (uint8_t i = 0; i < DISPLAY_HEIGHT/8; i++){
    1368:	cf 5f       	subi	r28, 0xFF	; 255
    136a:	00 58       	subi	r16, 0x80	; 128
    136c:	1f 4f       	sbci	r17, 0xFF	; 255
    136e:	c8 30       	cpi	r28, 0x08	; 8
    1370:	91 f7       	brne	.-28     	; 0x1356 <lcd_display+0xc>
        lcd_gotoxy(0,i);
        lcd_data(displayBuffer[i], sizeof(displayBuffer[i]));
    }
#endif
}
    1372:	cf 91       	pop	r28
    1374:	1f 91       	pop	r17
    1376:	0f 91       	pop	r16
    1378:	08 95       	ret

0000137a <stateGet>:

extern uint8_t STATE = STATE_IDLE; 

uint8_t stateGet(void){
	return STATE;
}
    137a:	80 91 91 05 	lds	r24, 0x0591	; 0x800591 <STATE>
    137e:	08 95       	ret

00001380 <stateSet>:

uint8_t stateSet(uint8_t state){
	STATE = state;
    1380:	80 93 91 05 	sts	0x0591, r24	; 0x800591 <STATE>
	return 1;
    1384:	81 e0       	ldi	r24, 0x01	; 1
    1386:	08 95       	ret

00001388 <__vector_19>:

#ifndef NO_TX0_INTERRUPT

	ISR(UDRE0_INTERRUPT, ISR_NAKED)
	{
		asm volatile("\n\t"
    1388:	0f 93       	push	r16
    138a:	0f b7       	in	r16, 0x3f	; 63
    138c:	ef 93       	push	r30
    138e:	ff 93       	push	r31
    1390:	e0 91 2e 06 	lds	r30, 0x062E	; 0x80062e <tx0_Tail>
    1394:	f0 91 30 06 	lds	r31, 0x0630	; 0x800630 <tx0_Head>
    1398:	e3 95       	inc	r30
    139a:	ef 71       	andi	r30, 0x1F	; 31
    139c:	ef 13       	cpse	r30, r31
    139e:	05 c0       	rjmp	.+10     	; 0x13aa <USART0_TX_CONTINUE>
    13a0:	f0 91 c1 00 	lds	r31, 0x00C1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
    13a4:	ff 7d       	andi	r31, 0xDF	; 223
    13a6:	f0 93 c1 00 	sts	0x00C1, r31	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>

000013aa <USART0_TX_CONTINUE>:
    13aa:	e0 93 2e 06 	sts	0x062E, r30	; 0x80062e <tx0_Tail>
    13ae:	f0 e0       	ldi	r31, 0x00	; 0
    13b0:	ee 5c       	subi	r30, 0xCE	; 206
    13b2:	f9 4f       	sbci	r31, 0xF9	; 249
    13b4:	e0 81       	ld	r30, Z
    13b6:	e0 93 c6 00 	sts	0x00C6, r30	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>

000013ba <USART0_TX_EXIT>:
    13ba:	ff 91       	pop	r31
    13bc:	ef 91       	pop	r30
    13be:	0f bf       	out	0x3f, r16	; 63
    13c0:	0f 91       	pop	r16
    13c2:	18 95       	reti

000013c4 <__vector_18>:

#ifndef NO_RX0_INTERRUPT

	ISR(RX0_INTERRUPT, ISR_NAKED)
	{
		asm volatile("\n\t"
    13c4:	0f 93       	push	r16
    13c6:	0f b7       	in	r16, 0x3f	; 63
    13c8:	9f 93       	push	r25
    13ca:	90 91 c6 00 	lds	r25, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
    13ce:	ef 93       	push	r30
    13d0:	ff 93       	push	r31
    13d2:	e0 91 31 06 	lds	r30, 0x0631	; 0x800631 <rx0_Head>
    13d6:	f0 91 2f 06 	lds	r31, 0x062F	; 0x80062f <rx0_Tail>
    13da:	e3 95       	inc	r30
    13dc:	ef 71       	andi	r30, 0x1F	; 31
    13de:	fe 17       	cp	r31, r30
    13e0:	31 f0       	breq	.+12     	; 0x13ee <USART0_RX_EXIT>
    13e2:	e0 93 31 06 	sts	0x0631, r30	; 0x800631 <rx0_Head>
    13e6:	f0 e0       	ldi	r31, 0x00	; 0
    13e8:	e2 5f       	subi	r30, 0xF2	; 242
    13ea:	f9 4f       	sbci	r31, 0xF9	; 249
    13ec:	90 83       	st	Z, r25

000013ee <USART0_RX_EXIT>:
    13ee:	ff 91       	pop	r31
    13f0:	ef 91       	pop	r30
    13f2:	9f 91       	pop	r25
    13f4:	0f bf       	out	0x3f, r16	; 63
    13f6:	0f 91       	pop	r16
    13f8:	18 95       	reti

000013fa <vfprintf>:
    13fa:	a0 e1       	ldi	r26, 0x10	; 16
    13fc:	b0 e0       	ldi	r27, 0x00	; 0
    13fe:	e3 e0       	ldi	r30, 0x03	; 3
    1400:	fa e0       	ldi	r31, 0x0A	; 10
    1402:	0c 94 7a 0d 	jmp	0x1af4	; 0x1af4 <__prologue_saves__>
    1406:	7c 01       	movw	r14, r24
    1408:	1b 01       	movw	r2, r22
    140a:	6a 01       	movw	r12, r20
    140c:	fc 01       	movw	r30, r24
    140e:	17 82       	std	Z+7, r1	; 0x07
    1410:	16 82       	std	Z+6, r1	; 0x06
    1412:	83 81       	ldd	r24, Z+3	; 0x03
    1414:	81 ff       	sbrs	r24, 1
    1416:	44 c3       	rjmp	.+1672   	; 0x1aa0 <vfprintf+0x6a6>
    1418:	9e 01       	movw	r18, r28
    141a:	2f 5f       	subi	r18, 0xFF	; 255
    141c:	3f 4f       	sbci	r19, 0xFF	; 255
    141e:	39 01       	movw	r6, r18
    1420:	f7 01       	movw	r30, r14
    1422:	93 81       	ldd	r25, Z+3	; 0x03
    1424:	f1 01       	movw	r30, r2
    1426:	93 fd       	sbrc	r25, 3
    1428:	85 91       	lpm	r24, Z+
    142a:	93 ff       	sbrs	r25, 3
    142c:	81 91       	ld	r24, Z+
    142e:	1f 01       	movw	r2, r30
    1430:	88 23       	and	r24, r24
    1432:	09 f4       	brne	.+2      	; 0x1436 <vfprintf+0x3c>
    1434:	31 c3       	rjmp	.+1634   	; 0x1a98 <vfprintf+0x69e>
    1436:	85 32       	cpi	r24, 0x25	; 37
    1438:	39 f4       	brne	.+14     	; 0x1448 <vfprintf+0x4e>
    143a:	93 fd       	sbrc	r25, 3
    143c:	85 91       	lpm	r24, Z+
    143e:	93 ff       	sbrs	r25, 3
    1440:	81 91       	ld	r24, Z+
    1442:	1f 01       	movw	r2, r30
    1444:	85 32       	cpi	r24, 0x25	; 37
    1446:	39 f4       	brne	.+14     	; 0x1456 <vfprintf+0x5c>
    1448:	b7 01       	movw	r22, r14
    144a:	90 e0       	ldi	r25, 0x00	; 0
    144c:	0e 94 a7 10 	call	0x214e	; 0x214e <fputc>
    1450:	56 01       	movw	r10, r12
    1452:	65 01       	movw	r12, r10
    1454:	e5 cf       	rjmp	.-54     	; 0x1420 <vfprintf+0x26>
    1456:	10 e0       	ldi	r17, 0x00	; 0
    1458:	51 2c       	mov	r5, r1
    145a:	91 2c       	mov	r9, r1
    145c:	ff e1       	ldi	r31, 0x1F	; 31
    145e:	f9 15       	cp	r31, r9
    1460:	d8 f0       	brcs	.+54     	; 0x1498 <vfprintf+0x9e>
    1462:	8b 32       	cpi	r24, 0x2B	; 43
    1464:	79 f0       	breq	.+30     	; 0x1484 <vfprintf+0x8a>
    1466:	38 f4       	brcc	.+14     	; 0x1476 <vfprintf+0x7c>
    1468:	80 32       	cpi	r24, 0x20	; 32
    146a:	79 f0       	breq	.+30     	; 0x148a <vfprintf+0x90>
    146c:	83 32       	cpi	r24, 0x23	; 35
    146e:	a1 f4       	brne	.+40     	; 0x1498 <vfprintf+0x9e>
    1470:	f9 2d       	mov	r31, r9
    1472:	f0 61       	ori	r31, 0x10	; 16
    1474:	2e c0       	rjmp	.+92     	; 0x14d2 <vfprintf+0xd8>
    1476:	8d 32       	cpi	r24, 0x2D	; 45
    1478:	61 f0       	breq	.+24     	; 0x1492 <vfprintf+0x98>
    147a:	80 33       	cpi	r24, 0x30	; 48
    147c:	69 f4       	brne	.+26     	; 0x1498 <vfprintf+0x9e>
    147e:	29 2d       	mov	r18, r9
    1480:	21 60       	ori	r18, 0x01	; 1
    1482:	2d c0       	rjmp	.+90     	; 0x14de <vfprintf+0xe4>
    1484:	39 2d       	mov	r19, r9
    1486:	32 60       	ori	r19, 0x02	; 2
    1488:	93 2e       	mov	r9, r19
    148a:	89 2d       	mov	r24, r9
    148c:	84 60       	ori	r24, 0x04	; 4
    148e:	98 2e       	mov	r9, r24
    1490:	2a c0       	rjmp	.+84     	; 0x14e6 <vfprintf+0xec>
    1492:	e9 2d       	mov	r30, r9
    1494:	e8 60       	ori	r30, 0x08	; 8
    1496:	15 c0       	rjmp	.+42     	; 0x14c2 <vfprintf+0xc8>
    1498:	97 fc       	sbrc	r9, 7
    149a:	2d c0       	rjmp	.+90     	; 0x14f6 <vfprintf+0xfc>
    149c:	20 ed       	ldi	r18, 0xD0	; 208
    149e:	28 0f       	add	r18, r24
    14a0:	2a 30       	cpi	r18, 0x0A	; 10
    14a2:	88 f4       	brcc	.+34     	; 0x14c6 <vfprintf+0xcc>
    14a4:	96 fe       	sbrs	r9, 6
    14a6:	06 c0       	rjmp	.+12     	; 0x14b4 <vfprintf+0xba>
    14a8:	3a e0       	ldi	r19, 0x0A	; 10
    14aa:	13 9f       	mul	r17, r19
    14ac:	20 0d       	add	r18, r0
    14ae:	11 24       	eor	r1, r1
    14b0:	12 2f       	mov	r17, r18
    14b2:	19 c0       	rjmp	.+50     	; 0x14e6 <vfprintf+0xec>
    14b4:	8a e0       	ldi	r24, 0x0A	; 10
    14b6:	58 9e       	mul	r5, r24
    14b8:	20 0d       	add	r18, r0
    14ba:	11 24       	eor	r1, r1
    14bc:	52 2e       	mov	r5, r18
    14be:	e9 2d       	mov	r30, r9
    14c0:	e0 62       	ori	r30, 0x20	; 32
    14c2:	9e 2e       	mov	r9, r30
    14c4:	10 c0       	rjmp	.+32     	; 0x14e6 <vfprintf+0xec>
    14c6:	8e 32       	cpi	r24, 0x2E	; 46
    14c8:	31 f4       	brne	.+12     	; 0x14d6 <vfprintf+0xdc>
    14ca:	96 fc       	sbrc	r9, 6
    14cc:	e5 c2       	rjmp	.+1482   	; 0x1a98 <vfprintf+0x69e>
    14ce:	f9 2d       	mov	r31, r9
    14d0:	f0 64       	ori	r31, 0x40	; 64
    14d2:	9f 2e       	mov	r9, r31
    14d4:	08 c0       	rjmp	.+16     	; 0x14e6 <vfprintf+0xec>
    14d6:	8c 36       	cpi	r24, 0x6C	; 108
    14d8:	21 f4       	brne	.+8      	; 0x14e2 <vfprintf+0xe8>
    14da:	29 2d       	mov	r18, r9
    14dc:	20 68       	ori	r18, 0x80	; 128
    14de:	92 2e       	mov	r9, r18
    14e0:	02 c0       	rjmp	.+4      	; 0x14e6 <vfprintf+0xec>
    14e2:	88 36       	cpi	r24, 0x68	; 104
    14e4:	41 f4       	brne	.+16     	; 0x14f6 <vfprintf+0xfc>
    14e6:	f1 01       	movw	r30, r2
    14e8:	93 fd       	sbrc	r25, 3
    14ea:	85 91       	lpm	r24, Z+
    14ec:	93 ff       	sbrs	r25, 3
    14ee:	81 91       	ld	r24, Z+
    14f0:	1f 01       	movw	r2, r30
    14f2:	81 11       	cpse	r24, r1
    14f4:	b3 cf       	rjmp	.-154    	; 0x145c <vfprintf+0x62>
    14f6:	9b eb       	ldi	r25, 0xBB	; 187
    14f8:	98 0f       	add	r25, r24
    14fa:	93 30       	cpi	r25, 0x03	; 3
    14fc:	20 f4       	brcc	.+8      	; 0x1506 <vfprintf+0x10c>
    14fe:	99 2d       	mov	r25, r9
    1500:	90 61       	ori	r25, 0x10	; 16
    1502:	80 5e       	subi	r24, 0xE0	; 224
    1504:	07 c0       	rjmp	.+14     	; 0x1514 <vfprintf+0x11a>
    1506:	9b e9       	ldi	r25, 0x9B	; 155
    1508:	98 0f       	add	r25, r24
    150a:	93 30       	cpi	r25, 0x03	; 3
    150c:	08 f0       	brcs	.+2      	; 0x1510 <vfprintf+0x116>
    150e:	66 c1       	rjmp	.+716    	; 0x17dc <vfprintf+0x3e2>
    1510:	99 2d       	mov	r25, r9
    1512:	9f 7e       	andi	r25, 0xEF	; 239
    1514:	96 ff       	sbrs	r25, 6
    1516:	16 e0       	ldi	r17, 0x06	; 6
    1518:	9f 73       	andi	r25, 0x3F	; 63
    151a:	99 2e       	mov	r9, r25
    151c:	85 36       	cpi	r24, 0x65	; 101
    151e:	19 f4       	brne	.+6      	; 0x1526 <vfprintf+0x12c>
    1520:	90 64       	ori	r25, 0x40	; 64
    1522:	99 2e       	mov	r9, r25
    1524:	08 c0       	rjmp	.+16     	; 0x1536 <vfprintf+0x13c>
    1526:	86 36       	cpi	r24, 0x66	; 102
    1528:	21 f4       	brne	.+8      	; 0x1532 <vfprintf+0x138>
    152a:	39 2f       	mov	r19, r25
    152c:	30 68       	ori	r19, 0x80	; 128
    152e:	93 2e       	mov	r9, r19
    1530:	02 c0       	rjmp	.+4      	; 0x1536 <vfprintf+0x13c>
    1532:	11 11       	cpse	r17, r1
    1534:	11 50       	subi	r17, 0x01	; 1
    1536:	97 fe       	sbrs	r9, 7
    1538:	07 c0       	rjmp	.+14     	; 0x1548 <vfprintf+0x14e>
    153a:	1c 33       	cpi	r17, 0x3C	; 60
    153c:	50 f4       	brcc	.+20     	; 0x1552 <vfprintf+0x158>
    153e:	44 24       	eor	r4, r4
    1540:	43 94       	inc	r4
    1542:	41 0e       	add	r4, r17
    1544:	27 e0       	ldi	r18, 0x07	; 7
    1546:	0b c0       	rjmp	.+22     	; 0x155e <vfprintf+0x164>
    1548:	18 30       	cpi	r17, 0x08	; 8
    154a:	38 f0       	brcs	.+14     	; 0x155a <vfprintf+0x160>
    154c:	27 e0       	ldi	r18, 0x07	; 7
    154e:	17 e0       	ldi	r17, 0x07	; 7
    1550:	05 c0       	rjmp	.+10     	; 0x155c <vfprintf+0x162>
    1552:	27 e0       	ldi	r18, 0x07	; 7
    1554:	9c e3       	ldi	r25, 0x3C	; 60
    1556:	49 2e       	mov	r4, r25
    1558:	02 c0       	rjmp	.+4      	; 0x155e <vfprintf+0x164>
    155a:	21 2f       	mov	r18, r17
    155c:	41 2c       	mov	r4, r1
    155e:	56 01       	movw	r10, r12
    1560:	84 e0       	ldi	r24, 0x04	; 4
    1562:	a8 0e       	add	r10, r24
    1564:	b1 1c       	adc	r11, r1
    1566:	f6 01       	movw	r30, r12
    1568:	60 81       	ld	r22, Z
    156a:	71 81       	ldd	r23, Z+1	; 0x01
    156c:	82 81       	ldd	r24, Z+2	; 0x02
    156e:	93 81       	ldd	r25, Z+3	; 0x03
    1570:	04 2d       	mov	r16, r4
    1572:	a3 01       	movw	r20, r6
    1574:	0e 94 b9 0f 	call	0x1f72	; 0x1f72 <__ftoa_engine>
    1578:	6c 01       	movw	r12, r24
    157a:	f9 81       	ldd	r31, Y+1	; 0x01
    157c:	fc 87       	std	Y+12, r31	; 0x0c
    157e:	f0 ff       	sbrs	r31, 0
    1580:	02 c0       	rjmp	.+4      	; 0x1586 <vfprintf+0x18c>
    1582:	f3 ff       	sbrs	r31, 3
    1584:	06 c0       	rjmp	.+12     	; 0x1592 <vfprintf+0x198>
    1586:	91 fc       	sbrc	r9, 1
    1588:	06 c0       	rjmp	.+12     	; 0x1596 <vfprintf+0x19c>
    158a:	92 fe       	sbrs	r9, 2
    158c:	06 c0       	rjmp	.+12     	; 0x159a <vfprintf+0x1a0>
    158e:	00 e2       	ldi	r16, 0x20	; 32
    1590:	05 c0       	rjmp	.+10     	; 0x159c <vfprintf+0x1a2>
    1592:	0d e2       	ldi	r16, 0x2D	; 45
    1594:	03 c0       	rjmp	.+6      	; 0x159c <vfprintf+0x1a2>
    1596:	0b e2       	ldi	r16, 0x2B	; 43
    1598:	01 c0       	rjmp	.+2      	; 0x159c <vfprintf+0x1a2>
    159a:	00 e0       	ldi	r16, 0x00	; 0
    159c:	8c 85       	ldd	r24, Y+12	; 0x0c
    159e:	8c 70       	andi	r24, 0x0C	; 12
    15a0:	19 f0       	breq	.+6      	; 0x15a8 <vfprintf+0x1ae>
    15a2:	01 11       	cpse	r16, r1
    15a4:	5a c2       	rjmp	.+1204   	; 0x1a5a <vfprintf+0x660>
    15a6:	9b c2       	rjmp	.+1334   	; 0x1ade <vfprintf+0x6e4>
    15a8:	97 fe       	sbrs	r9, 7
    15aa:	10 c0       	rjmp	.+32     	; 0x15cc <vfprintf+0x1d2>
    15ac:	4c 0c       	add	r4, r12
    15ae:	fc 85       	ldd	r31, Y+12	; 0x0c
    15b0:	f4 ff       	sbrs	r31, 4
    15b2:	04 c0       	rjmp	.+8      	; 0x15bc <vfprintf+0x1c2>
    15b4:	8a 81       	ldd	r24, Y+2	; 0x02
    15b6:	81 33       	cpi	r24, 0x31	; 49
    15b8:	09 f4       	brne	.+2      	; 0x15bc <vfprintf+0x1c2>
    15ba:	4a 94       	dec	r4
    15bc:	14 14       	cp	r1, r4
    15be:	74 f5       	brge	.+92     	; 0x161c <vfprintf+0x222>
    15c0:	28 e0       	ldi	r18, 0x08	; 8
    15c2:	24 15       	cp	r18, r4
    15c4:	78 f5       	brcc	.+94     	; 0x1624 <vfprintf+0x22a>
    15c6:	88 e0       	ldi	r24, 0x08	; 8
    15c8:	48 2e       	mov	r4, r24
    15ca:	2c c0       	rjmp	.+88     	; 0x1624 <vfprintf+0x22a>
    15cc:	96 fc       	sbrc	r9, 6
    15ce:	2a c0       	rjmp	.+84     	; 0x1624 <vfprintf+0x22a>
    15d0:	81 2f       	mov	r24, r17
    15d2:	90 e0       	ldi	r25, 0x00	; 0
    15d4:	8c 15       	cp	r24, r12
    15d6:	9d 05       	cpc	r25, r13
    15d8:	9c f0       	brlt	.+38     	; 0x1600 <vfprintf+0x206>
    15da:	3c ef       	ldi	r19, 0xFC	; 252
    15dc:	c3 16       	cp	r12, r19
    15de:	3f ef       	ldi	r19, 0xFF	; 255
    15e0:	d3 06       	cpc	r13, r19
    15e2:	74 f0       	brlt	.+28     	; 0x1600 <vfprintf+0x206>
    15e4:	89 2d       	mov	r24, r9
    15e6:	80 68       	ori	r24, 0x80	; 128
    15e8:	98 2e       	mov	r9, r24
    15ea:	0a c0       	rjmp	.+20     	; 0x1600 <vfprintf+0x206>
    15ec:	e2 e0       	ldi	r30, 0x02	; 2
    15ee:	f0 e0       	ldi	r31, 0x00	; 0
    15f0:	ec 0f       	add	r30, r28
    15f2:	fd 1f       	adc	r31, r29
    15f4:	e1 0f       	add	r30, r17
    15f6:	f1 1d       	adc	r31, r1
    15f8:	80 81       	ld	r24, Z
    15fa:	80 33       	cpi	r24, 0x30	; 48
    15fc:	19 f4       	brne	.+6      	; 0x1604 <vfprintf+0x20a>
    15fe:	11 50       	subi	r17, 0x01	; 1
    1600:	11 11       	cpse	r17, r1
    1602:	f4 cf       	rjmp	.-24     	; 0x15ec <vfprintf+0x1f2>
    1604:	97 fe       	sbrs	r9, 7
    1606:	0e c0       	rjmp	.+28     	; 0x1624 <vfprintf+0x22a>
    1608:	44 24       	eor	r4, r4
    160a:	43 94       	inc	r4
    160c:	41 0e       	add	r4, r17
    160e:	81 2f       	mov	r24, r17
    1610:	90 e0       	ldi	r25, 0x00	; 0
    1612:	c8 16       	cp	r12, r24
    1614:	d9 06       	cpc	r13, r25
    1616:	2c f4       	brge	.+10     	; 0x1622 <vfprintf+0x228>
    1618:	1c 19       	sub	r17, r12
    161a:	04 c0       	rjmp	.+8      	; 0x1624 <vfprintf+0x22a>
    161c:	44 24       	eor	r4, r4
    161e:	43 94       	inc	r4
    1620:	01 c0       	rjmp	.+2      	; 0x1624 <vfprintf+0x22a>
    1622:	10 e0       	ldi	r17, 0x00	; 0
    1624:	97 fe       	sbrs	r9, 7
    1626:	06 c0       	rjmp	.+12     	; 0x1634 <vfprintf+0x23a>
    1628:	1c 14       	cp	r1, r12
    162a:	1d 04       	cpc	r1, r13
    162c:	34 f4       	brge	.+12     	; 0x163a <vfprintf+0x240>
    162e:	c6 01       	movw	r24, r12
    1630:	01 96       	adiw	r24, 0x01	; 1
    1632:	05 c0       	rjmp	.+10     	; 0x163e <vfprintf+0x244>
    1634:	85 e0       	ldi	r24, 0x05	; 5
    1636:	90 e0       	ldi	r25, 0x00	; 0
    1638:	02 c0       	rjmp	.+4      	; 0x163e <vfprintf+0x244>
    163a:	81 e0       	ldi	r24, 0x01	; 1
    163c:	90 e0       	ldi	r25, 0x00	; 0
    163e:	01 11       	cpse	r16, r1
    1640:	01 96       	adiw	r24, 0x01	; 1
    1642:	11 23       	and	r17, r17
    1644:	31 f0       	breq	.+12     	; 0x1652 <vfprintf+0x258>
    1646:	21 2f       	mov	r18, r17
    1648:	30 e0       	ldi	r19, 0x00	; 0
    164a:	2f 5f       	subi	r18, 0xFF	; 255
    164c:	3f 4f       	sbci	r19, 0xFF	; 255
    164e:	82 0f       	add	r24, r18
    1650:	93 1f       	adc	r25, r19
    1652:	25 2d       	mov	r18, r5
    1654:	30 e0       	ldi	r19, 0x00	; 0
    1656:	82 17       	cp	r24, r18
    1658:	93 07       	cpc	r25, r19
    165a:	14 f4       	brge	.+4      	; 0x1660 <vfprintf+0x266>
    165c:	58 1a       	sub	r5, r24
    165e:	01 c0       	rjmp	.+2      	; 0x1662 <vfprintf+0x268>
    1660:	51 2c       	mov	r5, r1
    1662:	89 2d       	mov	r24, r9
    1664:	89 70       	andi	r24, 0x09	; 9
    1666:	49 f4       	brne	.+18     	; 0x167a <vfprintf+0x280>
    1668:	55 20       	and	r5, r5
    166a:	39 f0       	breq	.+14     	; 0x167a <vfprintf+0x280>
    166c:	b7 01       	movw	r22, r14
    166e:	80 e2       	ldi	r24, 0x20	; 32
    1670:	90 e0       	ldi	r25, 0x00	; 0
    1672:	0e 94 a7 10 	call	0x214e	; 0x214e <fputc>
    1676:	5a 94       	dec	r5
    1678:	f7 cf       	rjmp	.-18     	; 0x1668 <vfprintf+0x26e>
    167a:	00 23       	and	r16, r16
    167c:	29 f0       	breq	.+10     	; 0x1688 <vfprintf+0x28e>
    167e:	b7 01       	movw	r22, r14
    1680:	80 2f       	mov	r24, r16
    1682:	90 e0       	ldi	r25, 0x00	; 0
    1684:	0e 94 a7 10 	call	0x214e	; 0x214e <fputc>
    1688:	93 fc       	sbrc	r9, 3
    168a:	09 c0       	rjmp	.+18     	; 0x169e <vfprintf+0x2a4>
    168c:	55 20       	and	r5, r5
    168e:	39 f0       	breq	.+14     	; 0x169e <vfprintf+0x2a4>
    1690:	b7 01       	movw	r22, r14
    1692:	80 e3       	ldi	r24, 0x30	; 48
    1694:	90 e0       	ldi	r25, 0x00	; 0
    1696:	0e 94 a7 10 	call	0x214e	; 0x214e <fputc>
    169a:	5a 94       	dec	r5
    169c:	f7 cf       	rjmp	.-18     	; 0x168c <vfprintf+0x292>
    169e:	97 fe       	sbrs	r9, 7
    16a0:	4c c0       	rjmp	.+152    	; 0x173a <vfprintf+0x340>
    16a2:	46 01       	movw	r8, r12
    16a4:	d7 fe       	sbrs	r13, 7
    16a6:	02 c0       	rjmp	.+4      	; 0x16ac <vfprintf+0x2b2>
    16a8:	81 2c       	mov	r8, r1
    16aa:	91 2c       	mov	r9, r1
    16ac:	c6 01       	movw	r24, r12
    16ae:	88 19       	sub	r24, r8
    16b0:	99 09       	sbc	r25, r9
    16b2:	f3 01       	movw	r30, r6
    16b4:	e8 0f       	add	r30, r24
    16b6:	f9 1f       	adc	r31, r25
    16b8:	fe 87       	std	Y+14, r31	; 0x0e
    16ba:	ed 87       	std	Y+13, r30	; 0x0d
    16bc:	96 01       	movw	r18, r12
    16be:	24 19       	sub	r18, r4
    16c0:	31 09       	sbc	r19, r1
    16c2:	38 8b       	std	Y+16, r19	; 0x10
    16c4:	2f 87       	std	Y+15, r18	; 0x0f
    16c6:	01 2f       	mov	r16, r17
    16c8:	10 e0       	ldi	r17, 0x00	; 0
    16ca:	11 95       	neg	r17
    16cc:	01 95       	neg	r16
    16ce:	11 09       	sbc	r17, r1
    16d0:	3f ef       	ldi	r19, 0xFF	; 255
    16d2:	83 16       	cp	r8, r19
    16d4:	93 06       	cpc	r9, r19
    16d6:	29 f4       	brne	.+10     	; 0x16e2 <vfprintf+0x2e8>
    16d8:	b7 01       	movw	r22, r14
    16da:	8e e2       	ldi	r24, 0x2E	; 46
    16dc:	90 e0       	ldi	r25, 0x00	; 0
    16de:	0e 94 a7 10 	call	0x214e	; 0x214e <fputc>
    16e2:	c8 14       	cp	r12, r8
    16e4:	d9 04       	cpc	r13, r9
    16e6:	4c f0       	brlt	.+18     	; 0x16fa <vfprintf+0x300>
    16e8:	8f 85       	ldd	r24, Y+15	; 0x0f
    16ea:	98 89       	ldd	r25, Y+16	; 0x10
    16ec:	88 15       	cp	r24, r8
    16ee:	99 05       	cpc	r25, r9
    16f0:	24 f4       	brge	.+8      	; 0x16fa <vfprintf+0x300>
    16f2:	ed 85       	ldd	r30, Y+13	; 0x0d
    16f4:	fe 85       	ldd	r31, Y+14	; 0x0e
    16f6:	81 81       	ldd	r24, Z+1	; 0x01
    16f8:	01 c0       	rjmp	.+2      	; 0x16fc <vfprintf+0x302>
    16fa:	80 e3       	ldi	r24, 0x30	; 48
    16fc:	f1 e0       	ldi	r31, 0x01	; 1
    16fe:	8f 1a       	sub	r8, r31
    1700:	91 08       	sbc	r9, r1
    1702:	2d 85       	ldd	r18, Y+13	; 0x0d
    1704:	3e 85       	ldd	r19, Y+14	; 0x0e
    1706:	2f 5f       	subi	r18, 0xFF	; 255
    1708:	3f 4f       	sbci	r19, 0xFF	; 255
    170a:	3e 87       	std	Y+14, r19	; 0x0e
    170c:	2d 87       	std	Y+13, r18	; 0x0d
    170e:	80 16       	cp	r8, r16
    1710:	91 06       	cpc	r9, r17
    1712:	2c f0       	brlt	.+10     	; 0x171e <vfprintf+0x324>
    1714:	b7 01       	movw	r22, r14
    1716:	90 e0       	ldi	r25, 0x00	; 0
    1718:	0e 94 a7 10 	call	0x214e	; 0x214e <fputc>
    171c:	d9 cf       	rjmp	.-78     	; 0x16d0 <vfprintf+0x2d6>
    171e:	c8 14       	cp	r12, r8
    1720:	d9 04       	cpc	r13, r9
    1722:	41 f4       	brne	.+16     	; 0x1734 <vfprintf+0x33a>
    1724:	9a 81       	ldd	r25, Y+2	; 0x02
    1726:	96 33       	cpi	r25, 0x36	; 54
    1728:	20 f4       	brcc	.+8      	; 0x1732 <vfprintf+0x338>
    172a:	95 33       	cpi	r25, 0x35	; 53
    172c:	19 f4       	brne	.+6      	; 0x1734 <vfprintf+0x33a>
    172e:	3c 85       	ldd	r19, Y+12	; 0x0c
    1730:	34 ff       	sbrs	r19, 4
    1732:	81 e3       	ldi	r24, 0x31	; 49
    1734:	b7 01       	movw	r22, r14
    1736:	90 e0       	ldi	r25, 0x00	; 0
    1738:	4e c0       	rjmp	.+156    	; 0x17d6 <vfprintf+0x3dc>
    173a:	8a 81       	ldd	r24, Y+2	; 0x02
    173c:	81 33       	cpi	r24, 0x31	; 49
    173e:	19 f0       	breq	.+6      	; 0x1746 <vfprintf+0x34c>
    1740:	9c 85       	ldd	r25, Y+12	; 0x0c
    1742:	9f 7e       	andi	r25, 0xEF	; 239
    1744:	9c 87       	std	Y+12, r25	; 0x0c
    1746:	b7 01       	movw	r22, r14
    1748:	90 e0       	ldi	r25, 0x00	; 0
    174a:	0e 94 a7 10 	call	0x214e	; 0x214e <fputc>
    174e:	11 11       	cpse	r17, r1
    1750:	05 c0       	rjmp	.+10     	; 0x175c <vfprintf+0x362>
    1752:	94 fc       	sbrc	r9, 4
    1754:	18 c0       	rjmp	.+48     	; 0x1786 <vfprintf+0x38c>
    1756:	85 e6       	ldi	r24, 0x65	; 101
    1758:	90 e0       	ldi	r25, 0x00	; 0
    175a:	17 c0       	rjmp	.+46     	; 0x178a <vfprintf+0x390>
    175c:	b7 01       	movw	r22, r14
    175e:	8e e2       	ldi	r24, 0x2E	; 46
    1760:	90 e0       	ldi	r25, 0x00	; 0
    1762:	0e 94 a7 10 	call	0x214e	; 0x214e <fputc>
    1766:	1e 5f       	subi	r17, 0xFE	; 254
    1768:	82 e0       	ldi	r24, 0x02	; 2
    176a:	01 e0       	ldi	r16, 0x01	; 1
    176c:	08 0f       	add	r16, r24
    176e:	f3 01       	movw	r30, r6
    1770:	e8 0f       	add	r30, r24
    1772:	f1 1d       	adc	r31, r1
    1774:	80 81       	ld	r24, Z
    1776:	b7 01       	movw	r22, r14
    1778:	90 e0       	ldi	r25, 0x00	; 0
    177a:	0e 94 a7 10 	call	0x214e	; 0x214e <fputc>
    177e:	80 2f       	mov	r24, r16
    1780:	01 13       	cpse	r16, r17
    1782:	f3 cf       	rjmp	.-26     	; 0x176a <vfprintf+0x370>
    1784:	e6 cf       	rjmp	.-52     	; 0x1752 <vfprintf+0x358>
    1786:	85 e4       	ldi	r24, 0x45	; 69
    1788:	90 e0       	ldi	r25, 0x00	; 0
    178a:	b7 01       	movw	r22, r14
    178c:	0e 94 a7 10 	call	0x214e	; 0x214e <fputc>
    1790:	d7 fc       	sbrc	r13, 7
    1792:	06 c0       	rjmp	.+12     	; 0x17a0 <vfprintf+0x3a6>
    1794:	c1 14       	cp	r12, r1
    1796:	d1 04       	cpc	r13, r1
    1798:	41 f4       	brne	.+16     	; 0x17aa <vfprintf+0x3b0>
    179a:	ec 85       	ldd	r30, Y+12	; 0x0c
    179c:	e4 ff       	sbrs	r30, 4
    179e:	05 c0       	rjmp	.+10     	; 0x17aa <vfprintf+0x3b0>
    17a0:	d1 94       	neg	r13
    17a2:	c1 94       	neg	r12
    17a4:	d1 08       	sbc	r13, r1
    17a6:	8d e2       	ldi	r24, 0x2D	; 45
    17a8:	01 c0       	rjmp	.+2      	; 0x17ac <vfprintf+0x3b2>
    17aa:	8b e2       	ldi	r24, 0x2B	; 43
    17ac:	b7 01       	movw	r22, r14
    17ae:	90 e0       	ldi	r25, 0x00	; 0
    17b0:	0e 94 a7 10 	call	0x214e	; 0x214e <fputc>
    17b4:	80 e3       	ldi	r24, 0x30	; 48
    17b6:	2a e0       	ldi	r18, 0x0A	; 10
    17b8:	c2 16       	cp	r12, r18
    17ba:	d1 04       	cpc	r13, r1
    17bc:	2c f0       	brlt	.+10     	; 0x17c8 <vfprintf+0x3ce>
    17be:	8f 5f       	subi	r24, 0xFF	; 255
    17c0:	fa e0       	ldi	r31, 0x0A	; 10
    17c2:	cf 1a       	sub	r12, r31
    17c4:	d1 08       	sbc	r13, r1
    17c6:	f7 cf       	rjmp	.-18     	; 0x17b6 <vfprintf+0x3bc>
    17c8:	b7 01       	movw	r22, r14
    17ca:	90 e0       	ldi	r25, 0x00	; 0
    17cc:	0e 94 a7 10 	call	0x214e	; 0x214e <fputc>
    17d0:	b7 01       	movw	r22, r14
    17d2:	c6 01       	movw	r24, r12
    17d4:	c0 96       	adiw	r24, 0x30	; 48
    17d6:	0e 94 a7 10 	call	0x214e	; 0x214e <fputc>
    17da:	54 c1       	rjmp	.+680    	; 0x1a84 <vfprintf+0x68a>
    17dc:	83 36       	cpi	r24, 0x63	; 99
    17de:	31 f0       	breq	.+12     	; 0x17ec <vfprintf+0x3f2>
    17e0:	83 37       	cpi	r24, 0x73	; 115
    17e2:	79 f0       	breq	.+30     	; 0x1802 <vfprintf+0x408>
    17e4:	83 35       	cpi	r24, 0x53	; 83
    17e6:	09 f0       	breq	.+2      	; 0x17ea <vfprintf+0x3f0>
    17e8:	56 c0       	rjmp	.+172    	; 0x1896 <vfprintf+0x49c>
    17ea:	20 c0       	rjmp	.+64     	; 0x182c <vfprintf+0x432>
    17ec:	56 01       	movw	r10, r12
    17ee:	32 e0       	ldi	r19, 0x02	; 2
    17f0:	a3 0e       	add	r10, r19
    17f2:	b1 1c       	adc	r11, r1
    17f4:	f6 01       	movw	r30, r12
    17f6:	80 81       	ld	r24, Z
    17f8:	89 83       	std	Y+1, r24	; 0x01
    17fa:	01 e0       	ldi	r16, 0x01	; 1
    17fc:	10 e0       	ldi	r17, 0x00	; 0
    17fe:	63 01       	movw	r12, r6
    1800:	12 c0       	rjmp	.+36     	; 0x1826 <vfprintf+0x42c>
    1802:	56 01       	movw	r10, r12
    1804:	f2 e0       	ldi	r31, 0x02	; 2
    1806:	af 0e       	add	r10, r31
    1808:	b1 1c       	adc	r11, r1
    180a:	f6 01       	movw	r30, r12
    180c:	c0 80       	ld	r12, Z
    180e:	d1 80       	ldd	r13, Z+1	; 0x01
    1810:	96 fe       	sbrs	r9, 6
    1812:	03 c0       	rjmp	.+6      	; 0x181a <vfprintf+0x420>
    1814:	61 2f       	mov	r22, r17
    1816:	70 e0       	ldi	r23, 0x00	; 0
    1818:	02 c0       	rjmp	.+4      	; 0x181e <vfprintf+0x424>
    181a:	6f ef       	ldi	r22, 0xFF	; 255
    181c:	7f ef       	ldi	r23, 0xFF	; 255
    181e:	c6 01       	movw	r24, r12
    1820:	0e 94 9c 10 	call	0x2138	; 0x2138 <strnlen>
    1824:	8c 01       	movw	r16, r24
    1826:	f9 2d       	mov	r31, r9
    1828:	ff 77       	andi	r31, 0x7F	; 127
    182a:	14 c0       	rjmp	.+40     	; 0x1854 <vfprintf+0x45a>
    182c:	56 01       	movw	r10, r12
    182e:	22 e0       	ldi	r18, 0x02	; 2
    1830:	a2 0e       	add	r10, r18
    1832:	b1 1c       	adc	r11, r1
    1834:	f6 01       	movw	r30, r12
    1836:	c0 80       	ld	r12, Z
    1838:	d1 80       	ldd	r13, Z+1	; 0x01
    183a:	96 fe       	sbrs	r9, 6
    183c:	03 c0       	rjmp	.+6      	; 0x1844 <vfprintf+0x44a>
    183e:	61 2f       	mov	r22, r17
    1840:	70 e0       	ldi	r23, 0x00	; 0
    1842:	02 c0       	rjmp	.+4      	; 0x1848 <vfprintf+0x44e>
    1844:	6f ef       	ldi	r22, 0xFF	; 255
    1846:	7f ef       	ldi	r23, 0xFF	; 255
    1848:	c6 01       	movw	r24, r12
    184a:	0e 94 91 10 	call	0x2122	; 0x2122 <strnlen_P>
    184e:	8c 01       	movw	r16, r24
    1850:	f9 2d       	mov	r31, r9
    1852:	f0 68       	ori	r31, 0x80	; 128
    1854:	9f 2e       	mov	r9, r31
    1856:	f3 fd       	sbrc	r31, 3
    1858:	1a c0       	rjmp	.+52     	; 0x188e <vfprintf+0x494>
    185a:	85 2d       	mov	r24, r5
    185c:	90 e0       	ldi	r25, 0x00	; 0
    185e:	08 17       	cp	r16, r24
    1860:	19 07       	cpc	r17, r25
    1862:	a8 f4       	brcc	.+42     	; 0x188e <vfprintf+0x494>
    1864:	b7 01       	movw	r22, r14
    1866:	80 e2       	ldi	r24, 0x20	; 32
    1868:	90 e0       	ldi	r25, 0x00	; 0
    186a:	0e 94 a7 10 	call	0x214e	; 0x214e <fputc>
    186e:	5a 94       	dec	r5
    1870:	f4 cf       	rjmp	.-24     	; 0x185a <vfprintf+0x460>
    1872:	f6 01       	movw	r30, r12
    1874:	97 fc       	sbrc	r9, 7
    1876:	85 91       	lpm	r24, Z+
    1878:	97 fe       	sbrs	r9, 7
    187a:	81 91       	ld	r24, Z+
    187c:	6f 01       	movw	r12, r30
    187e:	b7 01       	movw	r22, r14
    1880:	90 e0       	ldi	r25, 0x00	; 0
    1882:	0e 94 a7 10 	call	0x214e	; 0x214e <fputc>
    1886:	51 10       	cpse	r5, r1
    1888:	5a 94       	dec	r5
    188a:	01 50       	subi	r16, 0x01	; 1
    188c:	11 09       	sbc	r17, r1
    188e:	01 15       	cp	r16, r1
    1890:	11 05       	cpc	r17, r1
    1892:	79 f7       	brne	.-34     	; 0x1872 <vfprintf+0x478>
    1894:	f7 c0       	rjmp	.+494    	; 0x1a84 <vfprintf+0x68a>
    1896:	84 36       	cpi	r24, 0x64	; 100
    1898:	11 f0       	breq	.+4      	; 0x189e <vfprintf+0x4a4>
    189a:	89 36       	cpi	r24, 0x69	; 105
    189c:	61 f5       	brne	.+88     	; 0x18f6 <vfprintf+0x4fc>
    189e:	56 01       	movw	r10, r12
    18a0:	97 fe       	sbrs	r9, 7
    18a2:	09 c0       	rjmp	.+18     	; 0x18b6 <vfprintf+0x4bc>
    18a4:	24 e0       	ldi	r18, 0x04	; 4
    18a6:	a2 0e       	add	r10, r18
    18a8:	b1 1c       	adc	r11, r1
    18aa:	f6 01       	movw	r30, r12
    18ac:	60 81       	ld	r22, Z
    18ae:	71 81       	ldd	r23, Z+1	; 0x01
    18b0:	82 81       	ldd	r24, Z+2	; 0x02
    18b2:	93 81       	ldd	r25, Z+3	; 0x03
    18b4:	0a c0       	rjmp	.+20     	; 0x18ca <vfprintf+0x4d0>
    18b6:	f2 e0       	ldi	r31, 0x02	; 2
    18b8:	af 0e       	add	r10, r31
    18ba:	b1 1c       	adc	r11, r1
    18bc:	f6 01       	movw	r30, r12
    18be:	60 81       	ld	r22, Z
    18c0:	71 81       	ldd	r23, Z+1	; 0x01
    18c2:	07 2e       	mov	r0, r23
    18c4:	00 0c       	add	r0, r0
    18c6:	88 0b       	sbc	r24, r24
    18c8:	99 0b       	sbc	r25, r25
    18ca:	f9 2d       	mov	r31, r9
    18cc:	ff 76       	andi	r31, 0x6F	; 111
    18ce:	9f 2e       	mov	r9, r31
    18d0:	97 ff       	sbrs	r25, 7
    18d2:	09 c0       	rjmp	.+18     	; 0x18e6 <vfprintf+0x4ec>
    18d4:	90 95       	com	r25
    18d6:	80 95       	com	r24
    18d8:	70 95       	com	r23
    18da:	61 95       	neg	r22
    18dc:	7f 4f       	sbci	r23, 0xFF	; 255
    18de:	8f 4f       	sbci	r24, 0xFF	; 255
    18e0:	9f 4f       	sbci	r25, 0xFF	; 255
    18e2:	f0 68       	ori	r31, 0x80	; 128
    18e4:	9f 2e       	mov	r9, r31
    18e6:	2a e0       	ldi	r18, 0x0A	; 10
    18e8:	30 e0       	ldi	r19, 0x00	; 0
    18ea:	a3 01       	movw	r20, r6
    18ec:	0e 94 27 11 	call	0x224e	; 0x224e <__ultoa_invert>
    18f0:	c8 2e       	mov	r12, r24
    18f2:	c6 18       	sub	r12, r6
    18f4:	3f c0       	rjmp	.+126    	; 0x1974 <vfprintf+0x57a>
    18f6:	09 2d       	mov	r16, r9
    18f8:	85 37       	cpi	r24, 0x75	; 117
    18fa:	21 f4       	brne	.+8      	; 0x1904 <vfprintf+0x50a>
    18fc:	0f 7e       	andi	r16, 0xEF	; 239
    18fe:	2a e0       	ldi	r18, 0x0A	; 10
    1900:	30 e0       	ldi	r19, 0x00	; 0
    1902:	1d c0       	rjmp	.+58     	; 0x193e <vfprintf+0x544>
    1904:	09 7f       	andi	r16, 0xF9	; 249
    1906:	8f 36       	cpi	r24, 0x6F	; 111
    1908:	91 f0       	breq	.+36     	; 0x192e <vfprintf+0x534>
    190a:	18 f4       	brcc	.+6      	; 0x1912 <vfprintf+0x518>
    190c:	88 35       	cpi	r24, 0x58	; 88
    190e:	59 f0       	breq	.+22     	; 0x1926 <vfprintf+0x52c>
    1910:	c3 c0       	rjmp	.+390    	; 0x1a98 <vfprintf+0x69e>
    1912:	80 37       	cpi	r24, 0x70	; 112
    1914:	19 f0       	breq	.+6      	; 0x191c <vfprintf+0x522>
    1916:	88 37       	cpi	r24, 0x78	; 120
    1918:	11 f0       	breq	.+4      	; 0x191e <vfprintf+0x524>
    191a:	be c0       	rjmp	.+380    	; 0x1a98 <vfprintf+0x69e>
    191c:	00 61       	ori	r16, 0x10	; 16
    191e:	04 ff       	sbrs	r16, 4
    1920:	09 c0       	rjmp	.+18     	; 0x1934 <vfprintf+0x53a>
    1922:	04 60       	ori	r16, 0x04	; 4
    1924:	07 c0       	rjmp	.+14     	; 0x1934 <vfprintf+0x53a>
    1926:	94 fe       	sbrs	r9, 4
    1928:	08 c0       	rjmp	.+16     	; 0x193a <vfprintf+0x540>
    192a:	06 60       	ori	r16, 0x06	; 6
    192c:	06 c0       	rjmp	.+12     	; 0x193a <vfprintf+0x540>
    192e:	28 e0       	ldi	r18, 0x08	; 8
    1930:	30 e0       	ldi	r19, 0x00	; 0
    1932:	05 c0       	rjmp	.+10     	; 0x193e <vfprintf+0x544>
    1934:	20 e1       	ldi	r18, 0x10	; 16
    1936:	30 e0       	ldi	r19, 0x00	; 0
    1938:	02 c0       	rjmp	.+4      	; 0x193e <vfprintf+0x544>
    193a:	20 e1       	ldi	r18, 0x10	; 16
    193c:	32 e0       	ldi	r19, 0x02	; 2
    193e:	56 01       	movw	r10, r12
    1940:	07 ff       	sbrs	r16, 7
    1942:	09 c0       	rjmp	.+18     	; 0x1956 <vfprintf+0x55c>
    1944:	84 e0       	ldi	r24, 0x04	; 4
    1946:	a8 0e       	add	r10, r24
    1948:	b1 1c       	adc	r11, r1
    194a:	f6 01       	movw	r30, r12
    194c:	60 81       	ld	r22, Z
    194e:	71 81       	ldd	r23, Z+1	; 0x01
    1950:	82 81       	ldd	r24, Z+2	; 0x02
    1952:	93 81       	ldd	r25, Z+3	; 0x03
    1954:	08 c0       	rjmp	.+16     	; 0x1966 <vfprintf+0x56c>
    1956:	f2 e0       	ldi	r31, 0x02	; 2
    1958:	af 0e       	add	r10, r31
    195a:	b1 1c       	adc	r11, r1
    195c:	f6 01       	movw	r30, r12
    195e:	60 81       	ld	r22, Z
    1960:	71 81       	ldd	r23, Z+1	; 0x01
    1962:	80 e0       	ldi	r24, 0x00	; 0
    1964:	90 e0       	ldi	r25, 0x00	; 0
    1966:	a3 01       	movw	r20, r6
    1968:	0e 94 27 11 	call	0x224e	; 0x224e <__ultoa_invert>
    196c:	c8 2e       	mov	r12, r24
    196e:	c6 18       	sub	r12, r6
    1970:	0f 77       	andi	r16, 0x7F	; 127
    1972:	90 2e       	mov	r9, r16
    1974:	96 fe       	sbrs	r9, 6
    1976:	0b c0       	rjmp	.+22     	; 0x198e <vfprintf+0x594>
    1978:	09 2d       	mov	r16, r9
    197a:	0e 7f       	andi	r16, 0xFE	; 254
    197c:	c1 16       	cp	r12, r17
    197e:	50 f4       	brcc	.+20     	; 0x1994 <vfprintf+0x59a>
    1980:	94 fe       	sbrs	r9, 4
    1982:	0a c0       	rjmp	.+20     	; 0x1998 <vfprintf+0x59e>
    1984:	92 fc       	sbrc	r9, 2
    1986:	08 c0       	rjmp	.+16     	; 0x1998 <vfprintf+0x59e>
    1988:	09 2d       	mov	r16, r9
    198a:	0e 7e       	andi	r16, 0xEE	; 238
    198c:	05 c0       	rjmp	.+10     	; 0x1998 <vfprintf+0x59e>
    198e:	dc 2c       	mov	r13, r12
    1990:	09 2d       	mov	r16, r9
    1992:	03 c0       	rjmp	.+6      	; 0x199a <vfprintf+0x5a0>
    1994:	dc 2c       	mov	r13, r12
    1996:	01 c0       	rjmp	.+2      	; 0x199a <vfprintf+0x5a0>
    1998:	d1 2e       	mov	r13, r17
    199a:	04 ff       	sbrs	r16, 4
    199c:	0d c0       	rjmp	.+26     	; 0x19b8 <vfprintf+0x5be>
    199e:	fe 01       	movw	r30, r28
    19a0:	ec 0d       	add	r30, r12
    19a2:	f1 1d       	adc	r31, r1
    19a4:	80 81       	ld	r24, Z
    19a6:	80 33       	cpi	r24, 0x30	; 48
    19a8:	11 f4       	brne	.+4      	; 0x19ae <vfprintf+0x5b4>
    19aa:	09 7e       	andi	r16, 0xE9	; 233
    19ac:	09 c0       	rjmp	.+18     	; 0x19c0 <vfprintf+0x5c6>
    19ae:	02 ff       	sbrs	r16, 2
    19b0:	06 c0       	rjmp	.+12     	; 0x19be <vfprintf+0x5c4>
    19b2:	d3 94       	inc	r13
    19b4:	d3 94       	inc	r13
    19b6:	04 c0       	rjmp	.+8      	; 0x19c0 <vfprintf+0x5c6>
    19b8:	80 2f       	mov	r24, r16
    19ba:	86 78       	andi	r24, 0x86	; 134
    19bc:	09 f0       	breq	.+2      	; 0x19c0 <vfprintf+0x5c6>
    19be:	d3 94       	inc	r13
    19c0:	03 fd       	sbrc	r16, 3
    19c2:	11 c0       	rjmp	.+34     	; 0x19e6 <vfprintf+0x5ec>
    19c4:	00 ff       	sbrs	r16, 0
    19c6:	06 c0       	rjmp	.+12     	; 0x19d4 <vfprintf+0x5da>
    19c8:	1c 2d       	mov	r17, r12
    19ca:	d5 14       	cp	r13, r5
    19cc:	80 f4       	brcc	.+32     	; 0x19ee <vfprintf+0x5f4>
    19ce:	15 0d       	add	r17, r5
    19d0:	1d 19       	sub	r17, r13
    19d2:	0d c0       	rjmp	.+26     	; 0x19ee <vfprintf+0x5f4>
    19d4:	d5 14       	cp	r13, r5
    19d6:	58 f4       	brcc	.+22     	; 0x19ee <vfprintf+0x5f4>
    19d8:	b7 01       	movw	r22, r14
    19da:	80 e2       	ldi	r24, 0x20	; 32
    19dc:	90 e0       	ldi	r25, 0x00	; 0
    19de:	0e 94 a7 10 	call	0x214e	; 0x214e <fputc>
    19e2:	d3 94       	inc	r13
    19e4:	f7 cf       	rjmp	.-18     	; 0x19d4 <vfprintf+0x5da>
    19e6:	d5 14       	cp	r13, r5
    19e8:	10 f4       	brcc	.+4      	; 0x19ee <vfprintf+0x5f4>
    19ea:	5d 18       	sub	r5, r13
    19ec:	01 c0       	rjmp	.+2      	; 0x19f0 <vfprintf+0x5f6>
    19ee:	51 2c       	mov	r5, r1
    19f0:	04 ff       	sbrs	r16, 4
    19f2:	10 c0       	rjmp	.+32     	; 0x1a14 <vfprintf+0x61a>
    19f4:	b7 01       	movw	r22, r14
    19f6:	80 e3       	ldi	r24, 0x30	; 48
    19f8:	90 e0       	ldi	r25, 0x00	; 0
    19fa:	0e 94 a7 10 	call	0x214e	; 0x214e <fputc>
    19fe:	02 ff       	sbrs	r16, 2
    1a00:	17 c0       	rjmp	.+46     	; 0x1a30 <vfprintf+0x636>
    1a02:	01 fd       	sbrc	r16, 1
    1a04:	03 c0       	rjmp	.+6      	; 0x1a0c <vfprintf+0x612>
    1a06:	88 e7       	ldi	r24, 0x78	; 120
    1a08:	90 e0       	ldi	r25, 0x00	; 0
    1a0a:	02 c0       	rjmp	.+4      	; 0x1a10 <vfprintf+0x616>
    1a0c:	88 e5       	ldi	r24, 0x58	; 88
    1a0e:	90 e0       	ldi	r25, 0x00	; 0
    1a10:	b7 01       	movw	r22, r14
    1a12:	0c c0       	rjmp	.+24     	; 0x1a2c <vfprintf+0x632>
    1a14:	80 2f       	mov	r24, r16
    1a16:	86 78       	andi	r24, 0x86	; 134
    1a18:	59 f0       	breq	.+22     	; 0x1a30 <vfprintf+0x636>
    1a1a:	01 ff       	sbrs	r16, 1
    1a1c:	02 c0       	rjmp	.+4      	; 0x1a22 <vfprintf+0x628>
    1a1e:	8b e2       	ldi	r24, 0x2B	; 43
    1a20:	01 c0       	rjmp	.+2      	; 0x1a24 <vfprintf+0x62a>
    1a22:	80 e2       	ldi	r24, 0x20	; 32
    1a24:	07 fd       	sbrc	r16, 7
    1a26:	8d e2       	ldi	r24, 0x2D	; 45
    1a28:	b7 01       	movw	r22, r14
    1a2a:	90 e0       	ldi	r25, 0x00	; 0
    1a2c:	0e 94 a7 10 	call	0x214e	; 0x214e <fputc>
    1a30:	c1 16       	cp	r12, r17
    1a32:	38 f4       	brcc	.+14     	; 0x1a42 <vfprintf+0x648>
    1a34:	b7 01       	movw	r22, r14
    1a36:	80 e3       	ldi	r24, 0x30	; 48
    1a38:	90 e0       	ldi	r25, 0x00	; 0
    1a3a:	0e 94 a7 10 	call	0x214e	; 0x214e <fputc>
    1a3e:	11 50       	subi	r17, 0x01	; 1
    1a40:	f7 cf       	rjmp	.-18     	; 0x1a30 <vfprintf+0x636>
    1a42:	ca 94       	dec	r12
    1a44:	f3 01       	movw	r30, r6
    1a46:	ec 0d       	add	r30, r12
    1a48:	f1 1d       	adc	r31, r1
    1a4a:	80 81       	ld	r24, Z
    1a4c:	b7 01       	movw	r22, r14
    1a4e:	90 e0       	ldi	r25, 0x00	; 0
    1a50:	0e 94 a7 10 	call	0x214e	; 0x214e <fputc>
    1a54:	c1 10       	cpse	r12, r1
    1a56:	f5 cf       	rjmp	.-22     	; 0x1a42 <vfprintf+0x648>
    1a58:	15 c0       	rjmp	.+42     	; 0x1a84 <vfprintf+0x68a>
    1a5a:	f4 e0       	ldi	r31, 0x04	; 4
    1a5c:	f5 15       	cp	r31, r5
    1a5e:	60 f5       	brcc	.+88     	; 0x1ab8 <vfprintf+0x6be>
    1a60:	84 e0       	ldi	r24, 0x04	; 4
    1a62:	58 1a       	sub	r5, r24
    1a64:	93 fe       	sbrs	r9, 3
    1a66:	1f c0       	rjmp	.+62     	; 0x1aa6 <vfprintf+0x6ac>
    1a68:	01 11       	cpse	r16, r1
    1a6a:	27 c0       	rjmp	.+78     	; 0x1aba <vfprintf+0x6c0>
    1a6c:	2c 85       	ldd	r18, Y+12	; 0x0c
    1a6e:	23 ff       	sbrs	r18, 3
    1a70:	2a c0       	rjmp	.+84     	; 0x1ac6 <vfprintf+0x6cc>
    1a72:	08 e6       	ldi	r16, 0x68	; 104
    1a74:	10 e0       	ldi	r17, 0x00	; 0
    1a76:	39 2d       	mov	r19, r9
    1a78:	30 71       	andi	r19, 0x10	; 16
    1a7a:	93 2e       	mov	r9, r19
    1a7c:	f8 01       	movw	r30, r16
    1a7e:	84 91       	lpm	r24, Z
    1a80:	81 11       	cpse	r24, r1
    1a82:	24 c0       	rjmp	.+72     	; 0x1acc <vfprintf+0x6d2>
    1a84:	55 20       	and	r5, r5
    1a86:	09 f4       	brne	.+2      	; 0x1a8a <vfprintf+0x690>
    1a88:	e4 cc       	rjmp	.-1592   	; 0x1452 <vfprintf+0x58>
    1a8a:	b7 01       	movw	r22, r14
    1a8c:	80 e2       	ldi	r24, 0x20	; 32
    1a8e:	90 e0       	ldi	r25, 0x00	; 0
    1a90:	0e 94 a7 10 	call	0x214e	; 0x214e <fputc>
    1a94:	5a 94       	dec	r5
    1a96:	f6 cf       	rjmp	.-20     	; 0x1a84 <vfprintf+0x68a>
    1a98:	f7 01       	movw	r30, r14
    1a9a:	86 81       	ldd	r24, Z+6	; 0x06
    1a9c:	97 81       	ldd	r25, Z+7	; 0x07
    1a9e:	26 c0       	rjmp	.+76     	; 0x1aec <vfprintf+0x6f2>
    1aa0:	8f ef       	ldi	r24, 0xFF	; 255
    1aa2:	9f ef       	ldi	r25, 0xFF	; 255
    1aa4:	23 c0       	rjmp	.+70     	; 0x1aec <vfprintf+0x6f2>
    1aa6:	b7 01       	movw	r22, r14
    1aa8:	80 e2       	ldi	r24, 0x20	; 32
    1aaa:	90 e0       	ldi	r25, 0x00	; 0
    1aac:	0e 94 a7 10 	call	0x214e	; 0x214e <fputc>
    1ab0:	5a 94       	dec	r5
    1ab2:	51 10       	cpse	r5, r1
    1ab4:	f8 cf       	rjmp	.-16     	; 0x1aa6 <vfprintf+0x6ac>
    1ab6:	d8 cf       	rjmp	.-80     	; 0x1a68 <vfprintf+0x66e>
    1ab8:	51 2c       	mov	r5, r1
    1aba:	b7 01       	movw	r22, r14
    1abc:	80 2f       	mov	r24, r16
    1abe:	90 e0       	ldi	r25, 0x00	; 0
    1ac0:	0e 94 a7 10 	call	0x214e	; 0x214e <fputc>
    1ac4:	d3 cf       	rjmp	.-90     	; 0x1a6c <vfprintf+0x672>
    1ac6:	0c e6       	ldi	r16, 0x6C	; 108
    1ac8:	10 e0       	ldi	r17, 0x00	; 0
    1aca:	d5 cf       	rjmp	.-86     	; 0x1a76 <vfprintf+0x67c>
    1acc:	91 10       	cpse	r9, r1
    1ace:	80 52       	subi	r24, 0x20	; 32
    1ad0:	b7 01       	movw	r22, r14
    1ad2:	90 e0       	ldi	r25, 0x00	; 0
    1ad4:	0e 94 a7 10 	call	0x214e	; 0x214e <fputc>
    1ad8:	0f 5f       	subi	r16, 0xFF	; 255
    1ada:	1f 4f       	sbci	r17, 0xFF	; 255
    1adc:	cf cf       	rjmp	.-98     	; 0x1a7c <vfprintf+0x682>
    1ade:	23 e0       	ldi	r18, 0x03	; 3
    1ae0:	25 15       	cp	r18, r5
    1ae2:	10 f4       	brcc	.+4      	; 0x1ae8 <vfprintf+0x6ee>
    1ae4:	83 e0       	ldi	r24, 0x03	; 3
    1ae6:	bd cf       	rjmp	.-134    	; 0x1a62 <vfprintf+0x668>
    1ae8:	51 2c       	mov	r5, r1
    1aea:	c0 cf       	rjmp	.-128    	; 0x1a6c <vfprintf+0x672>
    1aec:	60 96       	adiw	r28, 0x10	; 16
    1aee:	e2 e1       	ldi	r30, 0x12	; 18
    1af0:	0c 94 96 0d 	jmp	0x1b2c	; 0x1b2c <__epilogue_restores__>

00001af4 <__prologue_saves__>:
    1af4:	2f 92       	push	r2
    1af6:	3f 92       	push	r3
    1af8:	4f 92       	push	r4
    1afa:	5f 92       	push	r5
    1afc:	6f 92       	push	r6
    1afe:	7f 92       	push	r7
    1b00:	8f 92       	push	r8
    1b02:	9f 92       	push	r9
    1b04:	af 92       	push	r10
    1b06:	bf 92       	push	r11
    1b08:	cf 92       	push	r12
    1b0a:	df 92       	push	r13
    1b0c:	ef 92       	push	r14
    1b0e:	ff 92       	push	r15
    1b10:	0f 93       	push	r16
    1b12:	1f 93       	push	r17
    1b14:	cf 93       	push	r28
    1b16:	df 93       	push	r29
    1b18:	cd b7       	in	r28, 0x3d	; 61
    1b1a:	de b7       	in	r29, 0x3e	; 62
    1b1c:	ca 1b       	sub	r28, r26
    1b1e:	db 0b       	sbc	r29, r27
    1b20:	0f b6       	in	r0, 0x3f	; 63
    1b22:	f8 94       	cli
    1b24:	de bf       	out	0x3e, r29	; 62
    1b26:	0f be       	out	0x3f, r0	; 63
    1b28:	cd bf       	out	0x3d, r28	; 61
    1b2a:	09 94       	ijmp

00001b2c <__epilogue_restores__>:
    1b2c:	2a 88       	ldd	r2, Y+18	; 0x12
    1b2e:	39 88       	ldd	r3, Y+17	; 0x11
    1b30:	48 88       	ldd	r4, Y+16	; 0x10
    1b32:	5f 84       	ldd	r5, Y+15	; 0x0f
    1b34:	6e 84       	ldd	r6, Y+14	; 0x0e
    1b36:	7d 84       	ldd	r7, Y+13	; 0x0d
    1b38:	8c 84       	ldd	r8, Y+12	; 0x0c
    1b3a:	9b 84       	ldd	r9, Y+11	; 0x0b
    1b3c:	aa 84       	ldd	r10, Y+10	; 0x0a
    1b3e:	b9 84       	ldd	r11, Y+9	; 0x09
    1b40:	c8 84       	ldd	r12, Y+8	; 0x08
    1b42:	df 80       	ldd	r13, Y+7	; 0x07
    1b44:	ee 80       	ldd	r14, Y+6	; 0x06
    1b46:	fd 80       	ldd	r15, Y+5	; 0x05
    1b48:	0c 81       	ldd	r16, Y+4	; 0x04
    1b4a:	1b 81       	ldd	r17, Y+3	; 0x03
    1b4c:	aa 81       	ldd	r26, Y+2	; 0x02
    1b4e:	b9 81       	ldd	r27, Y+1	; 0x01
    1b50:	ce 0f       	add	r28, r30
    1b52:	d1 1d       	adc	r29, r1
    1b54:	0f b6       	in	r0, 0x3f	; 63
    1b56:	f8 94       	cli
    1b58:	de bf       	out	0x3e, r29	; 62
    1b5a:	0f be       	out	0x3f, r0	; 63
    1b5c:	cd bf       	out	0x3d, r28	; 61
    1b5e:	ed 01       	movw	r28, r26
    1b60:	08 95       	ret

00001b62 <__subsf3>:
    1b62:	50 58       	subi	r21, 0x80	; 128

00001b64 <__addsf3>:
    1b64:	bb 27       	eor	r27, r27
    1b66:	aa 27       	eor	r26, r26
    1b68:	0e 94 c9 0d 	call	0x1b92	; 0x1b92 <__addsf3x>
    1b6c:	0c 94 0d 0f 	jmp	0x1e1a	; 0x1e1a <__fp_round>
    1b70:	0e 94 ff 0e 	call	0x1dfe	; 0x1dfe <__fp_pscA>
    1b74:	38 f0       	brcs	.+14     	; 0x1b84 <__addsf3+0x20>
    1b76:	0e 94 06 0f 	call	0x1e0c	; 0x1e0c <__fp_pscB>
    1b7a:	20 f0       	brcs	.+8      	; 0x1b84 <__addsf3+0x20>
    1b7c:	39 f4       	brne	.+14     	; 0x1b8c <__addsf3+0x28>
    1b7e:	9f 3f       	cpi	r25, 0xFF	; 255
    1b80:	19 f4       	brne	.+6      	; 0x1b88 <__addsf3+0x24>
    1b82:	26 f4       	brtc	.+8      	; 0x1b8c <__addsf3+0x28>
    1b84:	0c 94 fc 0e 	jmp	0x1df8	; 0x1df8 <__fp_nan>
    1b88:	0e f4       	brtc	.+2      	; 0x1b8c <__addsf3+0x28>
    1b8a:	e0 95       	com	r30
    1b8c:	e7 fb       	bst	r30, 7
    1b8e:	0c 94 f6 0e 	jmp	0x1dec	; 0x1dec <__fp_inf>

00001b92 <__addsf3x>:
    1b92:	e9 2f       	mov	r30, r25
    1b94:	0e 94 1e 0f 	call	0x1e3c	; 0x1e3c <__fp_split3>
    1b98:	58 f3       	brcs	.-42     	; 0x1b70 <__addsf3+0xc>
    1b9a:	ba 17       	cp	r27, r26
    1b9c:	62 07       	cpc	r22, r18
    1b9e:	73 07       	cpc	r23, r19
    1ba0:	84 07       	cpc	r24, r20
    1ba2:	95 07       	cpc	r25, r21
    1ba4:	20 f0       	brcs	.+8      	; 0x1bae <__addsf3x+0x1c>
    1ba6:	79 f4       	brne	.+30     	; 0x1bc6 <__addsf3x+0x34>
    1ba8:	a6 f5       	brtc	.+104    	; 0x1c12 <__addsf3x+0x80>
    1baa:	0c 94 40 0f 	jmp	0x1e80	; 0x1e80 <__fp_zero>
    1bae:	0e f4       	brtc	.+2      	; 0x1bb2 <__addsf3x+0x20>
    1bb0:	e0 95       	com	r30
    1bb2:	0b 2e       	mov	r0, r27
    1bb4:	ba 2f       	mov	r27, r26
    1bb6:	a0 2d       	mov	r26, r0
    1bb8:	0b 01       	movw	r0, r22
    1bba:	b9 01       	movw	r22, r18
    1bbc:	90 01       	movw	r18, r0
    1bbe:	0c 01       	movw	r0, r24
    1bc0:	ca 01       	movw	r24, r20
    1bc2:	a0 01       	movw	r20, r0
    1bc4:	11 24       	eor	r1, r1
    1bc6:	ff 27       	eor	r31, r31
    1bc8:	59 1b       	sub	r21, r25
    1bca:	99 f0       	breq	.+38     	; 0x1bf2 <__addsf3x+0x60>
    1bcc:	59 3f       	cpi	r21, 0xF9	; 249
    1bce:	50 f4       	brcc	.+20     	; 0x1be4 <__addsf3x+0x52>
    1bd0:	50 3e       	cpi	r21, 0xE0	; 224
    1bd2:	68 f1       	brcs	.+90     	; 0x1c2e <__addsf3x+0x9c>
    1bd4:	1a 16       	cp	r1, r26
    1bd6:	f0 40       	sbci	r31, 0x00	; 0
    1bd8:	a2 2f       	mov	r26, r18
    1bda:	23 2f       	mov	r18, r19
    1bdc:	34 2f       	mov	r19, r20
    1bde:	44 27       	eor	r20, r20
    1be0:	58 5f       	subi	r21, 0xF8	; 248
    1be2:	f3 cf       	rjmp	.-26     	; 0x1bca <__addsf3x+0x38>
    1be4:	46 95       	lsr	r20
    1be6:	37 95       	ror	r19
    1be8:	27 95       	ror	r18
    1bea:	a7 95       	ror	r26
    1bec:	f0 40       	sbci	r31, 0x00	; 0
    1bee:	53 95       	inc	r21
    1bf0:	c9 f7       	brne	.-14     	; 0x1be4 <__addsf3x+0x52>
    1bf2:	7e f4       	brtc	.+30     	; 0x1c12 <__addsf3x+0x80>
    1bf4:	1f 16       	cp	r1, r31
    1bf6:	ba 0b       	sbc	r27, r26
    1bf8:	62 0b       	sbc	r22, r18
    1bfa:	73 0b       	sbc	r23, r19
    1bfc:	84 0b       	sbc	r24, r20
    1bfe:	ba f0       	brmi	.+46     	; 0x1c2e <__addsf3x+0x9c>
    1c00:	91 50       	subi	r25, 0x01	; 1
    1c02:	a1 f0       	breq	.+40     	; 0x1c2c <__addsf3x+0x9a>
    1c04:	ff 0f       	add	r31, r31
    1c06:	bb 1f       	adc	r27, r27
    1c08:	66 1f       	adc	r22, r22
    1c0a:	77 1f       	adc	r23, r23
    1c0c:	88 1f       	adc	r24, r24
    1c0e:	c2 f7       	brpl	.-16     	; 0x1c00 <__addsf3x+0x6e>
    1c10:	0e c0       	rjmp	.+28     	; 0x1c2e <__addsf3x+0x9c>
    1c12:	ba 0f       	add	r27, r26
    1c14:	62 1f       	adc	r22, r18
    1c16:	73 1f       	adc	r23, r19
    1c18:	84 1f       	adc	r24, r20
    1c1a:	48 f4       	brcc	.+18     	; 0x1c2e <__addsf3x+0x9c>
    1c1c:	87 95       	ror	r24
    1c1e:	77 95       	ror	r23
    1c20:	67 95       	ror	r22
    1c22:	b7 95       	ror	r27
    1c24:	f7 95       	ror	r31
    1c26:	9e 3f       	cpi	r25, 0xFE	; 254
    1c28:	08 f0       	brcs	.+2      	; 0x1c2c <__addsf3x+0x9a>
    1c2a:	b0 cf       	rjmp	.-160    	; 0x1b8c <__addsf3+0x28>
    1c2c:	93 95       	inc	r25
    1c2e:	88 0f       	add	r24, r24
    1c30:	08 f0       	brcs	.+2      	; 0x1c34 <__addsf3x+0xa2>
    1c32:	99 27       	eor	r25, r25
    1c34:	ee 0f       	add	r30, r30
    1c36:	97 95       	ror	r25
    1c38:	87 95       	ror	r24
    1c3a:	08 95       	ret

00001c3c <__cmpsf2>:
    1c3c:	0e 94 d2 0e 	call	0x1da4	; 0x1da4 <__fp_cmp>
    1c40:	08 f4       	brcc	.+2      	; 0x1c44 <__cmpsf2+0x8>
    1c42:	81 e0       	ldi	r24, 0x01	; 1
    1c44:	08 95       	ret

00001c46 <__divsf3>:
    1c46:	0e 94 37 0e 	call	0x1c6e	; 0x1c6e <__divsf3x>
    1c4a:	0c 94 0d 0f 	jmp	0x1e1a	; 0x1e1a <__fp_round>
    1c4e:	0e 94 06 0f 	call	0x1e0c	; 0x1e0c <__fp_pscB>
    1c52:	58 f0       	brcs	.+22     	; 0x1c6a <__divsf3+0x24>
    1c54:	0e 94 ff 0e 	call	0x1dfe	; 0x1dfe <__fp_pscA>
    1c58:	40 f0       	brcs	.+16     	; 0x1c6a <__divsf3+0x24>
    1c5a:	29 f4       	brne	.+10     	; 0x1c66 <__divsf3+0x20>
    1c5c:	5f 3f       	cpi	r21, 0xFF	; 255
    1c5e:	29 f0       	breq	.+10     	; 0x1c6a <__divsf3+0x24>
    1c60:	0c 94 f6 0e 	jmp	0x1dec	; 0x1dec <__fp_inf>
    1c64:	51 11       	cpse	r21, r1
    1c66:	0c 94 41 0f 	jmp	0x1e82	; 0x1e82 <__fp_szero>
    1c6a:	0c 94 fc 0e 	jmp	0x1df8	; 0x1df8 <__fp_nan>

00001c6e <__divsf3x>:
    1c6e:	0e 94 1e 0f 	call	0x1e3c	; 0x1e3c <__fp_split3>
    1c72:	68 f3       	brcs	.-38     	; 0x1c4e <__divsf3+0x8>

00001c74 <__divsf3_pse>:
    1c74:	99 23       	and	r25, r25
    1c76:	b1 f3       	breq	.-20     	; 0x1c64 <__divsf3+0x1e>
    1c78:	55 23       	and	r21, r21
    1c7a:	91 f3       	breq	.-28     	; 0x1c60 <__divsf3+0x1a>
    1c7c:	95 1b       	sub	r25, r21
    1c7e:	55 0b       	sbc	r21, r21
    1c80:	bb 27       	eor	r27, r27
    1c82:	aa 27       	eor	r26, r26
    1c84:	62 17       	cp	r22, r18
    1c86:	73 07       	cpc	r23, r19
    1c88:	84 07       	cpc	r24, r20
    1c8a:	38 f0       	brcs	.+14     	; 0x1c9a <__divsf3_pse+0x26>
    1c8c:	9f 5f       	subi	r25, 0xFF	; 255
    1c8e:	5f 4f       	sbci	r21, 0xFF	; 255
    1c90:	22 0f       	add	r18, r18
    1c92:	33 1f       	adc	r19, r19
    1c94:	44 1f       	adc	r20, r20
    1c96:	aa 1f       	adc	r26, r26
    1c98:	a9 f3       	breq	.-22     	; 0x1c84 <__divsf3_pse+0x10>
    1c9a:	35 d0       	rcall	.+106    	; 0x1d06 <__divsf3_pse+0x92>
    1c9c:	0e 2e       	mov	r0, r30
    1c9e:	3a f0       	brmi	.+14     	; 0x1cae <__divsf3_pse+0x3a>
    1ca0:	e0 e8       	ldi	r30, 0x80	; 128
    1ca2:	32 d0       	rcall	.+100    	; 0x1d08 <__divsf3_pse+0x94>
    1ca4:	91 50       	subi	r25, 0x01	; 1
    1ca6:	50 40       	sbci	r21, 0x00	; 0
    1ca8:	e6 95       	lsr	r30
    1caa:	00 1c       	adc	r0, r0
    1cac:	ca f7       	brpl	.-14     	; 0x1ca0 <__divsf3_pse+0x2c>
    1cae:	2b d0       	rcall	.+86     	; 0x1d06 <__divsf3_pse+0x92>
    1cb0:	fe 2f       	mov	r31, r30
    1cb2:	29 d0       	rcall	.+82     	; 0x1d06 <__divsf3_pse+0x92>
    1cb4:	66 0f       	add	r22, r22
    1cb6:	77 1f       	adc	r23, r23
    1cb8:	88 1f       	adc	r24, r24
    1cba:	bb 1f       	adc	r27, r27
    1cbc:	26 17       	cp	r18, r22
    1cbe:	37 07       	cpc	r19, r23
    1cc0:	48 07       	cpc	r20, r24
    1cc2:	ab 07       	cpc	r26, r27
    1cc4:	b0 e8       	ldi	r27, 0x80	; 128
    1cc6:	09 f0       	breq	.+2      	; 0x1cca <__divsf3_pse+0x56>
    1cc8:	bb 0b       	sbc	r27, r27
    1cca:	80 2d       	mov	r24, r0
    1ccc:	bf 01       	movw	r22, r30
    1cce:	ff 27       	eor	r31, r31
    1cd0:	93 58       	subi	r25, 0x83	; 131
    1cd2:	5f 4f       	sbci	r21, 0xFF	; 255
    1cd4:	3a f0       	brmi	.+14     	; 0x1ce4 <__divsf3_pse+0x70>
    1cd6:	9e 3f       	cpi	r25, 0xFE	; 254
    1cd8:	51 05       	cpc	r21, r1
    1cda:	78 f0       	brcs	.+30     	; 0x1cfa <__divsf3_pse+0x86>
    1cdc:	0c 94 f6 0e 	jmp	0x1dec	; 0x1dec <__fp_inf>
    1ce0:	0c 94 41 0f 	jmp	0x1e82	; 0x1e82 <__fp_szero>
    1ce4:	5f 3f       	cpi	r21, 0xFF	; 255
    1ce6:	e4 f3       	brlt	.-8      	; 0x1ce0 <__divsf3_pse+0x6c>
    1ce8:	98 3e       	cpi	r25, 0xE8	; 232
    1cea:	d4 f3       	brlt	.-12     	; 0x1ce0 <__divsf3_pse+0x6c>
    1cec:	86 95       	lsr	r24
    1cee:	77 95       	ror	r23
    1cf0:	67 95       	ror	r22
    1cf2:	b7 95       	ror	r27
    1cf4:	f7 95       	ror	r31
    1cf6:	9f 5f       	subi	r25, 0xFF	; 255
    1cf8:	c9 f7       	brne	.-14     	; 0x1cec <__divsf3_pse+0x78>
    1cfa:	88 0f       	add	r24, r24
    1cfc:	91 1d       	adc	r25, r1
    1cfe:	96 95       	lsr	r25
    1d00:	87 95       	ror	r24
    1d02:	97 f9       	bld	r25, 7
    1d04:	08 95       	ret
    1d06:	e1 e0       	ldi	r30, 0x01	; 1
    1d08:	66 0f       	add	r22, r22
    1d0a:	77 1f       	adc	r23, r23
    1d0c:	88 1f       	adc	r24, r24
    1d0e:	bb 1f       	adc	r27, r27
    1d10:	62 17       	cp	r22, r18
    1d12:	73 07       	cpc	r23, r19
    1d14:	84 07       	cpc	r24, r20
    1d16:	ba 07       	cpc	r27, r26
    1d18:	20 f0       	brcs	.+8      	; 0x1d22 <__divsf3_pse+0xae>
    1d1a:	62 1b       	sub	r22, r18
    1d1c:	73 0b       	sbc	r23, r19
    1d1e:	84 0b       	sbc	r24, r20
    1d20:	ba 0b       	sbc	r27, r26
    1d22:	ee 1f       	adc	r30, r30
    1d24:	88 f7       	brcc	.-30     	; 0x1d08 <__divsf3_pse+0x94>
    1d26:	e0 95       	com	r30
    1d28:	08 95       	ret

00001d2a <__floatunsisf>:
    1d2a:	e8 94       	clt
    1d2c:	09 c0       	rjmp	.+18     	; 0x1d40 <__floatsisf+0x12>

00001d2e <__floatsisf>:
    1d2e:	97 fb       	bst	r25, 7
    1d30:	3e f4       	brtc	.+14     	; 0x1d40 <__floatsisf+0x12>
    1d32:	90 95       	com	r25
    1d34:	80 95       	com	r24
    1d36:	70 95       	com	r23
    1d38:	61 95       	neg	r22
    1d3a:	7f 4f       	sbci	r23, 0xFF	; 255
    1d3c:	8f 4f       	sbci	r24, 0xFF	; 255
    1d3e:	9f 4f       	sbci	r25, 0xFF	; 255
    1d40:	99 23       	and	r25, r25
    1d42:	a9 f0       	breq	.+42     	; 0x1d6e <__floatsisf+0x40>
    1d44:	f9 2f       	mov	r31, r25
    1d46:	96 e9       	ldi	r25, 0x96	; 150
    1d48:	bb 27       	eor	r27, r27
    1d4a:	93 95       	inc	r25
    1d4c:	f6 95       	lsr	r31
    1d4e:	87 95       	ror	r24
    1d50:	77 95       	ror	r23
    1d52:	67 95       	ror	r22
    1d54:	b7 95       	ror	r27
    1d56:	f1 11       	cpse	r31, r1
    1d58:	f8 cf       	rjmp	.-16     	; 0x1d4a <__floatsisf+0x1c>
    1d5a:	fa f4       	brpl	.+62     	; 0x1d9a <__floatsisf+0x6c>
    1d5c:	bb 0f       	add	r27, r27
    1d5e:	11 f4       	brne	.+4      	; 0x1d64 <__floatsisf+0x36>
    1d60:	60 ff       	sbrs	r22, 0
    1d62:	1b c0       	rjmp	.+54     	; 0x1d9a <__floatsisf+0x6c>
    1d64:	6f 5f       	subi	r22, 0xFF	; 255
    1d66:	7f 4f       	sbci	r23, 0xFF	; 255
    1d68:	8f 4f       	sbci	r24, 0xFF	; 255
    1d6a:	9f 4f       	sbci	r25, 0xFF	; 255
    1d6c:	16 c0       	rjmp	.+44     	; 0x1d9a <__floatsisf+0x6c>
    1d6e:	88 23       	and	r24, r24
    1d70:	11 f0       	breq	.+4      	; 0x1d76 <__floatsisf+0x48>
    1d72:	96 e9       	ldi	r25, 0x96	; 150
    1d74:	11 c0       	rjmp	.+34     	; 0x1d98 <__floatsisf+0x6a>
    1d76:	77 23       	and	r23, r23
    1d78:	21 f0       	breq	.+8      	; 0x1d82 <__floatsisf+0x54>
    1d7a:	9e e8       	ldi	r25, 0x8E	; 142
    1d7c:	87 2f       	mov	r24, r23
    1d7e:	76 2f       	mov	r23, r22
    1d80:	05 c0       	rjmp	.+10     	; 0x1d8c <__floatsisf+0x5e>
    1d82:	66 23       	and	r22, r22
    1d84:	71 f0       	breq	.+28     	; 0x1da2 <__floatsisf+0x74>
    1d86:	96 e8       	ldi	r25, 0x86	; 134
    1d88:	86 2f       	mov	r24, r22
    1d8a:	70 e0       	ldi	r23, 0x00	; 0
    1d8c:	60 e0       	ldi	r22, 0x00	; 0
    1d8e:	2a f0       	brmi	.+10     	; 0x1d9a <__floatsisf+0x6c>
    1d90:	9a 95       	dec	r25
    1d92:	66 0f       	add	r22, r22
    1d94:	77 1f       	adc	r23, r23
    1d96:	88 1f       	adc	r24, r24
    1d98:	da f7       	brpl	.-10     	; 0x1d90 <__floatsisf+0x62>
    1d9a:	88 0f       	add	r24, r24
    1d9c:	96 95       	lsr	r25
    1d9e:	87 95       	ror	r24
    1da0:	97 f9       	bld	r25, 7
    1da2:	08 95       	ret

00001da4 <__fp_cmp>:
    1da4:	99 0f       	add	r25, r25
    1da6:	00 08       	sbc	r0, r0
    1da8:	55 0f       	add	r21, r21
    1daa:	aa 0b       	sbc	r26, r26
    1dac:	e0 e8       	ldi	r30, 0x80	; 128
    1dae:	fe ef       	ldi	r31, 0xFE	; 254
    1db0:	16 16       	cp	r1, r22
    1db2:	17 06       	cpc	r1, r23
    1db4:	e8 07       	cpc	r30, r24
    1db6:	f9 07       	cpc	r31, r25
    1db8:	c0 f0       	brcs	.+48     	; 0x1dea <__fp_cmp+0x46>
    1dba:	12 16       	cp	r1, r18
    1dbc:	13 06       	cpc	r1, r19
    1dbe:	e4 07       	cpc	r30, r20
    1dc0:	f5 07       	cpc	r31, r21
    1dc2:	98 f0       	brcs	.+38     	; 0x1dea <__fp_cmp+0x46>
    1dc4:	62 1b       	sub	r22, r18
    1dc6:	73 0b       	sbc	r23, r19
    1dc8:	84 0b       	sbc	r24, r20
    1dca:	95 0b       	sbc	r25, r21
    1dcc:	39 f4       	brne	.+14     	; 0x1ddc <__fp_cmp+0x38>
    1dce:	0a 26       	eor	r0, r26
    1dd0:	61 f0       	breq	.+24     	; 0x1dea <__fp_cmp+0x46>
    1dd2:	23 2b       	or	r18, r19
    1dd4:	24 2b       	or	r18, r20
    1dd6:	25 2b       	or	r18, r21
    1dd8:	21 f4       	brne	.+8      	; 0x1de2 <__fp_cmp+0x3e>
    1dda:	08 95       	ret
    1ddc:	0a 26       	eor	r0, r26
    1dde:	09 f4       	brne	.+2      	; 0x1de2 <__fp_cmp+0x3e>
    1de0:	a1 40       	sbci	r26, 0x01	; 1
    1de2:	a6 95       	lsr	r26
    1de4:	8f ef       	ldi	r24, 0xFF	; 255
    1de6:	81 1d       	adc	r24, r1
    1de8:	81 1d       	adc	r24, r1
    1dea:	08 95       	ret

00001dec <__fp_inf>:
    1dec:	97 f9       	bld	r25, 7
    1dee:	9f 67       	ori	r25, 0x7F	; 127
    1df0:	80 e8       	ldi	r24, 0x80	; 128
    1df2:	70 e0       	ldi	r23, 0x00	; 0
    1df4:	60 e0       	ldi	r22, 0x00	; 0
    1df6:	08 95       	ret

00001df8 <__fp_nan>:
    1df8:	9f ef       	ldi	r25, 0xFF	; 255
    1dfa:	80 ec       	ldi	r24, 0xC0	; 192
    1dfc:	08 95       	ret

00001dfe <__fp_pscA>:
    1dfe:	00 24       	eor	r0, r0
    1e00:	0a 94       	dec	r0
    1e02:	16 16       	cp	r1, r22
    1e04:	17 06       	cpc	r1, r23
    1e06:	18 06       	cpc	r1, r24
    1e08:	09 06       	cpc	r0, r25
    1e0a:	08 95       	ret

00001e0c <__fp_pscB>:
    1e0c:	00 24       	eor	r0, r0
    1e0e:	0a 94       	dec	r0
    1e10:	12 16       	cp	r1, r18
    1e12:	13 06       	cpc	r1, r19
    1e14:	14 06       	cpc	r1, r20
    1e16:	05 06       	cpc	r0, r21
    1e18:	08 95       	ret

00001e1a <__fp_round>:
    1e1a:	09 2e       	mov	r0, r25
    1e1c:	03 94       	inc	r0
    1e1e:	00 0c       	add	r0, r0
    1e20:	11 f4       	brne	.+4      	; 0x1e26 <__fp_round+0xc>
    1e22:	88 23       	and	r24, r24
    1e24:	52 f0       	brmi	.+20     	; 0x1e3a <__fp_round+0x20>
    1e26:	bb 0f       	add	r27, r27
    1e28:	40 f4       	brcc	.+16     	; 0x1e3a <__fp_round+0x20>
    1e2a:	bf 2b       	or	r27, r31
    1e2c:	11 f4       	brne	.+4      	; 0x1e32 <__fp_round+0x18>
    1e2e:	60 ff       	sbrs	r22, 0
    1e30:	04 c0       	rjmp	.+8      	; 0x1e3a <__fp_round+0x20>
    1e32:	6f 5f       	subi	r22, 0xFF	; 255
    1e34:	7f 4f       	sbci	r23, 0xFF	; 255
    1e36:	8f 4f       	sbci	r24, 0xFF	; 255
    1e38:	9f 4f       	sbci	r25, 0xFF	; 255
    1e3a:	08 95       	ret

00001e3c <__fp_split3>:
    1e3c:	57 fd       	sbrc	r21, 7
    1e3e:	90 58       	subi	r25, 0x80	; 128
    1e40:	44 0f       	add	r20, r20
    1e42:	55 1f       	adc	r21, r21
    1e44:	59 f0       	breq	.+22     	; 0x1e5c <__fp_splitA+0x10>
    1e46:	5f 3f       	cpi	r21, 0xFF	; 255
    1e48:	71 f0       	breq	.+28     	; 0x1e66 <__fp_splitA+0x1a>
    1e4a:	47 95       	ror	r20

00001e4c <__fp_splitA>:
    1e4c:	88 0f       	add	r24, r24
    1e4e:	97 fb       	bst	r25, 7
    1e50:	99 1f       	adc	r25, r25
    1e52:	61 f0       	breq	.+24     	; 0x1e6c <__fp_splitA+0x20>
    1e54:	9f 3f       	cpi	r25, 0xFF	; 255
    1e56:	79 f0       	breq	.+30     	; 0x1e76 <__fp_splitA+0x2a>
    1e58:	87 95       	ror	r24
    1e5a:	08 95       	ret
    1e5c:	12 16       	cp	r1, r18
    1e5e:	13 06       	cpc	r1, r19
    1e60:	14 06       	cpc	r1, r20
    1e62:	55 1f       	adc	r21, r21
    1e64:	f2 cf       	rjmp	.-28     	; 0x1e4a <__fp_split3+0xe>
    1e66:	46 95       	lsr	r20
    1e68:	f1 df       	rcall	.-30     	; 0x1e4c <__fp_splitA>
    1e6a:	08 c0       	rjmp	.+16     	; 0x1e7c <__fp_splitA+0x30>
    1e6c:	16 16       	cp	r1, r22
    1e6e:	17 06       	cpc	r1, r23
    1e70:	18 06       	cpc	r1, r24
    1e72:	99 1f       	adc	r25, r25
    1e74:	f1 cf       	rjmp	.-30     	; 0x1e58 <__fp_splitA+0xc>
    1e76:	86 95       	lsr	r24
    1e78:	71 05       	cpc	r23, r1
    1e7a:	61 05       	cpc	r22, r1
    1e7c:	08 94       	sec
    1e7e:	08 95       	ret

00001e80 <__fp_zero>:
    1e80:	e8 94       	clt

00001e82 <__fp_szero>:
    1e82:	bb 27       	eor	r27, r27
    1e84:	66 27       	eor	r22, r22
    1e86:	77 27       	eor	r23, r23
    1e88:	cb 01       	movw	r24, r22
    1e8a:	97 f9       	bld	r25, 7
    1e8c:	08 95       	ret

00001e8e <__gesf2>:
    1e8e:	0e 94 d2 0e 	call	0x1da4	; 0x1da4 <__fp_cmp>
    1e92:	08 f4       	brcc	.+2      	; 0x1e96 <__gesf2+0x8>
    1e94:	8f ef       	ldi	r24, 0xFF	; 255
    1e96:	08 95       	ret

00001e98 <__mulsf3>:
    1e98:	0e 94 5f 0f 	call	0x1ebe	; 0x1ebe <__mulsf3x>
    1e9c:	0c 94 0d 0f 	jmp	0x1e1a	; 0x1e1a <__fp_round>
    1ea0:	0e 94 ff 0e 	call	0x1dfe	; 0x1dfe <__fp_pscA>
    1ea4:	38 f0       	brcs	.+14     	; 0x1eb4 <__mulsf3+0x1c>
    1ea6:	0e 94 06 0f 	call	0x1e0c	; 0x1e0c <__fp_pscB>
    1eaa:	20 f0       	brcs	.+8      	; 0x1eb4 <__mulsf3+0x1c>
    1eac:	95 23       	and	r25, r21
    1eae:	11 f0       	breq	.+4      	; 0x1eb4 <__mulsf3+0x1c>
    1eb0:	0c 94 f6 0e 	jmp	0x1dec	; 0x1dec <__fp_inf>
    1eb4:	0c 94 fc 0e 	jmp	0x1df8	; 0x1df8 <__fp_nan>
    1eb8:	11 24       	eor	r1, r1
    1eba:	0c 94 41 0f 	jmp	0x1e82	; 0x1e82 <__fp_szero>

00001ebe <__mulsf3x>:
    1ebe:	0e 94 1e 0f 	call	0x1e3c	; 0x1e3c <__fp_split3>
    1ec2:	70 f3       	brcs	.-36     	; 0x1ea0 <__mulsf3+0x8>

00001ec4 <__mulsf3_pse>:
    1ec4:	95 9f       	mul	r25, r21
    1ec6:	c1 f3       	breq	.-16     	; 0x1eb8 <__mulsf3+0x20>
    1ec8:	95 0f       	add	r25, r21
    1eca:	50 e0       	ldi	r21, 0x00	; 0
    1ecc:	55 1f       	adc	r21, r21
    1ece:	62 9f       	mul	r22, r18
    1ed0:	f0 01       	movw	r30, r0
    1ed2:	72 9f       	mul	r23, r18
    1ed4:	bb 27       	eor	r27, r27
    1ed6:	f0 0d       	add	r31, r0
    1ed8:	b1 1d       	adc	r27, r1
    1eda:	63 9f       	mul	r22, r19
    1edc:	aa 27       	eor	r26, r26
    1ede:	f0 0d       	add	r31, r0
    1ee0:	b1 1d       	adc	r27, r1
    1ee2:	aa 1f       	adc	r26, r26
    1ee4:	64 9f       	mul	r22, r20
    1ee6:	66 27       	eor	r22, r22
    1ee8:	b0 0d       	add	r27, r0
    1eea:	a1 1d       	adc	r26, r1
    1eec:	66 1f       	adc	r22, r22
    1eee:	82 9f       	mul	r24, r18
    1ef0:	22 27       	eor	r18, r18
    1ef2:	b0 0d       	add	r27, r0
    1ef4:	a1 1d       	adc	r26, r1
    1ef6:	62 1f       	adc	r22, r18
    1ef8:	73 9f       	mul	r23, r19
    1efa:	b0 0d       	add	r27, r0
    1efc:	a1 1d       	adc	r26, r1
    1efe:	62 1f       	adc	r22, r18
    1f00:	83 9f       	mul	r24, r19
    1f02:	a0 0d       	add	r26, r0
    1f04:	61 1d       	adc	r22, r1
    1f06:	22 1f       	adc	r18, r18
    1f08:	74 9f       	mul	r23, r20
    1f0a:	33 27       	eor	r19, r19
    1f0c:	a0 0d       	add	r26, r0
    1f0e:	61 1d       	adc	r22, r1
    1f10:	23 1f       	adc	r18, r19
    1f12:	84 9f       	mul	r24, r20
    1f14:	60 0d       	add	r22, r0
    1f16:	21 1d       	adc	r18, r1
    1f18:	82 2f       	mov	r24, r18
    1f1a:	76 2f       	mov	r23, r22
    1f1c:	6a 2f       	mov	r22, r26
    1f1e:	11 24       	eor	r1, r1
    1f20:	9f 57       	subi	r25, 0x7F	; 127
    1f22:	50 40       	sbci	r21, 0x00	; 0
    1f24:	9a f0       	brmi	.+38     	; 0x1f4c <__mulsf3_pse+0x88>
    1f26:	f1 f0       	breq	.+60     	; 0x1f64 <__mulsf3_pse+0xa0>
    1f28:	88 23       	and	r24, r24
    1f2a:	4a f0       	brmi	.+18     	; 0x1f3e <__mulsf3_pse+0x7a>
    1f2c:	ee 0f       	add	r30, r30
    1f2e:	ff 1f       	adc	r31, r31
    1f30:	bb 1f       	adc	r27, r27
    1f32:	66 1f       	adc	r22, r22
    1f34:	77 1f       	adc	r23, r23
    1f36:	88 1f       	adc	r24, r24
    1f38:	91 50       	subi	r25, 0x01	; 1
    1f3a:	50 40       	sbci	r21, 0x00	; 0
    1f3c:	a9 f7       	brne	.-22     	; 0x1f28 <__mulsf3_pse+0x64>
    1f3e:	9e 3f       	cpi	r25, 0xFE	; 254
    1f40:	51 05       	cpc	r21, r1
    1f42:	80 f0       	brcs	.+32     	; 0x1f64 <__mulsf3_pse+0xa0>
    1f44:	0c 94 f6 0e 	jmp	0x1dec	; 0x1dec <__fp_inf>
    1f48:	0c 94 41 0f 	jmp	0x1e82	; 0x1e82 <__fp_szero>
    1f4c:	5f 3f       	cpi	r21, 0xFF	; 255
    1f4e:	e4 f3       	brlt	.-8      	; 0x1f48 <__mulsf3_pse+0x84>
    1f50:	98 3e       	cpi	r25, 0xE8	; 232
    1f52:	d4 f3       	brlt	.-12     	; 0x1f48 <__mulsf3_pse+0x84>
    1f54:	86 95       	lsr	r24
    1f56:	77 95       	ror	r23
    1f58:	67 95       	ror	r22
    1f5a:	b7 95       	ror	r27
    1f5c:	f7 95       	ror	r31
    1f5e:	e7 95       	ror	r30
    1f60:	9f 5f       	subi	r25, 0xFF	; 255
    1f62:	c1 f7       	brne	.-16     	; 0x1f54 <__mulsf3_pse+0x90>
    1f64:	fe 2b       	or	r31, r30
    1f66:	88 0f       	add	r24, r24
    1f68:	91 1d       	adc	r25, r1
    1f6a:	96 95       	lsr	r25
    1f6c:	87 95       	ror	r24
    1f6e:	97 f9       	bld	r25, 7
    1f70:	08 95       	ret

00001f72 <__ftoa_engine>:
    1f72:	28 30       	cpi	r18, 0x08	; 8
    1f74:	08 f0       	brcs	.+2      	; 0x1f78 <__ftoa_engine+0x6>
    1f76:	27 e0       	ldi	r18, 0x07	; 7
    1f78:	33 27       	eor	r19, r19
    1f7a:	da 01       	movw	r26, r20
    1f7c:	99 0f       	add	r25, r25
    1f7e:	31 1d       	adc	r19, r1
    1f80:	87 fd       	sbrc	r24, 7
    1f82:	91 60       	ori	r25, 0x01	; 1
    1f84:	00 96       	adiw	r24, 0x00	; 0
    1f86:	61 05       	cpc	r22, r1
    1f88:	71 05       	cpc	r23, r1
    1f8a:	39 f4       	brne	.+14     	; 0x1f9a <__ftoa_engine+0x28>
    1f8c:	32 60       	ori	r19, 0x02	; 2
    1f8e:	2e 5f       	subi	r18, 0xFE	; 254
    1f90:	3d 93       	st	X+, r19
    1f92:	30 e3       	ldi	r19, 0x30	; 48
    1f94:	2a 95       	dec	r18
    1f96:	e1 f7       	brne	.-8      	; 0x1f90 <__ftoa_engine+0x1e>
    1f98:	08 95       	ret
    1f9a:	9f 3f       	cpi	r25, 0xFF	; 255
    1f9c:	30 f0       	brcs	.+12     	; 0x1faa <__ftoa_engine+0x38>
    1f9e:	80 38       	cpi	r24, 0x80	; 128
    1fa0:	71 05       	cpc	r23, r1
    1fa2:	61 05       	cpc	r22, r1
    1fa4:	09 f0       	breq	.+2      	; 0x1fa8 <__ftoa_engine+0x36>
    1fa6:	3c 5f       	subi	r19, 0xFC	; 252
    1fa8:	3c 5f       	subi	r19, 0xFC	; 252
    1faa:	3d 93       	st	X+, r19
    1fac:	91 30       	cpi	r25, 0x01	; 1
    1fae:	08 f0       	brcs	.+2      	; 0x1fb2 <__ftoa_engine+0x40>
    1fb0:	80 68       	ori	r24, 0x80	; 128
    1fb2:	91 1d       	adc	r25, r1
    1fb4:	df 93       	push	r29
    1fb6:	cf 93       	push	r28
    1fb8:	1f 93       	push	r17
    1fba:	0f 93       	push	r16
    1fbc:	ff 92       	push	r15
    1fbe:	ef 92       	push	r14
    1fc0:	19 2f       	mov	r17, r25
    1fc2:	98 7f       	andi	r25, 0xF8	; 248
    1fc4:	96 95       	lsr	r25
    1fc6:	e9 2f       	mov	r30, r25
    1fc8:	96 95       	lsr	r25
    1fca:	96 95       	lsr	r25
    1fcc:	e9 0f       	add	r30, r25
    1fce:	ff 27       	eor	r31, r31
    1fd0:	e6 53       	subi	r30, 0x36	; 54
    1fd2:	ff 4f       	sbci	r31, 0xFF	; 255
    1fd4:	99 27       	eor	r25, r25
    1fd6:	33 27       	eor	r19, r19
    1fd8:	ee 24       	eor	r14, r14
    1fda:	ff 24       	eor	r15, r15
    1fdc:	a7 01       	movw	r20, r14
    1fde:	e7 01       	movw	r28, r14
    1fe0:	05 90       	lpm	r0, Z+
    1fe2:	08 94       	sec
    1fe4:	07 94       	ror	r0
    1fe6:	28 f4       	brcc	.+10     	; 0x1ff2 <__ftoa_engine+0x80>
    1fe8:	36 0f       	add	r19, r22
    1fea:	e7 1e       	adc	r14, r23
    1fec:	f8 1e       	adc	r15, r24
    1fee:	49 1f       	adc	r20, r25
    1ff0:	51 1d       	adc	r21, r1
    1ff2:	66 0f       	add	r22, r22
    1ff4:	77 1f       	adc	r23, r23
    1ff6:	88 1f       	adc	r24, r24
    1ff8:	99 1f       	adc	r25, r25
    1ffa:	06 94       	lsr	r0
    1ffc:	a1 f7       	brne	.-24     	; 0x1fe6 <__ftoa_engine+0x74>
    1ffe:	05 90       	lpm	r0, Z+
    2000:	07 94       	ror	r0
    2002:	28 f4       	brcc	.+10     	; 0x200e <__ftoa_engine+0x9c>
    2004:	e7 0e       	add	r14, r23
    2006:	f8 1e       	adc	r15, r24
    2008:	49 1f       	adc	r20, r25
    200a:	56 1f       	adc	r21, r22
    200c:	c1 1d       	adc	r28, r1
    200e:	77 0f       	add	r23, r23
    2010:	88 1f       	adc	r24, r24
    2012:	99 1f       	adc	r25, r25
    2014:	66 1f       	adc	r22, r22
    2016:	06 94       	lsr	r0
    2018:	a1 f7       	brne	.-24     	; 0x2002 <__ftoa_engine+0x90>
    201a:	05 90       	lpm	r0, Z+
    201c:	07 94       	ror	r0
    201e:	28 f4       	brcc	.+10     	; 0x202a <__ftoa_engine+0xb8>
    2020:	f8 0e       	add	r15, r24
    2022:	49 1f       	adc	r20, r25
    2024:	56 1f       	adc	r21, r22
    2026:	c7 1f       	adc	r28, r23
    2028:	d1 1d       	adc	r29, r1
    202a:	88 0f       	add	r24, r24
    202c:	99 1f       	adc	r25, r25
    202e:	66 1f       	adc	r22, r22
    2030:	77 1f       	adc	r23, r23
    2032:	06 94       	lsr	r0
    2034:	a1 f7       	brne	.-24     	; 0x201e <__ftoa_engine+0xac>
    2036:	05 90       	lpm	r0, Z+
    2038:	07 94       	ror	r0
    203a:	20 f4       	brcc	.+8      	; 0x2044 <__ftoa_engine+0xd2>
    203c:	49 0f       	add	r20, r25
    203e:	56 1f       	adc	r21, r22
    2040:	c7 1f       	adc	r28, r23
    2042:	d8 1f       	adc	r29, r24
    2044:	99 0f       	add	r25, r25
    2046:	66 1f       	adc	r22, r22
    2048:	77 1f       	adc	r23, r23
    204a:	88 1f       	adc	r24, r24
    204c:	06 94       	lsr	r0
    204e:	a9 f7       	brne	.-22     	; 0x203a <__ftoa_engine+0xc8>
    2050:	84 91       	lpm	r24, Z
    2052:	10 95       	com	r17
    2054:	17 70       	andi	r17, 0x07	; 7
    2056:	41 f0       	breq	.+16     	; 0x2068 <__ftoa_engine+0xf6>
    2058:	d6 95       	lsr	r29
    205a:	c7 95       	ror	r28
    205c:	57 95       	ror	r21
    205e:	47 95       	ror	r20
    2060:	f7 94       	ror	r15
    2062:	e7 94       	ror	r14
    2064:	1a 95       	dec	r17
    2066:	c1 f7       	brne	.-16     	; 0x2058 <__ftoa_engine+0xe6>
    2068:	e0 e7       	ldi	r30, 0x70	; 112
    206a:	f0 e0       	ldi	r31, 0x00	; 0
    206c:	68 94       	set
    206e:	15 90       	lpm	r1, Z+
    2070:	15 91       	lpm	r17, Z+
    2072:	35 91       	lpm	r19, Z+
    2074:	65 91       	lpm	r22, Z+
    2076:	95 91       	lpm	r25, Z+
    2078:	05 90       	lpm	r0, Z+
    207a:	7f e2       	ldi	r23, 0x2F	; 47
    207c:	73 95       	inc	r23
    207e:	e1 18       	sub	r14, r1
    2080:	f1 0a       	sbc	r15, r17
    2082:	43 0b       	sbc	r20, r19
    2084:	56 0b       	sbc	r21, r22
    2086:	c9 0b       	sbc	r28, r25
    2088:	d0 09       	sbc	r29, r0
    208a:	c0 f7       	brcc	.-16     	; 0x207c <__ftoa_engine+0x10a>
    208c:	e1 0c       	add	r14, r1
    208e:	f1 1e       	adc	r15, r17
    2090:	43 1f       	adc	r20, r19
    2092:	56 1f       	adc	r21, r22
    2094:	c9 1f       	adc	r28, r25
    2096:	d0 1d       	adc	r29, r0
    2098:	7e f4       	brtc	.+30     	; 0x20b8 <__ftoa_engine+0x146>
    209a:	70 33       	cpi	r23, 0x30	; 48
    209c:	11 f4       	brne	.+4      	; 0x20a2 <__ftoa_engine+0x130>
    209e:	8a 95       	dec	r24
    20a0:	e6 cf       	rjmp	.-52     	; 0x206e <__ftoa_engine+0xfc>
    20a2:	e8 94       	clt
    20a4:	01 50       	subi	r16, 0x01	; 1
    20a6:	30 f0       	brcs	.+12     	; 0x20b4 <__ftoa_engine+0x142>
    20a8:	08 0f       	add	r16, r24
    20aa:	0a f4       	brpl	.+2      	; 0x20ae <__ftoa_engine+0x13c>
    20ac:	00 27       	eor	r16, r16
    20ae:	02 17       	cp	r16, r18
    20b0:	08 f4       	brcc	.+2      	; 0x20b4 <__ftoa_engine+0x142>
    20b2:	20 2f       	mov	r18, r16
    20b4:	23 95       	inc	r18
    20b6:	02 2f       	mov	r16, r18
    20b8:	7a 33       	cpi	r23, 0x3A	; 58
    20ba:	28 f0       	brcs	.+10     	; 0x20c6 <__ftoa_engine+0x154>
    20bc:	79 e3       	ldi	r23, 0x39	; 57
    20be:	7d 93       	st	X+, r23
    20c0:	2a 95       	dec	r18
    20c2:	e9 f7       	brne	.-6      	; 0x20be <__ftoa_engine+0x14c>
    20c4:	10 c0       	rjmp	.+32     	; 0x20e6 <__ftoa_engine+0x174>
    20c6:	7d 93       	st	X+, r23
    20c8:	2a 95       	dec	r18
    20ca:	89 f6       	brne	.-94     	; 0x206e <__ftoa_engine+0xfc>
    20cc:	06 94       	lsr	r0
    20ce:	97 95       	ror	r25
    20d0:	67 95       	ror	r22
    20d2:	37 95       	ror	r19
    20d4:	17 95       	ror	r17
    20d6:	17 94       	ror	r1
    20d8:	e1 18       	sub	r14, r1
    20da:	f1 0a       	sbc	r15, r17
    20dc:	43 0b       	sbc	r20, r19
    20de:	56 0b       	sbc	r21, r22
    20e0:	c9 0b       	sbc	r28, r25
    20e2:	d0 09       	sbc	r29, r0
    20e4:	98 f0       	brcs	.+38     	; 0x210c <__ftoa_engine+0x19a>
    20e6:	23 95       	inc	r18
    20e8:	7e 91       	ld	r23, -X
    20ea:	73 95       	inc	r23
    20ec:	7a 33       	cpi	r23, 0x3A	; 58
    20ee:	08 f0       	brcs	.+2      	; 0x20f2 <__ftoa_engine+0x180>
    20f0:	70 e3       	ldi	r23, 0x30	; 48
    20f2:	7c 93       	st	X, r23
    20f4:	20 13       	cpse	r18, r16
    20f6:	b8 f7       	brcc	.-18     	; 0x20e6 <__ftoa_engine+0x174>
    20f8:	7e 91       	ld	r23, -X
    20fa:	70 61       	ori	r23, 0x10	; 16
    20fc:	7d 93       	st	X+, r23
    20fe:	30 f0       	brcs	.+12     	; 0x210c <__ftoa_engine+0x19a>
    2100:	83 95       	inc	r24
    2102:	71 e3       	ldi	r23, 0x31	; 49
    2104:	7d 93       	st	X+, r23
    2106:	70 e3       	ldi	r23, 0x30	; 48
    2108:	2a 95       	dec	r18
    210a:	e1 f7       	brne	.-8      	; 0x2104 <__ftoa_engine+0x192>
    210c:	11 24       	eor	r1, r1
    210e:	ef 90       	pop	r14
    2110:	ff 90       	pop	r15
    2112:	0f 91       	pop	r16
    2114:	1f 91       	pop	r17
    2116:	cf 91       	pop	r28
    2118:	df 91       	pop	r29
    211a:	99 27       	eor	r25, r25
    211c:	87 fd       	sbrc	r24, 7
    211e:	90 95       	com	r25
    2120:	08 95       	ret

00002122 <strnlen_P>:
    2122:	fc 01       	movw	r30, r24
    2124:	05 90       	lpm	r0, Z+
    2126:	61 50       	subi	r22, 0x01	; 1
    2128:	70 40       	sbci	r23, 0x00	; 0
    212a:	01 10       	cpse	r0, r1
    212c:	d8 f7       	brcc	.-10     	; 0x2124 <strnlen_P+0x2>
    212e:	80 95       	com	r24
    2130:	90 95       	com	r25
    2132:	8e 0f       	add	r24, r30
    2134:	9f 1f       	adc	r25, r31
    2136:	08 95       	ret

00002138 <strnlen>:
    2138:	fc 01       	movw	r30, r24
    213a:	61 50       	subi	r22, 0x01	; 1
    213c:	70 40       	sbci	r23, 0x00	; 0
    213e:	01 90       	ld	r0, Z+
    2140:	01 10       	cpse	r0, r1
    2142:	d8 f7       	brcc	.-10     	; 0x213a <strnlen+0x2>
    2144:	80 95       	com	r24
    2146:	90 95       	com	r25
    2148:	8e 0f       	add	r24, r30
    214a:	9f 1f       	adc	r25, r31
    214c:	08 95       	ret

0000214e <fputc>:
    214e:	0f 93       	push	r16
    2150:	1f 93       	push	r17
    2152:	cf 93       	push	r28
    2154:	df 93       	push	r29
    2156:	fb 01       	movw	r30, r22
    2158:	23 81       	ldd	r18, Z+3	; 0x03
    215a:	21 fd       	sbrc	r18, 1
    215c:	03 c0       	rjmp	.+6      	; 0x2164 <fputc+0x16>
    215e:	8f ef       	ldi	r24, 0xFF	; 255
    2160:	9f ef       	ldi	r25, 0xFF	; 255
    2162:	2c c0       	rjmp	.+88     	; 0x21bc <fputc+0x6e>
    2164:	22 ff       	sbrs	r18, 2
    2166:	16 c0       	rjmp	.+44     	; 0x2194 <fputc+0x46>
    2168:	46 81       	ldd	r20, Z+6	; 0x06
    216a:	57 81       	ldd	r21, Z+7	; 0x07
    216c:	24 81       	ldd	r18, Z+4	; 0x04
    216e:	35 81       	ldd	r19, Z+5	; 0x05
    2170:	42 17       	cp	r20, r18
    2172:	53 07       	cpc	r21, r19
    2174:	44 f4       	brge	.+16     	; 0x2186 <fputc+0x38>
    2176:	a0 81       	ld	r26, Z
    2178:	b1 81       	ldd	r27, Z+1	; 0x01
    217a:	9d 01       	movw	r18, r26
    217c:	2f 5f       	subi	r18, 0xFF	; 255
    217e:	3f 4f       	sbci	r19, 0xFF	; 255
    2180:	31 83       	std	Z+1, r19	; 0x01
    2182:	20 83       	st	Z, r18
    2184:	8c 93       	st	X, r24
    2186:	26 81       	ldd	r18, Z+6	; 0x06
    2188:	37 81       	ldd	r19, Z+7	; 0x07
    218a:	2f 5f       	subi	r18, 0xFF	; 255
    218c:	3f 4f       	sbci	r19, 0xFF	; 255
    218e:	37 83       	std	Z+7, r19	; 0x07
    2190:	26 83       	std	Z+6, r18	; 0x06
    2192:	14 c0       	rjmp	.+40     	; 0x21bc <fputc+0x6e>
    2194:	8b 01       	movw	r16, r22
    2196:	ec 01       	movw	r28, r24
    2198:	fb 01       	movw	r30, r22
    219a:	00 84       	ldd	r0, Z+8	; 0x08
    219c:	f1 85       	ldd	r31, Z+9	; 0x09
    219e:	e0 2d       	mov	r30, r0
    21a0:	09 95       	icall
    21a2:	89 2b       	or	r24, r25
    21a4:	e1 f6       	brne	.-72     	; 0x215e <fputc+0x10>
    21a6:	d8 01       	movw	r26, r16
    21a8:	16 96       	adiw	r26, 0x06	; 6
    21aa:	8d 91       	ld	r24, X+
    21ac:	9c 91       	ld	r25, X
    21ae:	17 97       	sbiw	r26, 0x07	; 7
    21b0:	01 96       	adiw	r24, 0x01	; 1
    21b2:	17 96       	adiw	r26, 0x07	; 7
    21b4:	9c 93       	st	X, r25
    21b6:	8e 93       	st	-X, r24
    21b8:	16 97       	sbiw	r26, 0x06	; 6
    21ba:	ce 01       	movw	r24, r28
    21bc:	df 91       	pop	r29
    21be:	cf 91       	pop	r28
    21c0:	1f 91       	pop	r17
    21c2:	0f 91       	pop	r16
    21c4:	08 95       	ret

000021c6 <sprintf>:
    21c6:	ae e0       	ldi	r26, 0x0E	; 14
    21c8:	b0 e0       	ldi	r27, 0x00	; 0
    21ca:	e9 ee       	ldi	r30, 0xE9	; 233
    21cc:	f0 e1       	ldi	r31, 0x10	; 16
    21ce:	0c 94 88 0d 	jmp	0x1b10	; 0x1b10 <__prologue_saves__+0x1c>
    21d2:	0d 89       	ldd	r16, Y+21	; 0x15
    21d4:	1e 89       	ldd	r17, Y+22	; 0x16
    21d6:	86 e0       	ldi	r24, 0x06	; 6
    21d8:	8c 83       	std	Y+4, r24	; 0x04
    21da:	1a 83       	std	Y+2, r17	; 0x02
    21dc:	09 83       	std	Y+1, r16	; 0x01
    21de:	8f ef       	ldi	r24, 0xFF	; 255
    21e0:	9f e7       	ldi	r25, 0x7F	; 127
    21e2:	9e 83       	std	Y+6, r25	; 0x06
    21e4:	8d 83       	std	Y+5, r24	; 0x05
    21e6:	ae 01       	movw	r20, r28
    21e8:	47 5e       	subi	r20, 0xE7	; 231
    21ea:	5f 4f       	sbci	r21, 0xFF	; 255
    21ec:	6f 89       	ldd	r22, Y+23	; 0x17
    21ee:	78 8d       	ldd	r23, Y+24	; 0x18
    21f0:	ce 01       	movw	r24, r28
    21f2:	01 96       	adiw	r24, 0x01	; 1
    21f4:	0e 94 fd 09 	call	0x13fa	; 0x13fa <vfprintf>
    21f8:	ef 81       	ldd	r30, Y+7	; 0x07
    21fa:	f8 85       	ldd	r31, Y+8	; 0x08
    21fc:	e0 0f       	add	r30, r16
    21fe:	f1 1f       	adc	r31, r17
    2200:	10 82       	st	Z, r1
    2202:	2e 96       	adiw	r28, 0x0e	; 14
    2204:	e4 e0       	ldi	r30, 0x04	; 4
    2206:	0c 94 a4 0d 	jmp	0x1b48	; 0x1b48 <__epilogue_restores__+0x1c>

0000220a <sprintf_P>:
    220a:	ae e0       	ldi	r26, 0x0E	; 14
    220c:	b0 e0       	ldi	r27, 0x00	; 0
    220e:	eb e0       	ldi	r30, 0x0B	; 11
    2210:	f1 e1       	ldi	r31, 0x11	; 17
    2212:	0c 94 88 0d 	jmp	0x1b10	; 0x1b10 <__prologue_saves__+0x1c>
    2216:	0d 89       	ldd	r16, Y+21	; 0x15
    2218:	1e 89       	ldd	r17, Y+22	; 0x16
    221a:	8e e0       	ldi	r24, 0x0E	; 14
    221c:	8c 83       	std	Y+4, r24	; 0x04
    221e:	1a 83       	std	Y+2, r17	; 0x02
    2220:	09 83       	std	Y+1, r16	; 0x01
    2222:	8f ef       	ldi	r24, 0xFF	; 255
    2224:	9f e7       	ldi	r25, 0x7F	; 127
    2226:	9e 83       	std	Y+6, r25	; 0x06
    2228:	8d 83       	std	Y+5, r24	; 0x05
    222a:	ae 01       	movw	r20, r28
    222c:	47 5e       	subi	r20, 0xE7	; 231
    222e:	5f 4f       	sbci	r21, 0xFF	; 255
    2230:	6f 89       	ldd	r22, Y+23	; 0x17
    2232:	78 8d       	ldd	r23, Y+24	; 0x18
    2234:	ce 01       	movw	r24, r28
    2236:	01 96       	adiw	r24, 0x01	; 1
    2238:	0e 94 fd 09 	call	0x13fa	; 0x13fa <vfprintf>
    223c:	ef 81       	ldd	r30, Y+7	; 0x07
    223e:	f8 85       	ldd	r31, Y+8	; 0x08
    2240:	e0 0f       	add	r30, r16
    2242:	f1 1f       	adc	r31, r17
    2244:	10 82       	st	Z, r1
    2246:	2e 96       	adiw	r28, 0x0e	; 14
    2248:	e4 e0       	ldi	r30, 0x04	; 4
    224a:	0c 94 a4 0d 	jmp	0x1b48	; 0x1b48 <__epilogue_restores__+0x1c>

0000224e <__ultoa_invert>:
    224e:	fa 01       	movw	r30, r20
    2250:	aa 27       	eor	r26, r26
    2252:	28 30       	cpi	r18, 0x08	; 8
    2254:	51 f1       	breq	.+84     	; 0x22aa <__ultoa_invert+0x5c>
    2256:	20 31       	cpi	r18, 0x10	; 16
    2258:	81 f1       	breq	.+96     	; 0x22ba <__ultoa_invert+0x6c>
    225a:	e8 94       	clt
    225c:	6f 93       	push	r22
    225e:	6e 7f       	andi	r22, 0xFE	; 254
    2260:	6e 5f       	subi	r22, 0xFE	; 254
    2262:	7f 4f       	sbci	r23, 0xFF	; 255
    2264:	8f 4f       	sbci	r24, 0xFF	; 255
    2266:	9f 4f       	sbci	r25, 0xFF	; 255
    2268:	af 4f       	sbci	r26, 0xFF	; 255
    226a:	b1 e0       	ldi	r27, 0x01	; 1
    226c:	3e d0       	rcall	.+124    	; 0x22ea <__ultoa_invert+0x9c>
    226e:	b4 e0       	ldi	r27, 0x04	; 4
    2270:	3c d0       	rcall	.+120    	; 0x22ea <__ultoa_invert+0x9c>
    2272:	67 0f       	add	r22, r23
    2274:	78 1f       	adc	r23, r24
    2276:	89 1f       	adc	r24, r25
    2278:	9a 1f       	adc	r25, r26
    227a:	a1 1d       	adc	r26, r1
    227c:	68 0f       	add	r22, r24
    227e:	79 1f       	adc	r23, r25
    2280:	8a 1f       	adc	r24, r26
    2282:	91 1d       	adc	r25, r1
    2284:	a1 1d       	adc	r26, r1
    2286:	6a 0f       	add	r22, r26
    2288:	71 1d       	adc	r23, r1
    228a:	81 1d       	adc	r24, r1
    228c:	91 1d       	adc	r25, r1
    228e:	a1 1d       	adc	r26, r1
    2290:	20 d0       	rcall	.+64     	; 0x22d2 <__ultoa_invert+0x84>
    2292:	09 f4       	brne	.+2      	; 0x2296 <__ultoa_invert+0x48>
    2294:	68 94       	set
    2296:	3f 91       	pop	r19
    2298:	2a e0       	ldi	r18, 0x0A	; 10
    229a:	26 9f       	mul	r18, r22
    229c:	11 24       	eor	r1, r1
    229e:	30 19       	sub	r19, r0
    22a0:	30 5d       	subi	r19, 0xD0	; 208
    22a2:	31 93       	st	Z+, r19
    22a4:	de f6       	brtc	.-74     	; 0x225c <__ultoa_invert+0xe>
    22a6:	cf 01       	movw	r24, r30
    22a8:	08 95       	ret
    22aa:	46 2f       	mov	r20, r22
    22ac:	47 70       	andi	r20, 0x07	; 7
    22ae:	40 5d       	subi	r20, 0xD0	; 208
    22b0:	41 93       	st	Z+, r20
    22b2:	b3 e0       	ldi	r27, 0x03	; 3
    22b4:	0f d0       	rcall	.+30     	; 0x22d4 <__ultoa_invert+0x86>
    22b6:	c9 f7       	brne	.-14     	; 0x22aa <__ultoa_invert+0x5c>
    22b8:	f6 cf       	rjmp	.-20     	; 0x22a6 <__ultoa_invert+0x58>
    22ba:	46 2f       	mov	r20, r22
    22bc:	4f 70       	andi	r20, 0x0F	; 15
    22be:	40 5d       	subi	r20, 0xD0	; 208
    22c0:	4a 33       	cpi	r20, 0x3A	; 58
    22c2:	18 f0       	brcs	.+6      	; 0x22ca <__ultoa_invert+0x7c>
    22c4:	49 5d       	subi	r20, 0xD9	; 217
    22c6:	31 fd       	sbrc	r19, 1
    22c8:	40 52       	subi	r20, 0x20	; 32
    22ca:	41 93       	st	Z+, r20
    22cc:	02 d0       	rcall	.+4      	; 0x22d2 <__ultoa_invert+0x84>
    22ce:	a9 f7       	brne	.-22     	; 0x22ba <__ultoa_invert+0x6c>
    22d0:	ea cf       	rjmp	.-44     	; 0x22a6 <__ultoa_invert+0x58>
    22d2:	b4 e0       	ldi	r27, 0x04	; 4
    22d4:	a6 95       	lsr	r26
    22d6:	97 95       	ror	r25
    22d8:	87 95       	ror	r24
    22da:	77 95       	ror	r23
    22dc:	67 95       	ror	r22
    22de:	ba 95       	dec	r27
    22e0:	c9 f7       	brne	.-14     	; 0x22d4 <__ultoa_invert+0x86>
    22e2:	00 97       	sbiw	r24, 0x00	; 0
    22e4:	61 05       	cpc	r22, r1
    22e6:	71 05       	cpc	r23, r1
    22e8:	08 95       	ret
    22ea:	9b 01       	movw	r18, r22
    22ec:	ac 01       	movw	r20, r24
    22ee:	0a 2e       	mov	r0, r26
    22f0:	06 94       	lsr	r0
    22f2:	57 95       	ror	r21
    22f4:	47 95       	ror	r20
    22f6:	37 95       	ror	r19
    22f8:	27 95       	ror	r18
    22fa:	ba 95       	dec	r27
    22fc:	c9 f7       	brne	.-14     	; 0x22f0 <__ultoa_invert+0xa2>
    22fe:	62 0f       	add	r22, r18
    2300:	73 1f       	adc	r23, r19
    2302:	84 1f       	adc	r24, r20
    2304:	95 1f       	adc	r25, r21
    2306:	a0 1d       	adc	r26, r0
    2308:	08 95       	ret

0000230a <_exit>:
    230a:	f8 94       	cli

0000230c <__stop_program>:
    230c:	ff cf       	rjmp	.-2      	; 0x230c <__stop_program>
